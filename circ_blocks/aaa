Options { path: "ceno_demo/ceno_verifier", skip_linred: false, circ: CircOpt { r1cs: R1csOpt { verified: false, profile: false, div_by_zero: Incomplete, lc_elim_thresh: 50 }, field: FieldOpt { builtin: Goldilocks, custom_modulus: "" }, ir: IrOpt { field_to_bv: Wrap, frequent_gc: false }, ram: RamOpt { enabled: false, range: Sort, index: Uniqueness, permutation: Msh, rom: Haboeck }, fmt: FmtOpt { use_default_field: true, hide_field: false }, zsharp: ZsharpOpt { isolate_asserts: true }, datalog: DatalogOpt { rec_limit: 5, lint_prim_rec: false }, c: COpt { sv_functions: false, assert_no_ub: false } }, action: Count, quiet: false, no_opt: false, verbose_opt: false, inline_spartan: false }
Generating Compiler Time Data...
STRUCT_TY: ZKVMVerifier { vk: ZKVMVerifyingKey { circuit_vks_key: VerifyingKey { cs: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] } }[0], circuit_vks_name: field[0][0] } }
STRUCT_TY: ZKVMVerifyingKey { circuit_vks_key: VerifyingKey { cs: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] } }[0], circuit_vks_name: field[0][0] }
NON_STRUCT_TY: VerifyingKey { cs: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] } }[0]
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: field[0]
STRUCT_TY: VerifyingKey { cs: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] } }
STRUCT_TY: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] }
NON_STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: field[0][0]
STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }
NON_STRUCT_TY: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0]
STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }
NON_STRUCT_TY: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0]
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0]
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: u32
NON_STRUCT_TY: u16
NON_STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: field[0][0]
NON_STRUCT_TY: field[0][0]
STRUCT_TY: ZKVMOpcodeProof { lk_p1_out_eval: ExtField { b0: field, b1: field }, lk_p2_out_eval: ExtField { b0: field, b1: field }, lk_q1_out_eval: ExtField { b0: field, b1: field }, lk_q2_out_eval: ExtField { b0: field, b1: field }, lk_records_in_evals: ExtField { b0: field, b1: field }[0], main_sel_sumcheck_proofs: IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0], num_instances: u32, r_records_in_evals: ExtField { b0: field, b1: field }[0], record_r_out_evals: ExtField { b0: field, b1: field }[0], record_w_out_evals: ExtField { b0: field, b1: field }[0], tower_proof: TowerProofs { logup_spec_size: u32, logup_specs_eval: ExtField { b0: field, b1: field }[0][0][0], prod_spec_size: u32, prod_specs_eval: ExtField { b0: field, b1: field }[0][0][0], proofs: IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0][0] }, w_records_in_evals: ExtField { b0: field, b1: field }[0], wits_in_evals: ExtField { b0: field, b1: field }[0] }
STRUCT_TY: ExtField { b0: field, b1: field }
NON_STRUCT_TY: field
NON_STRUCT_TY: field
STRUCT_TY: ExtField { b0: field, b1: field }
NON_STRUCT_TY: field
NON_STRUCT_TY: field
STRUCT_TY: ExtField { b0: field, b1: field }
NON_STRUCT_TY: field
NON_STRUCT_TY: field
STRUCT_TY: ExtField { b0: field, b1: field }
NON_STRUCT_TY: field
NON_STRUCT_TY: field
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
NON_STRUCT_TY: IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
STRUCT_TY: TowerProofs { logup_spec_size: u32, logup_specs_eval: ExtField { b0: field, b1: field }[0][0][0], prod_spec_size: u32, prod_specs_eval: ExtField { b0: field, b1: field }[0][0][0], proofs: IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0][0] }
NON_STRUCT_TY: u32
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0][0][0]
NON_STRUCT_TY: u32
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0][0][0]
NON_STRUCT_TY: IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0][0]
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
STRUCT_TY: Transcript { permutation: PoseidonPermutation { state: field[12] } }
STRUCT_TY: PoseidonPermutation { state: field[12] }
NON_STRUCT_TY: field[12]
NON_STRUCT_TY: u32
STRUCT_TY: PointAndEval { eval: ExtField { b0: field, b1: field }, point: ExtField { b0: field, b1: field }[0] }
STRUCT_TY: ExtField { b0: field, b1: field }
NON_STRUCT_TY: field
NON_STRUCT_TY: field
NON_STRUCT_TY: ExtField { b0: field, b1: field }[0]
NON_STRUCT_TY: ExtField { b0: field, b1: field }[2]
INPUTS: [("self.main.0.0^vk^circuit_vks_key", VerifyingKey { cs: ConstraintSystem { assert_zero_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_expressions_len: u32, assert_zero_expressions_namespace_map: field[0][0], assert_zero_sumcheck_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], assert_zero_sumcheck_expressions_len: u32, assert_zero_sumcheck_expressions_namespace_map: field[0][0], chip_record_alpha: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, chip_record_beta: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, fixed_namespace_map: field[0][0], lk_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], lk_expressions_len: u32, lk_expressions_namespace_map: field[0][0], lk_table_expressions: LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0], lk_table_expressions_namespace_map: field[0][0], max_non_lc_degree: u32, num_fixed: u32, num_witin: u16, r_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], r_expressions_len: u32, r_expressions_namespace_map: field[0][0], w_expressions: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0], w_expressions_len: u32, w_expressions_namespace_map: field[0][0], witin_namespace_map: field[0][0] } }[0]), ("self.main.0.0^vk^circuit_vks_name", field[0][0]), ("name.main.0.0", field[0]), ("circuit_vk.main.0.0^cs^assert_zero_expressions", Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]), ("circuit_vk.main.0.0^cs^assert_zero_expressions_len", u32), ("circuit_vk.main.0.0^cs^assert_zero_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^assert_zero_sumcheck_expressions", Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]), ("circuit_vk.main.0.0^cs^assert_zero_sumcheck_expressions_len", u32), ("circuit_vk.main.0.0^cs^assert_zero_sumcheck_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^chip_record_alpha^entries", ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0]), ("circuit_vk.main.0.0^cs^chip_record_beta^entries", ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0]), ("circuit_vk.main.0.0^cs^fixed_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^lk_expressions", Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]), ("circuit_vk.main.0.0^cs^lk_expressions_len", u32), ("circuit_vk.main.0.0^cs^lk_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^lk_table_expressions", LogupTableExpression { multiplicity: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }, values: Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] } }[0]), ("circuit_vk.main.0.0^cs^lk_table_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^max_non_lc_degree", u32), ("circuit_vk.main.0.0^cs^num_fixed", u32), ("circuit_vk.main.0.0^cs^num_witin", u16), ("circuit_vk.main.0.0^cs^r_expressions", Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]), ("circuit_vk.main.0.0^cs^r_expressions_len", u32), ("circuit_vk.main.0.0^cs^r_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^w_expressions", Expression { entries: ExpressionEntry { constant: field, expr_ty: u8, fixed: u32, id: u16, l0: field, l1: field, l2: field, offset: ExtField { b0: field, b1: field }, scalar: ExtField { b0: field, b1: field } }[0] }[0]), ("circuit_vk.main.0.0^cs^w_expressions_len", u32), ("circuit_vk.main.0.0^cs^w_expressions_namespace_map", field[0][0]), ("circuit_vk.main.0.0^cs^witin_namespace_map", field[0][0]), ("proof.main.0.0^lk_p1_out_eval^b0", field), ("proof.main.0.0^lk_p1_out_eval^b1", field), ("proof.main.0.0^lk_p2_out_eval^b0", field), ("proof.main.0.0^lk_p2_out_eval^b1", field), ("proof.main.0.0^lk_q1_out_eval^b0", field), ("proof.main.0.0^lk_q1_out_eval^b1", field), ("proof.main.0.0^lk_q2_out_eval^b0", field), ("proof.main.0.0^lk_q2_out_eval^b1", field), ("proof.main.0.0^lk_records_in_evals", ExtField { b0: field, b1: field }[0]), ("proof.main.0.0^main_sel_sumcheck_proofs", IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0]), ("proof.main.0.0^num_instances", u32), ("proof.main.0.0^r_records_in_evals", ExtField { b0: field, b1: field }[0]), ("proof.main.0.0^record_r_out_evals", ExtField { b0: field, b1: field }[0]), ("proof.main.0.0^record_w_out_evals", ExtField { b0: field, b1: field }[0]), ("proof.main.0.0^tower_proof^logup_spec_size", u32), ("proof.main.0.0^tower_proof^logup_specs_eval", ExtField { b0: field, b1: field }[0][0][0]), ("proof.main.0.0^tower_proof^prod_spec_size", u32), ("proof.main.0.0^tower_proof^prod_specs_eval", ExtField { b0: field, b1: field }[0][0][0]), ("proof.main.0.0^tower_proof^proofs", IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[0] }[0][0]), ("proof.main.0.0^w_records_in_evals", ExtField { b0: field, b1: field }[0]), ("proof.main.0.0^wits_in_evals", ExtField { b0: field, b1: field }[0]), ("t.main.0.0^permutation^state", field[12]), ("num_product_fanin.main.0.0", u32), ("out_evals.main.0.0^eval^b0", field), ("out_evals.main.0.0^eval^b1", field), ("out_evals.main.0.0^point", ExtField { b0: field, b1: field }[0]), ("challenges.main.0.0", ExtField { b0: field, b1: field }[2])]
Entry block: 0

Block 0:
Func: main, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %BP = 0 <Field>
    field %TS = 0 <Field>
Transition: -> 1

Block 1:
Func: main, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 num_fanin.main.0.0 = 2 <U32>
    u32 log2_num_fanin.main.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.main.0.0 = 3 <U32>
    u32 SEL_DEGREE.main.0.0 = 2 <U32>
Transition: -> 2

Block 2:
Func: main, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^vk^circuit_vks_key.verify_opcode_proof.0.0 = self^vk^circuit_vks_key.main.0.0
    field self^vk^circuit_vks_name.verify_opcode_proof.0.0 = self^vk^circuit_vks_name.main.0.0
    field name.verify_opcode_proof.0.0 = name.main.0.0
    field circuit_vk^cs^assert_zero_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions.main.0.0
    u32 circuit_vk^cs^assert_zero_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions_len.main.0.0
    field circuit_vk^cs^assert_zero_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions_namespace_map.main.0.0
    field circuit_vk^cs^assert_zero_sumcheck_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions.main.0.0
    u32 circuit_vk^cs^assert_zero_sumcheck_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions_len.main.0.0
    field circuit_vk^cs^assert_zero_sumcheck_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions_namespace_map.main.0.0
    field circuit_vk^cs^chip_record_alpha^entries.verify_opcode_proof.0.0 = circuit_vk^cs^chip_record_alpha^entries.main.0.0
    field circuit_vk^cs^chip_record_beta^entries.verify_opcode_proof.0.0 = circuit_vk^cs^chip_record_beta^entries.main.0.0
    field circuit_vk^cs^fixed_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^fixed_namespace_map.main.0.0
    field circuit_vk^cs^lk_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions.main.0.0
    u32 circuit_vk^cs^lk_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions_len.main.0.0
    field circuit_vk^cs^lk_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions_namespace_map.main.0.0
    field circuit_vk^cs^lk_table_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^lk_table_expressions.main.0.0
    field circuit_vk^cs^lk_table_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^lk_table_expressions_namespace_map.main.0.0
    u32 circuit_vk^cs^max_non_lc_degree.verify_opcode_proof.0.0 = circuit_vk^cs^max_non_lc_degree.main.0.0
    u32 circuit_vk^cs^num_fixed.verify_opcode_proof.0.0 = circuit_vk^cs^num_fixed.main.0.0
    u16 circuit_vk^cs^num_witin.verify_opcode_proof.0.0 = circuit_vk^cs^num_witin.main.0.0
    field circuit_vk^cs^r_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions.main.0.0
    u32 circuit_vk^cs^r_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions_len.main.0.0
    field circuit_vk^cs^r_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions_namespace_map.main.0.0
    field circuit_vk^cs^w_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions.main.0.0
    u32 circuit_vk^cs^w_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions_len.main.0.0
    field circuit_vk^cs^w_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions_namespace_map.main.0.0
    field circuit_vk^cs^witin_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^witin_namespace_map.main.0.0
    field proof^lk_p1_out_eval^b0.verify_opcode_proof.0.0 = proof^lk_p1_out_eval^b0.main.0.0
    field proof^lk_p1_out_eval^b1.verify_opcode_proof.0.0 = proof^lk_p1_out_eval^b1.main.0.0
    field proof^lk_p2_out_eval^b0.verify_opcode_proof.0.0 = proof^lk_p2_out_eval^b0.main.0.0
    field proof^lk_p2_out_eval^b1.verify_opcode_proof.0.0 = proof^lk_p2_out_eval^b1.main.0.0
    field proof^lk_q1_out_eval^b0.verify_opcode_proof.0.0 = proof^lk_q1_out_eval^b0.main.0.0
    field proof^lk_q1_out_eval^b1.verify_opcode_proof.0.0 = proof^lk_q1_out_eval^b1.main.0.0
    field proof^lk_q2_out_eval^b0.verify_opcode_proof.0.0 = proof^lk_q2_out_eval^b0.main.0.0
    field proof^lk_q2_out_eval^b1.verify_opcode_proof.0.0 = proof^lk_q2_out_eval^b1.main.0.0
    field proof^lk_records_in_evals.verify_opcode_proof.0.0 = proof^lk_records_in_evals.main.0.0
    field proof^main_sel_sumcheck_proofs.verify_opcode_proof.0.0 = proof^main_sel_sumcheck_proofs.main.0.0
    u32 proof^num_instances.verify_opcode_proof.0.0 = proof^num_instances.main.0.0
    field proof^r_records_in_evals.verify_opcode_proof.0.0 = proof^r_records_in_evals.main.0.0
    field proof^record_r_out_evals.verify_opcode_proof.0.0 = proof^record_r_out_evals.main.0.0
    field proof^record_w_out_evals.verify_opcode_proof.0.0 = proof^record_w_out_evals.main.0.0
    u32 proof^tower_proof^logup_spec_size.verify_opcode_proof.0.0 = proof^tower_proof^logup_spec_size.main.0.0
    field proof^tower_proof^logup_specs_eval.verify_opcode_proof.0.0 = proof^tower_proof^logup_specs_eval.main.0.0
    u32 proof^tower_proof^prod_spec_size.verify_opcode_proof.0.0 = proof^tower_proof^prod_spec_size.main.0.0
    field proof^tower_proof^prod_specs_eval.verify_opcode_proof.0.0 = proof^tower_proof^prod_specs_eval.main.0.0
    field proof^tower_proof^proofs.verify_opcode_proof.0.0 = proof^tower_proof^proofs.main.0.0
    field proof^w_records_in_evals.verify_opcode_proof.0.0 = proof^w_records_in_evals.main.0.0
    field proof^wits_in_evals.verify_opcode_proof.0.0 = proof^wits_in_evals.main.0.0
    field t^permutation^state.verify_opcode_proof.0.0 = t^permutation^state.main.0.0
    u32 num_product_fanin.verify_opcode_proof.0.0 = num_product_fanin.main.0.0
    field out_evals^eval^b0.verify_opcode_proof.0.0 = out_evals^eval^b0.main.0.0
    field out_evals^eval^b1.verify_opcode_proof.0.0 = out_evals^eval^b1.main.0.0
    field out_evals^point.verify_opcode_proof.0.0 = out_evals^point.main.0.0
    field challenges.verify_opcode_proof.0.0 = challenges.main.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.main.0.0
    u32 SEL_DEGREE.verify_opcode_proof.0.0 = SEL_DEGREE.main.0.0
    u32 log2_num_fanin.verify_opcode_proof.0.0 = log2_num_fanin.main.0.0
    u32 num_fanin.verify_opcode_proof.0.0 = num_fanin.main.0.0
    field rp@.verify_opcode_proof = 3 <Field>
Transition: -> 5

Block 3:
Func: main, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.main.0.0 = %RET.verify_opcode_proof
    field result.main.0.0 = ret^0.main.0.0
    field load^0.main.0.0 = result.main.0.0[2 <Field> * 0 <Field>]
    field %RET.main = load^0.main.0.0
Program terminates.

Block 4:
Func: main, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Program terminates.

Block 5:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field cs^assert_zero_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions.verify_opcode_proof.0.0
    u32 cs^assert_zero_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions_len.verify_opcode_proof.0.0
    field cs^assert_zero_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_expressions_namespace_map.verify_opcode_proof.0.0
    field cs^assert_zero_sumcheck_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions.verify_opcode_proof.0.0
    u32 cs^assert_zero_sumcheck_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions_len.verify_opcode_proof.0.0
    field cs^assert_zero_sumcheck_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^assert_zero_sumcheck_expressions_namespace_map.verify_opcode_proof.0.0
    field cs^chip_record_alpha^entries.verify_opcode_proof.0.0 = circuit_vk^cs^chip_record_alpha^entries.verify_opcode_proof.0.0
    field cs^chip_record_beta^entries.verify_opcode_proof.0.0 = circuit_vk^cs^chip_record_beta^entries.verify_opcode_proof.0.0
    field cs^fixed_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^fixed_namespace_map.verify_opcode_proof.0.0
    field cs^lk_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions.verify_opcode_proof.0.0
    u32 cs^lk_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions_len.verify_opcode_proof.0.0
    field cs^lk_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^lk_expressions_namespace_map.verify_opcode_proof.0.0
    field cs^lk_table_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^lk_table_expressions.verify_opcode_proof.0.0
    field cs^lk_table_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^lk_table_expressions_namespace_map.verify_opcode_proof.0.0
    u32 cs^max_non_lc_degree.verify_opcode_proof.0.0 = circuit_vk^cs^max_non_lc_degree.verify_opcode_proof.0.0
    u32 cs^num_fixed.verify_opcode_proof.0.0 = circuit_vk^cs^num_fixed.verify_opcode_proof.0.0
    u16 cs^num_witin.verify_opcode_proof.0.0 = circuit_vk^cs^num_witin.verify_opcode_proof.0.0
    field cs^r_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions.verify_opcode_proof.0.0
    u32 cs^r_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions_len.verify_opcode_proof.0.0
    field cs^r_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^r_expressions_namespace_map.verify_opcode_proof.0.0
    field cs^w_expressions.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions.verify_opcode_proof.0.0
    u32 cs^w_expressions_len.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions_len.verify_opcode_proof.0.0
    field cs^w_expressions_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^w_expressions_namespace_map.verify_opcode_proof.0.0
    field cs^witin_namespace_map.verify_opcode_proof.0.0 = circuit_vk^cs^witin_namespace_map.verify_opcode_proof.0.0
    u32 r_counts_per_instance.verify_opcode_proof.0.0 = cs^r_expressions_len.verify_opcode_proof.0.0
    u32 w_counts_per_instance.verify_opcode_proof.0.0 = cs^w_expressions_len.verify_opcode_proof.0.0
    u32 lk_counts_per_instance.verify_opcode_proof.0.0 = cs^lk_expressions_len.verify_opcode_proof.0.0
    u32 x.ceil_log2.0.0 = r_counts_per_instance.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ceil_log2.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ceil_log2.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ceil_log2.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ceil_log2.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ceil_log2 = 6 <Field>
Transition: -> 553

Block 6:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 ret^0.verify_opcode_proof.0.0 = %RET.ceil_log2
    u32 log2_r_count.verify_opcode_proof.0.0 = ret^0.verify_opcode_proof.0.0
    u32 x.ceil_log2.0.0 = w_counts_per_instance.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ceil_log2.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ceil_log2.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ceil_log2.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ceil_log2.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ceil_log2 = 7 <Field>
Transition: -> 553

Block 7:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 ret^0.verify_opcode_proof.0.0 = %RET.ceil_log2
    u32 log2_w_count.verify_opcode_proof.0.0 = ret^0.verify_opcode_proof.0.0
    u32 x.ceil_log2.0.0 = lk_counts_per_instance.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ceil_log2.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ceil_log2.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ceil_log2.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ceil_log2.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ceil_log2 = 8 <Field>
Transition: -> 553

Block 8:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 ret^0.verify_opcode_proof.0.0 = %RET.ceil_log2
    u32 log2_lk_count.verify_opcode_proof.0.0 = ret^0.verify_opcode_proof.0.0
    field load^0^b0.verify_opcode_proof.0.0 = challenges.verify_opcode_proof.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.verify_opcode_proof.0.0 = challenges.verify_opcode_proof.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field chip_record_alpha^b0.verify_opcode_proof.0.0 = load^0^b0.verify_opcode_proof.0.0
    field chip_record_alpha^b1.verify_opcode_proof.0.0 = load^0^b1.verify_opcode_proof.0.0
    u32 num_instances.verify_opcode_proof.0.0 = proof^num_instances.verify_opcode_proof.0.0
    u32 x.ceil_log2.0.0 = num_instances.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ceil_log2.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ceil_log2.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ceil_log2.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ceil_log2.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ceil_log2 = 9 <Field>
Transition: -> 553

Block 9:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 10
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 ret^0.verify_opcode_proof.0.0 = %RET.ceil_log2
    u32 log2_num_instances.verify_opcode_proof.0.0 = ret^0.verify_opcode_proof.0.0
    u32 tower_proofs^logup_spec_size.verify_opcode_proof.0.0 = proof^tower_proof^logup_spec_size.verify_opcode_proof.0.0
    field tower_proofs^logup_specs_eval.verify_opcode_proof.0.0 = proof^tower_proof^logup_specs_eval.verify_opcode_proof.0.0
    u32 tower_proofs^prod_spec_size.verify_opcode_proof.0.0 = proof^tower_proof^prod_spec_size.verify_opcode_proof.0.0
    field tower_proofs^prod_specs_eval.verify_opcode_proof.0.0 = proof^tower_proof^prod_specs_eval.verify_opcode_proof.0.0
    field tower_proofs^proofs.verify_opcode_proof.0.0 = proof^tower_proof^proofs.verify_opcode_proof.0.0
    ExtField { b0: field, b1: field }[0][2 <U32>] array^0.verify_opcode_proof.0.0
    field init^0^0.verify_opcode_proof.0.0 = proof^record_r_out_evals.verify_opcode_proof.0.0
    field init^0^1.verify_opcode_proof.0.0 = proof^record_w_out_evals.verify_opcode_proof.0.0
    array^0.verify_opcode_proof.0.0[0 <U32>] = init^0^0.verify_opcode_proof.0.0 <field>, init
    array^0.verify_opcode_proof.0.0[1 <U32>] = init^0^1.verify_opcode_proof.0.0 <field>, init
    ExtField { b0: field, b1: field }[4][1 <U32>] array^1.verify_opcode_proof.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 4 <U32>] array^2.verify_opcode_proof.0.0
    field init^2^0^b0.verify_opcode_proof.0.0 = proof^lk_p1_out_eval^b0.verify_opcode_proof.0.0
    field init^2^0^b1.verify_opcode_proof.0.0 = proof^lk_p1_out_eval^b1.verify_opcode_proof.0.0
    field init^2^1^b0.verify_opcode_proof.0.0 = proof^lk_p2_out_eval^b0.verify_opcode_proof.0.0
    field init^2^1^b1.verify_opcode_proof.0.0 = proof^lk_p2_out_eval^b1.verify_opcode_proof.0.0
    field init^2^2^b0.verify_opcode_proof.0.0 = proof^lk_q1_out_eval^b0.verify_opcode_proof.0.0
    field init^2^2^b1.verify_opcode_proof.0.0 = proof^lk_q1_out_eval^b1.verify_opcode_proof.0.0
    field init^2^3^b0.verify_opcode_proof.0.0 = proof^lk_q2_out_eval^b0.verify_opcode_proof.0.0
    field init^2^3^b1.verify_opcode_proof.0.0 = proof^lk_q2_out_eval^b1.verify_opcode_proof.0.0
    array^2.verify_opcode_proof.0.0[2 <U32> * 0 <U32>] = init^2^0^b0.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^2^0^b1.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 1 <U32>] = init^2^1^b0.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^2^1^b1.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 2 <U32>] = init^2^2^b0.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^2^2^b1.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 3 <U32>] = init^2^3^b0.verify_opcode_proof.0.0 <field>, init
    array^2.verify_opcode_proof.0.0[2 <U32> * 3 <U32> + 1 <U32>] = init^2^3^b1.verify_opcode_proof.0.0 <field>, init
    field init^1^0.verify_opcode_proof.0.0 = array^2.verify_opcode_proof.0.0
    u32 index@.verify_opcode_proof.0.0 = 0 <U32>
Transition: 
    index@.verify_opcode_proof.0.0 != 1 <U32> ? -> 10 : -> 11

Block 10:
Func: verify_opcode_proof, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^1.verify_opcode_proof.0.0[index@.verify_opcode_proof.0.0] = init^1^0.verify_opcode_proof.0.0 <field>, init
    index@.verify_opcode_proof.0.0 = index@.verify_opcode_proof.0.0 + 1 <U32>
Transition: 
    index@.verify_opcode_proof.0.0 != 1 <U32> ? -> 10 : -> 11

Block 11:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32[3 <U32>] array^3.verify_opcode_proof.0.0
    u32 init^3^0.verify_opcode_proof.0.0 = log2_num_instances.verify_opcode_proof.0.0 + log2_r_count.verify_opcode_proof.0.0
    u32 init^3^1.verify_opcode_proof.0.0 = log2_num_instances.verify_opcode_proof.0.0 + log2_w_count.verify_opcode_proof.0.0
    u32 init^3^2.verify_opcode_proof.0.0 = log2_num_instances.verify_opcode_proof.0.0 + log2_lk_count.verify_opcode_proof.0.0
    array^3.verify_opcode_proof.0.0[0 <U32>] = init^3^0.verify_opcode_proof.0.0 <u32>, init
    array^3.verify_opcode_proof.0.0[1 <U32>] = init^3^1.verify_opcode_proof.0.0 <u32>, init
    array^3.verify_opcode_proof.0.0[2 <U32>] = init^3^2.verify_opcode_proof.0.0 <u32>, init
    field prod_out_evals.tower_verify.0.0 = array^0.verify_opcode_proof.0.0
    field logup_out_evals.tower_verify.0.0 = array^1.verify_opcode_proof.0.0
    u32 tower_proofs^logup_spec_size.tower_verify.0.0 = tower_proofs^logup_spec_size.verify_opcode_proof.0.0
    field tower_proofs^logup_specs_eval.tower_verify.0.0 = tower_proofs^logup_specs_eval.verify_opcode_proof.0.0
    u32 tower_proofs^prod_spec_size.tower_verify.0.0 = tower_proofs^prod_spec_size.verify_opcode_proof.0.0
    field tower_proofs^prod_specs_eval.tower_verify.0.0 = tower_proofs^prod_specs_eval.verify_opcode_proof.0.0
    field tower_proofs^proofs.tower_verify.0.0 = tower_proofs^proofs.verify_opcode_proof.0.0
    field expected_rounds.tower_verify.0.0 = array^3.verify_opcode_proof.0.0
    field t^permutation^state.tower_verify.0.0 = t^permutation^state.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.tower_verify.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.tower_verify.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.tower_verify.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.tower_verify = 12 <Field>
Transition: -> 325

Block 12:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^logup_p_evals.verify_opcode_proof.0.0 = %RET^logup_p_evals.tower_verify
    field ret^0^logup_q_evals.verify_opcode_proof.0.0 = %RET^logup_q_evals.tower_verify
    field ret^0^record_evals.verify_opcode_proof.0.0 = %RET^record_evals.tower_verify
    field ret^0^rt_tower.verify_opcode_proof.0.0 = %RET^rt_tower.tower_verify
    field output^logup_p_evals.verify_opcode_proof.0.0 = ret^0^logup_p_evals.verify_opcode_proof.0.0
    field output^logup_q_evals.verify_opcode_proof.0.0 = ret^0^logup_q_evals.verify_opcode_proof.0.0
    field output^record_evals.verify_opcode_proof.0.0 = ret^0^record_evals.verify_opcode_proof.0.0
    field output^rt_tower.verify_opcode_proof.0.0 = ret^0^rt_tower.verify_opcode_proof.0.0
    field rt_tower.verify_opcode_proof.0.0 = output^rt_tower.verify_opcode_proof.0.0
    field record_evals.verify_opcode_proof.0.0 = output^record_evals.verify_opcode_proof.0.0
    field logup_p_evals.verify_opcode_proof.0.0 = output^logup_p_evals.verify_opcode_proof.0.0
    field logup_q_evals.verify_opcode_proof.0.0 = output^logup_q_evals.verify_opcode_proof.0.0
    field load^0^b0.verify_opcode_proof.0.0 = logup_p_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field>]
    field load^0^b1.verify_opcode_proof.0.0 = logup_p_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 1 <Field>]
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.to_ext = 13 <Field>
Transition: -> 563

Block 13:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.verify_opcode_proof.0.0 = %RET^b0.to_ext
    field ret^0^b1.verify_opcode_proof.0.0 = %RET^b1.to_ext
    field e0^b0.ext_eq.0.0 = load^0^b0.verify_opcode_proof.0.0
    field e0^b1.ext_eq.0.0 = load^0^b1.verify_opcode_proof.0.0
    field e1^b0.ext_eq.0.0 = ret^0^b0.verify_opcode_proof.0.0
    field e1^b1.ext_eq.0.0 = ret^0^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_eq.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_eq.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_eq.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_eq.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_eq = 14 <Field>
Transition: -> 565

Block 14:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1.verify_opcode_proof.0.0 = %RET.ext_eq
    assert ret^1.verify_opcode_proof.0.0 == 1 <Field>
    field load^0.verify_opcode_proof.0.1 = record_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 2 <Field>]
    field rt_r.verify_opcode_proof.0.0 = load^0.verify_opcode_proof.0.1
    field load^0.verify_opcode_proof.0.1 = record_evals.verify_opcode_proof.0.0[3 <Field> * 1 <Field> + 2 <Field>]
    field rt_w.verify_opcode_proof.0.0 = load^0.verify_opcode_proof.0.1
    field load^0.verify_opcode_proof.0.1 = logup_q_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 2 <Field>]
    field rt_lk.verify_opcode_proof.0.0 = load^0.verify_opcode_proof.0.1
    u32 size.get_challenge_pows.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0 + cs^assert_zero_sumcheck_expressions_len.verify_opcode_proof.0.0
    field transcript^permutation^state.get_challenge_pows.0.0 = t^permutation^state.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.get_challenge_pows.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.get_challenge_pows.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.get_challenge_pows.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.get_challenge_pows = 15 <Field>
Transition: -> 534

Block 15:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 8
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge_pows.verify_opcode_proof.0.0 = %RET^challenge_pows.get_challenge_pows
    field ret^0^transcript^permutation^state.verify_opcode_proof.0.0 = %RET^transcript^permutation^state.get_challenge_pows
    field t_cp^challenge_pows.verify_opcode_proof.0.0 = ret^0^challenge_pows.verify_opcode_proof.0.0
    field t_cp^transcript^permutation^state.verify_opcode_proof.0.0 = ret^0^transcript^permutation^state.verify_opcode_proof.0.0
    field t^permutation^state.verify_opcode_proof.0.0 = t_cp^transcript^permutation^state.verify_opcode_proof.0.0
    field alpha_pows.verify_opcode_proof.0.0 = t_cp^challenge_pows.verify_opcode_proof.0.0
    u32 next_alpha_pows_counter.verify_opcode_proof.0.0 = 0 <U32>
    field load^0^b0.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0]
    field load^0^b1.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>]
    field alpha_read^b0.verify_opcode_proof.0.0 = load^0^b0.verify_opcode_proof.0.0
    field alpha_read^b1.verify_opcode_proof.0.0 = load^0^b1.verify_opcode_proof.0.0
    u32 next_alpha_pows_counter.verify_opcode_proof.0.0 = next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>
    field load^0^b0.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0]
    field load^0^b1.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>]
    field alpha_write^b0.verify_opcode_proof.0.0 = load^0^b0.verify_opcode_proof.0.0
    field alpha_write^b1.verify_opcode_proof.0.0 = load^0^b1.verify_opcode_proof.0.0
    u32 next_alpha_pows_counter.verify_opcode_proof.0.0 = next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>
    field load^0^b0.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0]
    field load^0^b1.verify_opcode_proof.0.0 = alpha_pows.verify_opcode_proof.0.0[2 <U32> * next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>]
    field alpha_lk^b0.verify_opcode_proof.0.0 = load^0^b0.verify_opcode_proof.0.0
    field alpha_lk^b1.verify_opcode_proof.0.0 = load^0^b1.verify_opcode_proof.0.0
    u32 next_alpha_pows_counter.verify_opcode_proof.0.0 = next_alpha_pows_counter.verify_opcode_proof.0.0 + 1 <U32>
    field load^0^b0.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 1 <Field>]
    field load^0^b1.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 1 <Field> + 1 <Field>]
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.to_ext = 16 <Field>
Transition: -> 567

Block 16:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.verify_opcode_proof.0.0 = %RET^b0.to_ext
    field ret^0^b1.verify_opcode_proof.0.0 = %RET^b1.to_ext
    field e0^b0.ext_sub.0.0 = load^0^b0.verify_opcode_proof.0.0
    field e0^b1.ext_sub.0.0 = load^0^b1.verify_opcode_proof.0.0
    field e1^b0.ext_sub.0.0 = ret^0^b0.verify_opcode_proof.0.0
    field e1^b1.ext_sub.0.0 = ret^0^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_sub = 17 <Field>
Transition: -> 569

Block 17:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.verify_opcode_proof.0.0 = %RET^b0.ext_sub
    field ret^1^b1.verify_opcode_proof.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = alpha_write^b0.verify_opcode_proof.0.0
    field e0^b1.ext_mul.0.0 = alpha_write^b1.verify_opcode_proof.0.0
    field e1^b0.ext_mul.0.0 = ret^1^b0.verify_opcode_proof.0.0
    field e1^b1.ext_mul.0.0 = ret^1^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_mul = 18 <Field>
Transition: -> 571

Block 18:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.verify_opcode_proof.0.0 = %RET^b0.ext_mul
    field ret^2^b1.verify_opcode_proof.0.0 = %RET^b1.ext_mul
    field load^1^b0.verify_opcode_proof.0.0 = logup_q_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field>]
    field load^1^b1.verify_opcode_proof.0.0 = logup_q_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 1 <Field>]
    field e0^b0.ext_sub.0.0 = load^1^b0.verify_opcode_proof.0.0
    field e0^b1.ext_sub.0.0 = load^1^b1.verify_opcode_proof.0.0
    field e1^b0.ext_sub.0.0 = chip_record_alpha^b0.verify_opcode_proof.0.0
    field e1^b1.ext_sub.0.0 = chip_record_alpha^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_sub = 19 <Field>
Transition: -> 573

Block 19:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.verify_opcode_proof.0.0 = %RET^b0.ext_sub
    field ret^3^b1.verify_opcode_proof.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = alpha_lk^b0.verify_opcode_proof.0.0
    field e0^b1.ext_mul.0.0 = alpha_lk^b1.verify_opcode_proof.0.0
    field e1^b0.ext_mul.0.0 = ret^3^b0.verify_opcode_proof.0.0
    field e1^b1.ext_mul.0.0 = ret^3^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_mul = 20 <Field>
Transition: -> 575

Block 20:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.verify_opcode_proof.0.0 = %RET^b0.ext_mul
    field ret^4^b1.verify_opcode_proof.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^2^b0.verify_opcode_proof.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.verify_opcode_proof.0.0
    field e1^b0.ext_add.0.0 = ret^4^b0.verify_opcode_proof.0.0
    field e1^b1.ext_add.0.0 = ret^4^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_add = 21 <Field>
Transition: -> 577

Block 21:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.verify_opcode_proof.0.0 = %RET^b0.ext_add
    field ret^5^b1.verify_opcode_proof.0.0 = %RET^b1.ext_add
    field claim_sum^b0.verify_opcode_proof.0.0 = ret^5^b0.verify_opcode_proof.0.0
    field claim_sum^b1.verify_opcode_proof.0.0 = ret^5^b1.verify_opcode_proof.0.0
    field load^0^b0.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field>]
    field load^0^b1.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 1 <Field>]
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.to_ext = 22 <Field>
Transition: -> 579

Block 22:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.verify_opcode_proof.0.0 = %RET^b0.to_ext
    field ret^0^b1.verify_opcode_proof.0.0 = %RET^b1.to_ext
    field e0^b0.ext_sub.0.0 = load^0^b0.verify_opcode_proof.0.0
    field e0^b1.ext_sub.0.0 = load^0^b1.verify_opcode_proof.0.0
    field e1^b0.ext_sub.0.0 = ret^0^b0.verify_opcode_proof.0.0
    field e1^b1.ext_sub.0.0 = ret^0^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_sub = 23 <Field>
Transition: -> 581

Block 23:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.verify_opcode_proof.0.0 = %RET^b0.ext_sub
    field ret^1^b1.verify_opcode_proof.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = alpha_read^b0.verify_opcode_proof.0.0
    field e0^b1.ext_mul.0.0 = alpha_read^b1.verify_opcode_proof.0.0
    field e1^b0.ext_mul.0.0 = ret^1^b0.verify_opcode_proof.0.0
    field e1^b1.ext_mul.0.0 = ret^1^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_mul = 24 <Field>
Transition: -> 583

Block 24:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.verify_opcode_proof.0.0 = %RET^b0.ext_mul
    field ret^2^b1.verify_opcode_proof.0.0 = %RET^b1.ext_mul
    field load^1^b0.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 1 <Field>]
    field load^1^b1.verify_opcode_proof.0.0 = record_evals.verify_opcode_proof.0.0[3 <Field> * 1 <Field> + 1 <Field>]
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.to_ext = 25 <Field>
Transition: -> 585

Block 25:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.verify_opcode_proof.0.0 = %RET^b0.to_ext
    field ret^3^b1.verify_opcode_proof.0.0 = %RET^b1.to_ext
    field e0^b0.ext_sub.0.0 = load^1^b0.verify_opcode_proof.0.0
    field e0^b1.ext_sub.0.0 = load^1^b1.verify_opcode_proof.0.0
    field e1^b0.ext_sub.0.0 = ret^3^b0.verify_opcode_proof.0.0
    field e1^b1.ext_sub.0.0 = ret^3^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_sub = 26 <Field>
Transition: -> 587

Block 26:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.verify_opcode_proof.0.0 = %RET^b0.ext_sub
    field ret^4^b1.verify_opcode_proof.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = alpha_write^b0.verify_opcode_proof.0.0
    field e0^b1.ext_mul.0.0 = alpha_write^b1.verify_opcode_proof.0.0
    field e1^b0.ext_mul.0.0 = ret^4^b0.verify_opcode_proof.0.0
    field e1^b1.ext_mul.0.0 = ret^4^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_mul = 27 <Field>
Transition: -> 589

Block 27:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.verify_opcode_proof.0.0 = %RET^b0.ext_mul
    field ret^5^b1.verify_opcode_proof.0.0 = %RET^b1.ext_mul
    field load^2^b0.verify_opcode_proof.0.0 = logup_q_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field>]
    field load^2^b1.verify_opcode_proof.0.0 = logup_q_evals.verify_opcode_proof.0.0[3 <Field> * 0 <Field> + 1 <Field>]
    field e0^b0.ext_sub.0.0 = load^2^b0.verify_opcode_proof.0.0
    field e0^b1.ext_sub.0.0 = load^2^b1.verify_opcode_proof.0.0
    field e1^b0.ext_sub.0.0 = chip_record_alpha^b0.verify_opcode_proof.0.0
    field e1^b1.ext_sub.0.0 = chip_record_alpha^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_sub = 28 <Field>
Transition: -> 591

Block 28:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^6^b0.verify_opcode_proof.0.0 = %RET^b0.ext_sub
    field ret^6^b1.verify_opcode_proof.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = alpha_lk^b0.verify_opcode_proof.0.0
    field e0^b1.ext_mul.0.0 = alpha_lk^b1.verify_opcode_proof.0.0
    field e1^b0.ext_mul.0.0 = ret^6^b0.verify_opcode_proof.0.0
    field e1^b1.ext_mul.0.0 = ret^6^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_mul = 29 <Field>
Transition: -> 593

Block 29:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^7^b0.verify_opcode_proof.0.0 = %RET^b0.ext_mul
    field ret^7^b1.verify_opcode_proof.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^5^b0.verify_opcode_proof.0.0
    field e0^b1.ext_add.0.0 = ret^5^b1.verify_opcode_proof.0.0
    field e1^b0.ext_add.0.0 = ret^7^b0.verify_opcode_proof.0.0
    field e1^b1.ext_add.0.0 = ret^7^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_add = 30 <Field>
Transition: -> 595

Block 30:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^8^b0.verify_opcode_proof.0.0 = %RET^b0.ext_add
    field ret^8^b1.verify_opcode_proof.0.0 = %RET^b1.ext_add
    field e0^b0.ext_add.0.0 = ret^2^b0.verify_opcode_proof.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.verify_opcode_proof.0.0
    field e1^b0.ext_add.0.0 = ret^8^b0.verify_opcode_proof.0.0
    field e1^b1.ext_add.0.0 = ret^8^b1.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.ext_add = 31 <Field>
Transition: -> 597

Block 31:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^9^b0.verify_opcode_proof.0.0 = %RET^b0.ext_add
    field ret^9^b1.verify_opcode_proof.0.0 = %RET^b1.ext_add
    field claim_sum^b0.verify_opcode_proof.0.0 = ret^9^b0.verify_opcode_proof.0.0
    field claim_sum^b1.verify_opcode_proof.0.0 = ret^9^b1.verify_opcode_proof.0.0
    field[0 <U32>] array^0.verify_opcode_proof.0.1
    field struct^0^points.verify_opcode_proof.0.0 = array^0.verify_opcode_proof.0.1
    field struct^0^proofs.verify_opcode_proof.0.0 = proof^main_sel_sumcheck_proofs.verify_opcode_proof.0.0
    u32 a.max.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 b.max.0.0 = cs^max_non_lc_degree.verify_opcode_proof.0.0 + 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.max.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.max.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.max.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.max.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.max = 32 <Field>
Transition: -> 599

Block 32:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 ret^0.verify_opcode_proof.0.5 = %RET.max
    u32 struct^1^max_degree.verify_opcode_proof.0.0 = ret^0.verify_opcode_proof.0.5
    u32 struct^1^num_variables.verify_opcode_proof.0.0 = log2_num_instances.verify_opcode_proof.0.0
    field claimed_sum^b0.verify_sumcheck.0.0 = claim_sum^b0.verify_opcode_proof.0.0
    field claimed_sum^b1.verify_sumcheck.0.0 = claim_sum^b1.verify_opcode_proof.0.0
    field proof^points.verify_sumcheck.0.0 = struct^0^points.verify_opcode_proof.0.0
    field proof^proofs.verify_sumcheck.0.0 = struct^0^proofs.verify_opcode_proof.0.0
    u32 aux_info^max_degree.verify_sumcheck.0.0 = struct^1^max_degree.verify_opcode_proof.0.0
    u32 aux_info^num_variables.verify_sumcheck.0.0 = struct^1^num_variables.verify_opcode_proof.0.0
    field t^permutation^state.verify_sumcheck.0.0 = t^permutation^state.verify_opcode_proof.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.verify_sumcheck.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.verify_sumcheck.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.verify_sumcheck.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.verify_sumcheck = 33 <Field>
Transition: -> 298

Block 33:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^sc^expected_evaluation^b0.verify_opcode_proof.0.0 = %RET^sc^expected_evaluation^b0.verify_sumcheck
    field ret^1^sc^expected_evaluation^b1.verify_opcode_proof.0.0 = %RET^sc^expected_evaluation^b1.verify_sumcheck
    field ret^1^sc^point.verify_opcode_proof.0.0 = %RET^sc^point.verify_sumcheck
    field ret^1^t^permutation^state.verify_opcode_proof.0.0 = %RET^t^permutation^state.verify_sumcheck
    field sc_t^sc^expected_evaluation^b0.verify_opcode_proof.0.0 = ret^1^sc^expected_evaluation^b0.verify_opcode_proof.0.0
    field sc_t^sc^expected_evaluation^b1.verify_opcode_proof.0.0 = ret^1^sc^expected_evaluation^b1.verify_opcode_proof.0.0
    field sc_t^sc^point.verify_opcode_proof.0.0 = ret^1^sc^point.verify_opcode_proof.0.0
    field sc_t^t^permutation^state.verify_opcode_proof.0.0 = ret^1^t^permutation^state.verify_opcode_proof.0.0
    field t^permutation^state.verify_opcode_proof.0.0 = sc_t^t^permutation^state.verify_opcode_proof.0.0
    field main_sel_subclaim^expected_evaluation^b0.verify_opcode_proof.0.0 = sc_t^sc^expected_evaluation^b0.verify_opcode_proof.0.0
    field main_sel_subclaim^expected_evaluation^b1.verify_opcode_proof.0.0 = sc_t^sc^expected_evaluation^b1.verify_opcode_proof.0.0
    field main_sel_subclaim^point.verify_opcode_proof.0.0 = sc_t^sc^point.verify_opcode_proof.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 1 <U32>] array^0.verify_opcode_proof.0.2
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_opcode_proof.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.verify_opcode_proof.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.verify_opcode_proof.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.verify_opcode_proof.0.0
    field rp@.to_ext = 34 <Field>
Transition: -> 601

Block 34:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.verify_opcode_proof.0.0 = %RET^b0.to_ext
    field ret^0^b1.verify_opcode_proof.0.0 = %RET^b1.to_ext
    field init^0^0^b0.verify_opcode_proof.0.0 = ret^0^b0.verify_opcode_proof.0.0
    field init^0^0^b1.verify_opcode_proof.0.0 = ret^0^b1.verify_opcode_proof.0.0
    u32 index@.verify_opcode_proof.0.0 = 0 <U32>
Transition: 
    index@.verify_opcode_proof.0.0 != 1 <U32> ? -> 35 : -> 36

Block 35:
Func: verify_opcode_proof, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.verify_opcode_proof.0.2[2 <U32> * index@.verify_opcode_proof.0.0] = init^0^0^b0.verify_opcode_proof.0.0 <field>, init
    array^0.verify_opcode_proof.0.2[2 <U32> * index@.verify_opcode_proof.0.0 + 1 <U32>] = init^0^0^b1.verify_opcode_proof.0.0 <field>, init
    index@.verify_opcode_proof.0.0 = index@.verify_opcode_proof.0.0 + 1 <U32>
Transition: 
    index@.verify_opcode_proof.0.0 != 1 <U32> ? -> 35 : -> 36

Block 36:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.verify_opcode_proof = array^0.verify_opcode_proof.0.2
Transition: -> rp@.verify_opcode_proof

Block 37:
Func: verify_opcode_proof, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.verify_opcode_proof

Block 38:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 39:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 40:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 41:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 42:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    witness field inv_b0.ext_invert.0.0
    witness field inv_b1.ext_invert.0.0
    field struct^0^b0.ext_invert.0.0 = inv_b0.ext_invert.0.0
    field struct^0^b1.ext_invert.0.0 = inv_b1.ext_invert.0.0
    field inv^b0.ext_invert.0.0 = struct^0^b0.ext_invert.0.0
    field inv^b1.ext_invert.0.0 = struct^0^b1.ext_invert.0.0
    field e0^b0.ext_mul.0.0 = e^b0.ext_invert.0.0
    field e0^b1.ext_mul.0.0 = e^b1.ext_invert.0.0
    field e1^b0.ext_mul.0.0 = inv^b0.ext_invert.0.0
    field e1^b1.ext_mul.0.0 = inv^b1.ext_invert.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.ext_invert.0.0
    field rp@.ext_mul = 43 <Field>
Transition: -> 603

Block 43:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.ext_invert.0.0 = %RET^b0.ext_mul
    field ret^0^b1.ext_invert.0.0 = %RET^b1.ext_mul
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.ext_invert.0.0
    field rp@.to_ext = 44 <Field>
Transition: -> 605

Block 44:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.ext_invert.0.0 = %RET^b0.to_ext
    field ret^1^b1.ext_invert.0.0 = %RET^b1.to_ext
    field e0^b0.ext_eq.0.0 = ret^0^b0.ext_invert.0.0
    field e0^b1.ext_eq.0.0 = ret^0^b1.ext_invert.0.0
    field e1^b0.ext_eq.0.0 = ret^1^b0.ext_invert.0.0
    field e1^b1.ext_eq.0.0 = ret^1^b1.ext_invert.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_eq.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.ext_eq.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.ext_eq.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.ext_eq.0.0 = num_fanin.ext_invert.0.0
    field rp@.ext_eq = 45 <Field>
Transition: -> 607

Block 45:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2.ext_invert.0.0 = %RET.ext_eq
    assert ret^2.ext_invert.0.0 == 1 <Field>
    field %RET^b0.ext_invert = inv^b0.ext_invert.0.0
    field %RET^b1.ext_invert = inv^b1.ext_invert.0.0
Transition: -> rp@.ext_invert

Block 46:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_invert

Block 47:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 48:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 49:
Func: ext_neg, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_neg.0.0 = -1 <Field> * e^b0.ext_neg.0.0
    field struct^0^b1.ext_neg.0.0 = -1 <Field> * e^b1.ext_neg.0.0
    field %RET^b0.ext_neg = struct^0^b0.ext_neg.0.0
    field %RET^b1.ext_neg = struct^0^b1.ext_neg.0.0
Transition: -> rp@.ext_neg

Block 50:
Func: ext_neg, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_neg

Block 51:
Func: ext_neq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_neq = e0^b0.ext_neq.0.0 != e1^b0.ext_neq.0.0 || e0^b1.ext_neq.0.0 != e1^b1.ext_neq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_neq

Block 52:
Func: ext_neq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_neq

Block 53:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 54:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 55:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 56:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 57:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 58:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 59:
Func: build_eq_x_r_vec_sequential, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    ExtField { b0: field, b1: field }[2 <U32> * r_len_pow2.build_eq_x_r_vec_sequential.0.0] evals.build_eq_x_r_vec_sequential.0.0
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.build_eq_x_r_vec_sequential.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.build_eq_x_r_vec_sequential.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.build_eq_x_r_vec_sequential.0.0
    field rp@.to_ext = 60 <Field>
Transition: -> 609

Block 60:
Func: build_eq_x_r_vec_sequential, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.build_eq_x_r_vec_sequential.0.0 = %RET^b0.to_ext
    field ret^0^b1.build_eq_x_r_vec_sequential.0.0 = %RET^b1.to_ext
    evals.build_eq_x_r_vec_sequential.0.0[2 <Field> * 0 <Field>] = ret^0^b0.build_eq_x_r_vec_sequential.0.0 <field>
    evals.build_eq_x_r_vec_sequential.0.0[2 <Field> * 0 <Field> + 1 <Field>] = ret^0^b1.build_eq_x_r_vec_sequential.0.0 <field>
    u32 next_size.build_eq_x_r_vec_sequential.0.0 = 1 <U32>
Transition: -> 61

Block 61:
Func: build_eq_x_r_vec_sequential, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.build_eq_x_r_vec_sequential.0.0 = 0 <U32>
Transition: 
    i.build_eq_x_r_vec_sequential.0.0 != r_len.build_eq_x_r_vec_sequential.0.0 ? -> 62 : -> 71

Block 62:
Func: build_eq_x_r_vec_sequential, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 63

Block 63:
Func: build_eq_x_r_vec_sequential, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.build_eq_x_r_vec_sequential.0.0 = r.build_eq_x_r_vec_sequential.0.0[2 <U32> * r_len.build_eq_x_r_vec_sequential.0.0 - 1 <U32> - i.build_eq_x_r_vec_sequential.0.0]
    field load^0^b1.build_eq_x_r_vec_sequential.0.0 = r.build_eq_x_r_vec_sequential.0.0[2 <U32> * r_len.build_eq_x_r_vec_sequential.0.0 - 1 <U32> - i.build_eq_x_r_vec_sequential.0.0 + 1 <U32>]
    field r_i^b0.build_eq_x_r_vec_sequential.0.0 = load^0^b0.build_eq_x_r_vec_sequential.0.0
    field r_i^b1.build_eq_x_r_vec_sequential.0.0 = load^0^b1.build_eq_x_r_vec_sequential.0.0
    u32 j.build_eq_x_r_vec_sequential.0.0 = next_size.build_eq_x_r_vec_sequential.0.0
Transition: 
    j.build_eq_x_r_vec_sequential.0.0 != 0 <U32> ? -> 64 : -> 69

Block 64:
Func: build_eq_x_r_vec_sequential, Scope: 4
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.build_eq_x_r_vec_sequential.0.0 = j.build_eq_x_r_vec_sequential.0.0 - 1 <U32>
    field load^0^b0.build_eq_x_r_vec_sequential.1.0 = evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * j.build_eq_x_r_vec_sequential.0.0]
    field load^0^b1.build_eq_x_r_vec_sequential.1.0 = evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * j.build_eq_x_r_vec_sequential.0.0 + 1 <U32>]
    field evals_j^b0.build_eq_x_r_vec_sequential.0.0 = load^0^b0.build_eq_x_r_vec_sequential.1.0
    field evals_j^b1.build_eq_x_r_vec_sequential.0.0 = load^0^b1.build_eq_x_r_vec_sequential.1.0
    field e0^b0.ext_mul.0.0 = r_i^b0.build_eq_x_r_vec_sequential.0.0
    field e0^b1.ext_mul.0.0 = r_i^b1.build_eq_x_r_vec_sequential.0.0
    field e1^b0.ext_mul.0.0 = evals_j^b0.build_eq_x_r_vec_sequential.0.0
    field e1^b1.ext_mul.0.0 = evals_j^b1.build_eq_x_r_vec_sequential.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.build_eq_x_r_vec_sequential.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.build_eq_x_r_vec_sequential.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.build_eq_x_r_vec_sequential.0.0
    field rp@.ext_mul = 65 <Field>
Transition: -> 611

Block 65:
Func: build_eq_x_r_vec_sequential, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.build_eq_x_r_vec_sequential.1.0 = %RET^b0.ext_mul
    field ret^0^b1.build_eq_x_r_vec_sequential.1.0 = %RET^b1.ext_mul
    evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * 2 <U32> * j.build_eq_x_r_vec_sequential.0.0 + 1 <U32>] = ret^0^b0.build_eq_x_r_vec_sequential.1.0 <field>
    evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * 2 <U32> * j.build_eq_x_r_vec_sequential.0.0 + 1 <U32> + 1 <U32>] = ret^0^b1.build_eq_x_r_vec_sequential.1.0 <field>
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.build_eq_x_r_vec_sequential.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.build_eq_x_r_vec_sequential.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.build_eq_x_r_vec_sequential.0.0
    field rp@.to_ext = 66 <Field>
Transition: -> 613

Block 66:
Func: build_eq_x_r_vec_sequential, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.build_eq_x_r_vec_sequential.1.0 = %RET^b0.to_ext
    field ret^0^b1.build_eq_x_r_vec_sequential.1.0 = %RET^b1.to_ext
    field e0^b0.ext_sub.0.0 = ret^0^b0.build_eq_x_r_vec_sequential.1.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.build_eq_x_r_vec_sequential.1.0
    field e1^b0.ext_sub.0.0 = r_i^b0.build_eq_x_r_vec_sequential.0.0
    field e1^b1.ext_sub.0.0 = r_i^b1.build_eq_x_r_vec_sequential.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.build_eq_x_r_vec_sequential.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.build_eq_x_r_vec_sequential.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.build_eq_x_r_vec_sequential.0.0
    field rp@.ext_sub = 67 <Field>
Transition: -> 615

Block 67:
Func: build_eq_x_r_vec_sequential, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.build_eq_x_r_vec_sequential.0.0 = %RET^b0.ext_sub
    field ret^1^b1.build_eq_x_r_vec_sequential.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_mul.0.0 = ret^1^b0.build_eq_x_r_vec_sequential.0.0
    field e0^b1.ext_mul.0.0 = ret^1^b1.build_eq_x_r_vec_sequential.0.0
    field e1^b0.ext_mul.0.0 = evals_j^b0.build_eq_x_r_vec_sequential.0.0
    field e1^b1.ext_mul.0.0 = evals_j^b1.build_eq_x_r_vec_sequential.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.build_eq_x_r_vec_sequential.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.build_eq_x_r_vec_sequential.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.build_eq_x_r_vec_sequential.0.0
    field rp@.ext_mul = 68 <Field>
Transition: -> 617

Block 68:
Func: build_eq_x_r_vec_sequential, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.build_eq_x_r_vec_sequential.0.0 = %RET^b0.ext_mul
    field ret^2^b1.build_eq_x_r_vec_sequential.0.0 = %RET^b1.ext_mul
    evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * 2 <U32> * j.build_eq_x_r_vec_sequential.0.0] = ret^2^b0.build_eq_x_r_vec_sequential.0.0 <field>
    evals.build_eq_x_r_vec_sequential.0.0[2 <U32> * 2 <U32> * j.build_eq_x_r_vec_sequential.0.0 + 1 <U32>] = ret^2^b1.build_eq_x_r_vec_sequential.0.0 <field>
Transition: 
    j.build_eq_x_r_vec_sequential.0.0 != 0 <U32> ? -> 64 : -> 69

Block 69:
Func: build_eq_x_r_vec_sequential, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 next_size.build_eq_x_r_vec_sequential.0.0 = next_size.build_eq_x_r_vec_sequential.0.0 * 2 <U32>
Transition: -> 70

Block 70:
Func: build_eq_x_r_vec_sequential, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.build_eq_x_r_vec_sequential.0.0 = i.build_eq_x_r_vec_sequential.0.0 + 1 <U32>
Transition: 
    i.build_eq_x_r_vec_sequential.0.0 != r_len.build_eq_x_r_vec_sequential.0.0 ? -> 62 : -> 71

Block 71:
Func: build_eq_x_r_vec_sequential, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 72

Block 72:
Func: build_eq_x_r_vec_sequential, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.build_eq_x_r_vec_sequential = evals.build_eq_x_r_vec_sequential.0.0
Transition: -> rp@.build_eq_x_r_vec_sequential

Block 73:
Func: build_eq_x_r_vec_sequential, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.build_eq_x_r_vec_sequential

Block 74:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 75 <Field>
Transition: -> 619

Block 75:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.eq_eval.0.0 = %RET^b1.to_ext
    field res^b0.eq_eval.0.0 = ret^0^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^0^b1.eq_eval.0.0
Transition: -> 76

Block 76:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.eq_eval.0.0 = 0 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 77 : -> 87

Block 77:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 78

Block 78:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field xi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field xi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field load^0^b0.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field yi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field yi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field e0^b0.ext_mul.0.0 = xi^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = xi^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 79 <Field>
Transition: -> 621

Block 79:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_mul
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_mul
    field xi_yi^b0.eq_eval.0.0 = ret^0^b0.eq_eval.1.0
    field xi_yi^b1.eq_eval.0.0 = ret^0^b1.eq_eval.1.0
    field e0^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 80 <Field>
Transition: -> 623

Block 80:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_add
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_add
    field e0^b0.ext_sub.0.0 = ret^0^b0.eq_eval.1.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.eq_eval.1.0
    field e1^b0.ext_sub.0.0 = xi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = xi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 81 <Field>
Transition: -> 625

Block 81:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.eq_eval.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_sub.0.0 = ret^1^b0.eq_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^1^b1.eq_eval.0.0
    field e1^b0.ext_sub.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 82 <Field>
Transition: -> 627

Block 82:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^2^b1.eq_eval.0.0 = %RET^b1.ext_sub
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 83 <Field>
Transition: -> 629

Block 83:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^3^b1.eq_eval.0.0 = %RET^b1.to_ext
    field e0^b0.ext_add.0.0 = ret^2^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 84 <Field>
Transition: -> 631

Block 84:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.eq_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.eq_eval.0.0 = %RET^b1.ext_add
    field e0^b0.ext_mul.0.0 = res^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = res^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = ret^4^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = ret^4^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 85 <Field>
Transition: -> 633

Block 85:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.eq_eval.0.0 = %RET^b0.ext_mul
    field ret^5^b1.eq_eval.0.0 = %RET^b1.ext_mul
    field res^b0.eq_eval.0.0 = ret^5^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^5^b1.eq_eval.0.0
Transition: -> 86

Block 86:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.eq_eval.0.0 = i.eq_eval.0.0 + 1 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 77 : -> 87

Block 87:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 88

Block 88:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^b0.eq_eval = res^b0.eq_eval.0.0
    field %RET^b1.eq_eval = res^b1.eq_eval.0.0
Transition: -> rp@.eq_eval

Block 89:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.eq_eval

Block 90:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 91

Block 91:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.mle_eval.0.0 = 0 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 92 : -> 106

Block 92:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 93

Block 93:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 mle_len.mle_eval.0.0 = mle_len.mle_eval.0.0 / 2 <U32>
Transition: -> 94

Block 94:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.mle_eval.0.0 = 0 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 95 : -> 103

Block 95:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 96

Block 96:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.mle_eval.0.0
    field rp@.to_ext = 97 <Field>
Transition: -> 635

Block 97:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.mle_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.mle_eval.0.0 = %RET^b1.to_ext
    field load^0^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^0^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_sub.0.0 = ret^0^b0.mle_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.mle_eval.0.0
    field e1^b0.ext_sub.0.0 = load^0^b0.mle_eval.0.0
    field e1^b1.ext_sub.0.0 = load^0^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_sub = 98 <Field>
Transition: -> 637

Block 98:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.mle_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.mle_eval.0.0 = %RET^b1.ext_sub
    field load^1^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0]
    field load^1^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = ret^1^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = ret^1^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^1^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^1^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 99 <Field>
Transition: -> 639

Block 99:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^2^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field load^2^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^2^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field load^3^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0]
    field load^3^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^2^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = load^2^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^3^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 100 <Field>
Transition: -> 641

Block 100:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^3^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^2^b0.mle_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.mle_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.mle_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_add = 101 <Field>
Transition: -> 643

Block 101:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.mle_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.mle_eval.0.0 = %RET^b1.ext_add
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0] = ret^4^b0.mle_eval.0.0 <field>
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>] = ret^4^b1.mle_eval.0.0 <field>
Transition: -> 102

Block 102:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.mle_eval.0.0 = j.mle_eval.0.0 + 1 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 95 : -> 103

Block 103:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 104

Block 104:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 105

Block 105:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.mle_eval.0.0 = i.mle_eval.0.0 + 1 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 92 : -> 106

Block 106:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 107

Block 107:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field %RET^b0.mle_eval = load^0^b0.mle_eval.0.1
    field %RET^b1.mle_eval = load^0^b1.mle_eval.0.1
Transition: -> rp@.mle_eval

Block 108:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.mle_eval

Block 109:
Func: poseidon, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 24
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.poseidon.0.0 = input.poseidon.0.0[0 <Field>]
    field state0.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[1 <Field>]
    field state1.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[2 <Field>]
    field state2.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[3 <Field>]
    field state3.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[4 <Field>]
    field state4.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[5 <Field>]
    field state5.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[6 <Field>]
    field state6.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[7 <Field>]
    field state7.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[8 <Field>]
    field state8.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[9 <Field>]
    field state9.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[10 <Field>]
    field state10.poseidon.0.0 = load^0.poseidon.0.0
    field load^0.poseidon.0.0 = input.poseidon.0.0[11 <Field>]
    field state11.poseidon.0.0 = load^0.poseidon.0.0
    field c0.poseidon.0.0 = 13080132714287612933 <Field>
    field c1.poseidon.0.0 = 8594738767457295063 <Field>
    field c2.poseidon.0.0 = 12896916465481390516 <Field>
    field c3.poseidon.0.0 = 1109962092811921367 <Field>
    field c4.poseidon.0.0 = 16216730422861946898 <Field>
    field c5.poseidon.0.0 = 10137062673499593713 <Field>
    field c6.poseidon.0.0 = 15292064466732465823 <Field>
    field c7.poseidon.0.0 = 17255573294985989181 <Field>
    field c8.poseidon.0.0 = 14827154241873003558 <Field>
    field c9.poseidon.0.0 = 2846171647972703231 <Field>
    field c1.poseidon.0.0 = 16246264663680317601 <Field>
    field c11.poseidon.0.0 = 14214208087951879286 <Field>
    field c12.poseidon.0.0 = 9667108687426275457 <Field>
    field c13.poseidon.0.0 = 6470857420712283733 <Field>
    field c14.poseidon.0.0 = 14103331940138337652 <Field>
    field c15.poseidon.0.0 = 11854816473550292865 <Field>
    field c16.poseidon.0.0 = 3498097497301325516 <Field>
    field c17.poseidon.0.0 = 7947235692523864220 <Field>
    field c18.poseidon.0.0 = 11110078701231901946 <Field>
    field c19.poseidon.0.0 = 16384314112672821048 <Field>
    field c2.poseidon.0.0 = 15404405912655775739 <Field>
    field c21.poseidon.0.0 = 14077880830714445579 <Field>
    field c22.poseidon.0.0 = 9555554662709218279 <Field>
    field c23.poseidon.0.0 = 13859595358210603949 <Field>
    field c24.poseidon.0.0 = 16859897325061800066 <Field>
    field c25.poseidon.0.0 = 17685474420222222349 <Field>
    field c26.poseidon.0.0 = 17858764734618734949 <Field>
    field c27.poseidon.0.0 = 9410011022665866671 <Field>
    field c28.poseidon.0.0 = 12495243629579414666 <Field>
    field c29.poseidon.0.0 = 12416945298171515742 <Field>
    field c3.poseidon.0.0 = 5776666812364270983 <Field>
    field c31.poseidon.0.0 = 6314421662864060481 <Field>
    field c32.poseidon.0.0 = 7402742471423223171 <Field>
    field c33.poseidon.0.0 = 982536713192432718 <Field>
    field c34.poseidon.0.0 = 17321168865775127905 <Field>
    field c35.poseidon.0.0 = 2934354895005980211 <Field>
    field c36.poseidon.0.0 = 10567510598607410195 <Field>
    field c37.poseidon.0.0 = 8135543733717919110 <Field>
    field c38.poseidon.0.0 = 116353493081713692 <Field>
    field c39.poseidon.0.0 = 8029688163494945618 <Field>
    field c4.poseidon.0.0 = 9003846637224807585 <Field>
    field c41.poseidon.0.0 = 7052445132467233849 <Field>
    field c42.poseidon.0.0 = 9645665432288852853 <Field>
    field c43.poseidon.0.0 = 5446430061030868787 <Field>
    field c44.poseidon.0.0 = 16770910634346036823 <Field>
    field c45.poseidon.0.0 = 17708360571433944729 <Field>
    field c46.poseidon.0.0 = 4661556288322237631 <Field>
    field c47.poseidon.0.0 = 11977051899316327985 <Field>
    field c48.poseidon.0.0 = 4378616569090929672 <Field>
    field c49.poseidon.0.0 = 3334807502817538491 <Field>
    field c5.poseidon.0.0 = 8019184735943344966 <Field>
    field c51.poseidon.0.0 = 2395043908812246395 <Field>
    field c52.poseidon.0.0 = 6558421058331732611 <Field>
    field c53.poseidon.0.0 = 11735894060727326369 <Field>
    field c54.poseidon.0.0 = 8143540538889204488 <Field>
    field c55.poseidon.0.0 = 5991753489563751169 <Field>
    field c56.poseidon.0.0 = 12235918791502088007 <Field>
    field c57.poseidon.0.0 = 2880312033702687139 <Field>
    field c58.poseidon.0.0 = 18224748115308382355 <Field>
    field c59.poseidon.0.0 = 18070411013125314165 <Field>
    field c6.poseidon.0.0 = 8156487614120951180 <Field>
    field c61.poseidon.0.0 = 10615269510047010719 <Field>
    field c62.poseidon.0.0 = 12489426404754222075 <Field>
    field c63.poseidon.0.0 = 5055279340069995710 <Field>
    field c64.poseidon.0.0 = 7231927319780248664 <Field>
    field c65.poseidon.0.0 = 2602078848106763799 <Field>
    field c66.poseidon.0.0 = 12445944369334781425 <Field>
    field c67.poseidon.0.0 = 3978905923892496205 <Field>
    field c68.poseidon.0.0 = 16711272944329818038 <Field>
    field c69.poseidon.0.0 = 10439032361227108922 <Field>
    field c7.poseidon.0.0 = 15110119871725214866 <Field>
    field c71.poseidon.0.0 = 821141790655890946 <Field>
    field c72.poseidon.0.0 = 11073536380651186235 <Field>
    field c73.poseidon.0.0 = 4866839313097607757 <Field>
    field c74.poseidon.0.0 = 13118391689513956636 <Field>
    field c75.poseidon.0.0 = 14527674973762312380 <Field>
    field c76.poseidon.0.0 = 7612751959265567999 <Field>
    field c77.poseidon.0.0 = 6808090907814178161 <Field>
    field c78.poseidon.0.0 = 6899703779492644997 <Field>
    field c79.poseidon.0.0 = 3664666286336986826 <Field>
    field c8.poseidon.0.0 = 783179505424462608 <Field>
    field c81.poseidon.0.0 = 8990689241814097697 <Field>
    field c82.poseidon.0.0 = 9646603555412825679 <Field>
    field c83.poseidon.0.0 = 7351246026167205041 <Field>
    field c84.poseidon.0.0 = 16970959813722173256 <Field>
    field c85.poseidon.0.0 = 15735726858241466429 <Field>
    field c86.poseidon.0.0 = 10347018221892268419 <Field>
    field c87.poseidon.0.0 = 12195545878449322889 <Field>
    field c88.poseidon.0.0 = 7423314197114049891 <Field>
    field c89.poseidon.0.0 = 14908016116973904153 <Field>
    field c9.poseidon.0.0 = 5840340122527363265 <Field>
    field c91.poseidon.0.0 = 17740311462440614128 <Field>
    field c92.poseidon.0.0 = 815306421953744623 <Field>
    field c93.poseidon.0.0 = 17456357368219253949 <Field>
    field c94.poseidon.0.0 = 6982651076559329072 <Field>
    field c95.poseidon.0.0 = 11970987324614963868 <Field>
    field c96.poseidon.0.0 = 8167785008538063246 <Field>
    field c97.poseidon.0.0 = 9483259819397403968 <Field>
    field c98.poseidon.0.0 = 954550221664291548 <Field>
    field c99.poseidon.0.0 = 10339565171024313256 <Field>
    field c1.poseidon.0.0 = 8651171084286500102 <Field>
    field c11.poseidon.0.0 = 16974445528003515956 <Field>
    field c12.poseidon.0.0 = 15104530047940621190 <Field>
    field c13.poseidon.0.0 = 103271880867179718 <Field>
    field c14.poseidon.0.0 = 14654666245504492663 <Field>
    field c15.poseidon.0.0 = 12445769555936887967 <Field>
    field c16.poseidon.0.0 = 11250582358051997490 <Field>
    field c17.poseidon.0.0 = 6730977207490590241 <Field>
    field c18.poseidon.0.0 = 15919951556166196935 <Field>
    field c19.poseidon.0.0 = 4423540216573360915 <Field>
    field c110.poseidon.0.0 = 16317664700341473511 <Field>
    field c111.poseidon.0.0 = 4723997214951767765 <Field>
    field c112.poseidon.0.0 = 10098756619006575500 <Field>
    field c113.poseidon.0.0 = 3223149401237667964 <Field>
    field c114.poseidon.0.0 = 6870494874300767682 <Field>
    field c115.poseidon.0.0 = 2902095711130291898 <Field>
    field c116.poseidon.0.0 = 7159372652788439733 <Field>
    field c117.poseidon.0.0 = 11500508372997952671 <Field>
    field c118.poseidon.0.0 = 13348148181479462670 <Field>
    field c119.poseidon.0.0 = 12729401155983882093 <Field>
    field c120.poseidon.0.0 = 15021242795466053388 <Field>
    field c121.poseidon.0.0 = 3802990509227527157 <Field>
    field c122.poseidon.0.0 = 4665459515680145682 <Field>
    field c123.poseidon.0.0 = 13165553315407675603 <Field>
    field c124.poseidon.0.0 = 6496364397926233172 <Field>
    field c125.poseidon.0.0 = 12800832566287577810 <Field>
    field c126.poseidon.0.0 = 9737592377590267426 <Field>
    field c127.poseidon.0.0 = 8687131091302514939 <Field>
    field c128.poseidon.0.0 = 1488200421755445892 <Field>
    field c129.poseidon.0.0 = 11004377668730991641 <Field>
    field c130.poseidon.0.0 = 13516338734600228410 <Field>
    field c131.poseidon.0.0 = 2953581820660217936 <Field>
    field c132.poseidon.0.0 = 3505040783153922951 <Field>
    field c133.poseidon.0.0 = 3710332827435113697 <Field>
    field c134.poseidon.0.0 = 15414874040873320221 <Field>
    field c135.poseidon.0.0 = 8602547649919482301 <Field>
    field c136.poseidon.0.0 = 13971349938398812007 <Field>
    field c137.poseidon.0.0 = 187239246702636066 <Field>
    field c138.poseidon.0.0 = 12886019973971254144 <Field>
    field c139.poseidon.0.0 = 4512274763990493707 <Field>
    field c140.poseidon.0.0 = 2986635507805503192 <Field>
    field c141.poseidon.0.0 = 2315252455709119454 <Field>
    field c142.poseidon.0.0 = 12537995864054210246 <Field>
    field c143.poseidon.0.0 = 2039491936479859267 <Field>
    field c144.poseidon.0.0 = 1558644089185031256 <Field>
    field c145.poseidon.0.0 = 4074089203264759305 <Field>
    field c146.poseidon.0.0 = 2522268501749395707 <Field>
    field c147.poseidon.0.0 = 3414760436185256196 <Field>
    field c148.poseidon.0.0 = 17420887529146466921 <Field>
    field c149.poseidon.0.0 = 2817020417938125001 <Field>
    field c150.poseidon.0.0 = 16538346563888261485 <Field>
    field c151.poseidon.0.0 = 5592270336833998770 <Field>
    field c152.poseidon.0.0 = 16876602064684906232 <Field>
    field c153.poseidon.0.0 = 1793025614521516343 <Field>
    field c154.poseidon.0.0 = 2178510518148748532 <Field>
    field c155.poseidon.0.0 = 2726440714374752509 <Field>
    field c156.poseidon.0.0 = 6502946837278398021 <Field>
    field c157.poseidon.0.0 = 15816362857667988792 <Field>
    field c158.poseidon.0.0 = 12997958454165692924 <Field>
    field c159.poseidon.0.0 = 5314892854495903792 <Field>
    field c160.poseidon.0.0 = 15533907063555687782 <Field>
    field c161.poseidon.0.0 = 12312015675698548715 <Field>
    field c162.poseidon.0.0 = 14140016464013350248 <Field>
    field c163.poseidon.0.0 = 16325589062962838690 <Field>
    field c164.poseidon.0.0 = 6796145646370327654 <Field>
    field c165.poseidon.0.0 = 1168753512742361735 <Field>
    field c166.poseidon.0.0 = 4100789820704709368 <Field>
    field c167.poseidon.0.0 = 15947554381540469177 <Field>
    field c168.poseidon.0.0 = 8597377839806076919 <Field>
    field c169.poseidon.0.0 = 9704018824195918000 <Field>
    field c170.poseidon.0.0 = 12763288618765762688 <Field>
    field c171.poseidon.0.0 = 17249257732622847695 <Field>
    field c172.poseidon.0.0 = 1998710993415069759 <Field>
    field c173.poseidon.0.0 = 923759906393011543 <Field>
    field c174.poseidon.0.0 = 1271051229666811593 <Field>
    field c175.poseidon.0.0 = 17822362132088738077 <Field>
    field c176.poseidon.0.0 = 11797234543722669271 <Field>
    field c177.poseidon.0.0 = 5864538787265942447 <Field>
    field c178.poseidon.0.0 = 15975583211110506970 <Field>
    field c179.poseidon.0.0 = 7258516085733671960 <Field>
    field c180.poseidon.0.0 = 17999926471875633100 <Field>
    field c181.poseidon.0.0 = 635992114476018166 <Field>
    field c182.poseidon.0.0 = 17205047318256576347 <Field>
    field c183.poseidon.0.0 = 17384900867876315312 <Field>
    field c184.poseidon.0.0 = 16484825562915784226 <Field>
    field c185.poseidon.0.0 = 16694130609036138894 <Field>
    field c186.poseidon.0.0 = 10575069350371260875 <Field>
    field c187.poseidon.0.0 = 8330575162062887277 <Field>
    field c188.poseidon.0.0 = 6212375704691932880 <Field>
    field c189.poseidon.0.0 = 15965138197626618226 <Field>
    field c190.poseidon.0.0 = 14285453069600046939 <Field>
    field c191.poseidon.0.0 = 10005163510208402517 <Field>
    field c192.poseidon.0.0 = 885298637936952595 <Field>
    field c193.poseidon.0.0 = 541790758138118921 <Field>
    field c194.poseidon.0.0 = 5985203084790372993 <Field>
    field c195.poseidon.0.0 = 4685030219775483721 <Field>
    field c196.poseidon.0.0 = 1411106851304815020 <Field>
    field c197.poseidon.0.0 = 11290732479954096478 <Field>
    field c198.poseidon.0.0 = 208280581124868513 <Field>
    field c199.poseidon.0.0 = 10979018648467968495 <Field>
    field c2.poseidon.0.0 = 8600643745023338215 <Field>
    field c21.poseidon.0.0 = 3477453626867126061 <Field>
    field c22.poseidon.0.0 = 6428436309340258604 <Field>
    field c23.poseidon.0.0 = 5695415667275657934 <Field>
    field c24.poseidon.0.0 = 15952065508715623490 <Field>
    field c25.poseidon.0.0 = 15571300830419767248 <Field>
    field c26.poseidon.0.0 = 17259785660502616862 <Field>
    field c27.poseidon.0.0 = 4298425495274316083 <Field>
    field c28.poseidon.0.0 = 9023601070579319352 <Field>
    field c29.poseidon.0.0 = 7353589709321807492 <Field>
    field c210.poseidon.0.0 = 2988848909076209475 <Field>
    field c211.poseidon.0.0 = 10439527789422046135 <Field>
    field c212.poseidon.0.0 = 6097734044161429459 <Field>
    field c213.poseidon.0.0 = 1113429873817861476 <Field>
    field c214.poseidon.0.0 = 1639063372386966591 <Field>
    field c215.poseidon.0.0 = 7863102812716788759 <Field>
    field c216.poseidon.0.0 = 216040220732135364 <Field>
    field c217.poseidon.0.0 = 14252611488623712688 <Field>
    field c218.poseidon.0.0 = 9543395466794536974 <Field>
    field c219.poseidon.0.0 = 2714461051639810934 <Field>
    field c220.poseidon.0.0 = 2588317208781407279 <Field>
    field c221.poseidon.0.0 = 15458529123534594916 <Field>
    field c222.poseidon.0.0 = 15748417817551040856 <Field>
    field c223.poseidon.0.0 = 16414455697114422951 <Field>
    field c224.poseidon.0.0 = 13378164466674639511 <Field>
    field c225.poseidon.0.0 = 13894319928411294675 <Field>
    field c226.poseidon.0.0 = 5032680892090751540 <Field>
    field c227.poseidon.0.0 = 17201338494743078916 <Field>
    field c228.poseidon.0.0 = 4397422800601932505 <Field>
    field c229.poseidon.0.0 = 11285062031581972327 <Field>
    field c230.poseidon.0.0 = 7309354640676468207 <Field>
    field c231.poseidon.0.0 = 10457152817239331848 <Field>
    field c232.poseidon.0.0 = 8855911538863247046 <Field>
    field c233.poseidon.0.0 = 4301853449821814398 <Field>
    field c234.poseidon.0.0 = 13001502396339103326 <Field>
    field c235.poseidon.0.0 = 10218424535115580246 <Field>
    field c236.poseidon.0.0 = 8628244713920681895 <Field>
    field c237.poseidon.0.0 = 17410423622514037261 <Field>
    field c238.poseidon.0.0 = 14080683768439215375 <Field>
    field c239.poseidon.0.0 = 11453161143447188100 <Field>
    field c240.poseidon.0.0 = 16761509772042181939 <Field>
    field c241.poseidon.0.0 = 6688821660695954082 <Field>
    field c242.poseidon.0.0 = 12083434295263160416 <Field>
    field c243.poseidon.0.0 = 8540021431714616589 <Field>
    field c244.poseidon.0.0 = 6891616215679974226 <Field>
    field c245.poseidon.0.0 = 10229217098454812721 <Field>
    field c246.poseidon.0.0 = 3292165387203778711 <Field>
    field c247.poseidon.0.0 = 6090113424998243490 <Field>
    field c248.poseidon.0.0 = 13431780521962358660 <Field>
    field c249.poseidon.0.0 = 6061081364215809883 <Field>
    field c250.poseidon.0.0 = 16792066504222214142 <Field>
    field c251.poseidon.0.0 = 16134314044798124799 <Field>
    field c252.poseidon.0.0 = 17070233710126619765 <Field>
    field c253.poseidon.0.0 = 6915716851370550800 <Field>
    field c254.poseidon.0.0 = 9505009849073026581 <Field>
    field c255.poseidon.0.0 = 6422700465081897153 <Field>
    field c256.poseidon.0.0 = 17977653991560529185 <Field>
    field c257.poseidon.0.0 = 5800870252836247255 <Field>
    field c258.poseidon.0.0 = 12096124733159345520 <Field>
    field c259.poseidon.0.0 = 7679273623392321940 <Field>
    field c260.poseidon.0.0 = 17835783910585744964 <Field>
    field c261.poseidon.0.0 = 2478664878205754377 <Field>
    field c262.poseidon.0.0 = 1720314468413114967 <Field>
    field c263.poseidon.0.0 = 10376757819003248056 <Field>
    field c264.poseidon.0.0 = 10376377187857634245 <Field>
    field c265.poseidon.0.0 = 13344930747504284997 <Field>
    field c266.poseidon.0.0 = 11579281865160153596 <Field>
    field c267.poseidon.0.0 = 10300256980048736962 <Field>
    field c268.poseidon.0.0 = 378765236515040565 <Field>
    field c269.poseidon.0.0 = 11412420941557253424 <Field>
    field c270.poseidon.0.0 = 12931662470734252786 <Field>
    field c271.poseidon.0.0 = 43018908376346374 <Field>
    field c272.poseidon.0.0 = 3589810689190160071 <Field>
    field c273.poseidon.0.0 = 4688229274750659741 <Field>
    field c274.poseidon.0.0 = 13688957436484306091 <Field>
    field c275.poseidon.0.0 = 11424740943016984272 <Field>
    field c276.poseidon.0.0 = 16001900718237913960 <Field>
    field c277.poseidon.0.0 = 5548469743008097574 <Field>
    field c278.poseidon.0.0 = 14584404916672178680 <Field>
    field c279.poseidon.0.0 = 3396622135873576824 <Field>
    field c280.poseidon.0.0 = 7861729246871155992 <Field>
    field c281.poseidon.0.0 = 16112271126908045545 <Field>
    field c282.poseidon.0.0 = 16988163966860016012 <Field>
    field c283.poseidon.0.0 = 273641680619529493 <Field>
    field c284.poseidon.0.0 = 15222677154027327363 <Field>
    field c285.poseidon.0.0 = 4070328078309830604 <Field>
    field c286.poseidon.0.0 = 13520458500363296391 <Field>
    field c287.poseidon.0.0 = 8235111705801363015 <Field>
    field c288.poseidon.0.0 = 5575990058472514138 <Field>
    field c289.poseidon.0.0 = 2751301609188252989 <Field>
    field c290.poseidon.0.0 = 6478598528223547074 <Field>
    field c291.poseidon.0.0 = 386565553848556638 <Field>
    field c292.poseidon.0.0 = 9417729078939938713 <Field>
    field c293.poseidon.0.0 = 15204315939835727483 <Field>
    field c294.poseidon.0.0 = 14942015033780606261 <Field>
    field c295.poseidon.0.0 = 18369423901636582012 <Field>
    field c296.poseidon.0.0 = 4715338437538604447 <Field>
    field c297.poseidon.0.0 = 6840590980607806319 <Field>
    field c298.poseidon.0.0 = 5535471161490539014 <Field>
    field c299.poseidon.0.0 = 5341328005359029952 <Field>
    field c3.poseidon.0.0 = 1475161295215894444 <Field>
    field c31.poseidon.0.0 = 7999197814297036636 <Field>
    field c32.poseidon.0.0 = 2984233088665867938 <Field>
    field c33.poseidon.0.0 = 3097746028144832229 <Field>
    field c34.poseidon.0.0 = 8849530863480031517 <Field>
    field c35.poseidon.0.0 = 7464920943249009773 <Field>
    field c36.poseidon.0.0 = 3802996844641460514 <Field>
    field c37.poseidon.0.0 = 6284458522545927646 <Field>
    field c38.poseidon.0.0 = 2307388003445002779 <Field>
    field c39.poseidon.0.0 = 4461479354745457623 <Field>
    field c310.poseidon.0.0 = 1649739722664588460 <Field>
    field c311.poseidon.0.0 = 3008391274160432867 <Field>
    field c312.poseidon.0.0 = 5142217010456550622 <Field>
    field c313.poseidon.0.0 = 1775580461722730120 <Field>
    field c314.poseidon.0.0 = 161694268822794344 <Field>
    field c315.poseidon.0.0 = 1518963253808031703 <Field>
    field c316.poseidon.0.0 = 16475258091652710137 <Field>
    field c317.poseidon.0.0 = 119575899007375159 <Field>
    field c318.poseidon.0.0 = 1275863735937973999 <Field>
    field c319.poseidon.0.0 = 16539412514520642374 <Field>
    field c320.poseidon.0.0 = 2303365191438051950 <Field>
    field c321.poseidon.0.0 = 6435126839960916075 <Field>
    field c322.poseidon.0.0 = 17794599201026020053 <Field>
    field c323.poseidon.0.0 = 13847097589277840330 <Field>
    field c324.poseidon.0.0 = 16645869274577729720 <Field>
    field c325.poseidon.0.0 = 8039205965509554440 <Field>
    field c326.poseidon.0.0 = 4788586935019371140 <Field>
    field c327.poseidon.0.0 = 15129007200040077746 <Field>
    field c328.poseidon.0.0 = 2055561615223771341 <Field>
    field c329.poseidon.0.0 = 4149731103701412892 <Field>
    field c330.poseidon.0.0 = 10268130195734144189 <Field>
    field c331.poseidon.0.0 = 13406631635880074708 <Field>
    field c332.poseidon.0.0 = 11429218277824986203 <Field>
    field c333.poseidon.0.0 = 15773968030812198565 <Field>
    field c334.poseidon.0.0 = 16050275277550506872 <Field>
    field c335.poseidon.0.0 = 11858586752031736643 <Field>
    field c336.poseidon.0.0 = 8927746344866569756 <Field>
    field c337.poseidon.0.0 = 11802068403177695792 <Field>
    field c338.poseidon.0.0 = 157833420806751556 <Field>
    field c339.poseidon.0.0 = 4698875910749767878 <Field>
    field c340.poseidon.0.0 = 1616722774788291698 <Field>
    field c341.poseidon.0.0 = 3990951895163748090 <Field>
    field c342.poseidon.0.0 = 16758609224720795472 <Field>
    field c343.poseidon.0.0 = 3045571693290741477 <Field>
    field c344.poseidon.0.0 = 9281634245289836419 <Field>
    field c345.poseidon.0.0 = 13517688176723875370 <Field>
    field c346.poseidon.0.0 = 7961395585333219380 <Field>
    field c347.poseidon.0.0 = 1606574359105691080 <Field>
    field c348.poseidon.0.0 = 17564372683613562171 <Field>
    field c349.poseidon.0.0 = 4664015225343144418 <Field>
    field c350.poseidon.0.0 = 6133721340680280128 <Field>
    field c351.poseidon.0.0 = 2667022304383014929 <Field>
    field c352.poseidon.0.0 = 12316557761857340230 <Field>
    field c353.poseidon.0.0 = 10375614850625292317 <Field>
    field c354.poseidon.0.0 = 8141542666379135068 <Field>
    field c355.poseidon.0.0 = 9185476451083834432 <Field>
    field c356.poseidon.0.0 = 4991072365274649547 <Field>
    field c357.poseidon.0.0 = 17398204971778820365 <Field>
    field c358.poseidon.0.0 = 16127888338958422584 <Field>
    field c359.poseidon.0.0 = 13586792051317758204 <Field>
    field mc.poseidon.0.0 = 17 <Field>
    field mc1.poseidon.0.0 = 15 <Field>
    field mc2.poseidon.0.0 = 41 <Field>
    field mc3.poseidon.0.0 = 16 <Field>
    field mc4.poseidon.0.0 = 2 <Field>
    field mc5.poseidon.0.0 = 28 <Field>
    field mc6.poseidon.0.0 = 13 <Field>
    field mc7.poseidon.0.0 = 13 <Field>
    field mc8.poseidon.0.0 = 39 <Field>
    field mc9.poseidon.0.0 = 18 <Field>
    field mc10.poseidon.0.0 = 34 <Field>
    field mc11.poseidon.0.0 = 20 <Field>
    field md.poseidon.0.0 = 8 <Field>
    field md1.poseidon.0.0 = 0 <Field>
    field md2.poseidon.0.0 = 0 <Field>
    field md3.poseidon.0.0 = 0 <Field>
    field md4.poseidon.0.0 = 0 <Field>
    field md5.poseidon.0.0 = 0 <Field>
    field md6.poseidon.0.0 = 0 <Field>
    field md7.poseidon.0.0 = 0 <Field>
    field md8.poseidon.0.0 = 0 <Field>
    field md9.poseidon.0.0 = 0 <Field>
    field md10.poseidon.0.0 = 0 <Field>
    field md11.poseidon.0.0 = 0 <Field>
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c0.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c1.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c2.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c3.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c4.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c5.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c6.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c7.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c8.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c9.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c1.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c11.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c12.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c13.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c14.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c15.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c16.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c17.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c18.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c19.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c2.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c21.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c22.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c23.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c24.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c25.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c26.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c27.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c28.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c29.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c3.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c31.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c32.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c33.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c34.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c35.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c36.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c37.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c38.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c39.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c4.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c41.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c42.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c43.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c44.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c45.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c46.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c47.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c48.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c49.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c5.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c51.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c52.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c53.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c54.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c55.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c56.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c57.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c58.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c59.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c6.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c61.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c62.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c63.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c64.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c65.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c66.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c67.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c68.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c69.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c7.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c71.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c72.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c73.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c74.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c75.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c76.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c77.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c78.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c79.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c8.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c81.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c82.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c83.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c84.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c85.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c86.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c87.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c88.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c89.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c9.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c91.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c92.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c93.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c94.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c95.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c96.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c97.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c98.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c99.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c1.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c11.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c12.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c13.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c14.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c15.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c16.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c17.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c18.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c19.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c110.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c111.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c112.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c113.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c114.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c115.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c116.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c117.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c118.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c119.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c120.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c121.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c122.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c123.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c124.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c125.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c126.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c127.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c128.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c129.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c130.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c131.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c132.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c133.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c134.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c135.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c136.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c137.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c138.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c139.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c140.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c141.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c142.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c143.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c144.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c145.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c146.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c147.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c148.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c149.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c150.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c151.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c152.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c153.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c154.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c155.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c156.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c157.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c158.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c159.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c160.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c161.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c162.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c163.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c164.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c165.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c166.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c167.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c168.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c169.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c170.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c171.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c172.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c173.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c174.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c175.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c176.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c177.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c178.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c179.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c180.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c181.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c182.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c183.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c184.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c185.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c186.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c187.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c188.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c189.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c190.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c191.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c192.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c193.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c194.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c195.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c196.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c197.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c198.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c199.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c2.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c21.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c22.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c23.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c24.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c25.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c26.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c27.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c28.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c29.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c210.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c211.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c212.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c213.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c214.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c215.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c216.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c217.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c218.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c219.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c220.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c221.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c222.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c223.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c224.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c225.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c226.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c227.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c228.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c229.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c230.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c231.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c232.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c233.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c234.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c235.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c236.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c237.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c238.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c239.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c240.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c241.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c242.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c243.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c244.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c245.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c246.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c247.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c248.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c249.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c250.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c251.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c252.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c253.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c254.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c255.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c256.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c257.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c258.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c259.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c260.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c261.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c262.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c263.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c264.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c265.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c266.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c267.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c268.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c269.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c270.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c271.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c272.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c273.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c274.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c275.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c276.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c277.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c278.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c279.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c280.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c281.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c282.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c283.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c284.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c285.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c286.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c287.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c288.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c289.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c290.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c291.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c292.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c293.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c294.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c295.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c296.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c297.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c298.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c299.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c3.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c31.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c32.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c33.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c34.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c35.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c36.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c37.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c38.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c39.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c310.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c311.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0
    field new_state2.poseidon.0.0 = state2.poseidon.0.0
    field new_state3.poseidon.0.0 = state3.poseidon.0.0
    field new_state4.poseidon.0.0 = state4.poseidon.0.0
    field new_state5.poseidon.0.0 = state5.poseidon.0.0
    field new_state6.poseidon.0.0 = state6.poseidon.0.0
    field new_state7.poseidon.0.0 = state7.poseidon.0.0
    field new_state8.poseidon.0.0 = state8.poseidon.0.0
    field new_state9.poseidon.0.0 = state9.poseidon.0.0
    field new_state10.poseidon.0.0 = state10.poseidon.0.0
    field new_state11.poseidon.0.0 = state11.poseidon.0.0
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c312.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c313.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c314.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c315.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c316.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c317.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c318.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c319.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c320.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c321.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c322.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c323.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c324.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c325.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c326.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c327.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c328.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c329.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c330.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c331.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c332.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c333.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c334.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c335.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c336.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c337.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c338.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c339.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c340.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c341.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c342.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c343.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c344.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c345.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c346.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c347.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field state0.poseidon.0.0 = state0.poseidon.0.0 + c348.poseidon.0.0
    field state1.poseidon.0.0 = state1.poseidon.0.0 + c349.poseidon.0.0
    field state2.poseidon.0.0 = state2.poseidon.0.0 + c350.poseidon.0.0
    field state3.poseidon.0.0 = state3.poseidon.0.0 + c351.poseidon.0.0
    field state4.poseidon.0.0 = state4.poseidon.0.0 + c352.poseidon.0.0
    field state5.poseidon.0.0 = state5.poseidon.0.0 + c353.poseidon.0.0
    field state6.poseidon.0.0 = state6.poseidon.0.0 + c354.poseidon.0.0
    field state7.poseidon.0.0 = state7.poseidon.0.0 + c355.poseidon.0.0
    field state8.poseidon.0.0 = state8.poseidon.0.0 + c356.poseidon.0.0
    field state9.poseidon.0.0 = state9.poseidon.0.0 + c357.poseidon.0.0
    field state10.poseidon.0.0 = state10.poseidon.0.0 + c358.poseidon.0.0
    field state11.poseidon.0.0 = state11.poseidon.0.0 + c359.poseidon.0.0
    field new_state0.poseidon.0.0 = state0.poseidon.0.0 ** 7 <U32>
    field new_state1.poseidon.0.0 = state1.poseidon.0.0 ** 7 <U32>
    field new_state2.poseidon.0.0 = state2.poseidon.0.0 ** 7 <U32>
    field new_state3.poseidon.0.0 = state3.poseidon.0.0 ** 7 <U32>
    field new_state4.poseidon.0.0 = state4.poseidon.0.0 ** 7 <U32>
    field new_state5.poseidon.0.0 = state5.poseidon.0.0 ** 7 <U32>
    field new_state6.poseidon.0.0 = state6.poseidon.0.0 ** 7 <U32>
    field new_state7.poseidon.0.0 = state7.poseidon.0.0 ** 7 <U32>
    field new_state8.poseidon.0.0 = state8.poseidon.0.0 ** 7 <U32>
    field new_state9.poseidon.0.0 = state9.poseidon.0.0 ** 7 <U32>
    field new_state10.poseidon.0.0 = state10.poseidon.0.0 ** 7 <U32>
    field new_state11.poseidon.0.0 = state11.poseidon.0.0 ** 7 <U32>
    field state0.poseidon.0.0 = new_state0.poseidon.0.0 * md.poseidon.0.0 + new_state0.poseidon.0.0 * mc.poseidon.0.0 + new_state1.poseidon.0.0 * mc1.poseidon.0.0 + new_state2.poseidon.0.0 * mc2.poseidon.0.0 + new_state3.poseidon.0.0 * mc3.poseidon.0.0 + new_state4.poseidon.0.0 * mc4.poseidon.0.0 + new_state5.poseidon.0.0 * mc5.poseidon.0.0 + new_state6.poseidon.0.0 * mc6.poseidon.0.0 + new_state7.poseidon.0.0 * mc7.poseidon.0.0 + new_state8.poseidon.0.0 * mc8.poseidon.0.0 + new_state9.poseidon.0.0 * mc9.poseidon.0.0 + new_state10.poseidon.0.0 * mc10.poseidon.0.0 + new_state11.poseidon.0.0 * mc11.poseidon.0.0
    field state1.poseidon.0.0 = new_state1.poseidon.0.0 * md1.poseidon.0.0 + new_state1.poseidon.0.0 * mc.poseidon.0.0 + new_state2.poseidon.0.0 * mc1.poseidon.0.0 + new_state3.poseidon.0.0 * mc2.poseidon.0.0 + new_state4.poseidon.0.0 * mc3.poseidon.0.0 + new_state5.poseidon.0.0 * mc4.poseidon.0.0 + new_state6.poseidon.0.0 * mc5.poseidon.0.0 + new_state7.poseidon.0.0 * mc6.poseidon.0.0 + new_state8.poseidon.0.0 * mc7.poseidon.0.0 + new_state9.poseidon.0.0 * mc8.poseidon.0.0 + new_state10.poseidon.0.0 * mc9.poseidon.0.0 + new_state11.poseidon.0.0 * mc10.poseidon.0.0 + new_state0.poseidon.0.0 * mc11.poseidon.0.0
    field state2.poseidon.0.0 = new_state2.poseidon.0.0 * md2.poseidon.0.0 + new_state2.poseidon.0.0 * mc.poseidon.0.0 + new_state3.poseidon.0.0 * mc1.poseidon.0.0 + new_state4.poseidon.0.0 * mc2.poseidon.0.0 + new_state5.poseidon.0.0 * mc3.poseidon.0.0 + new_state6.poseidon.0.0 * mc4.poseidon.0.0 + new_state7.poseidon.0.0 * mc5.poseidon.0.0 + new_state8.poseidon.0.0 * mc6.poseidon.0.0 + new_state9.poseidon.0.0 * mc7.poseidon.0.0 + new_state10.poseidon.0.0 * mc8.poseidon.0.0 + new_state11.poseidon.0.0 * mc9.poseidon.0.0 + new_state0.poseidon.0.0 * mc10.poseidon.0.0 + new_state1.poseidon.0.0 * mc11.poseidon.0.0
    field state3.poseidon.0.0 = new_state3.poseidon.0.0 * md3.poseidon.0.0 + new_state3.poseidon.0.0 * mc.poseidon.0.0 + new_state4.poseidon.0.0 * mc1.poseidon.0.0 + new_state5.poseidon.0.0 * mc2.poseidon.0.0 + new_state6.poseidon.0.0 * mc3.poseidon.0.0 + new_state7.poseidon.0.0 * mc4.poseidon.0.0 + new_state8.poseidon.0.0 * mc5.poseidon.0.0 + new_state9.poseidon.0.0 * mc6.poseidon.0.0 + new_state10.poseidon.0.0 * mc7.poseidon.0.0 + new_state11.poseidon.0.0 * mc8.poseidon.0.0 + new_state0.poseidon.0.0 * mc9.poseidon.0.0 + new_state1.poseidon.0.0 * mc10.poseidon.0.0 + new_state2.poseidon.0.0 * mc11.poseidon.0.0
    field state4.poseidon.0.0 = new_state4.poseidon.0.0 * md4.poseidon.0.0 + new_state4.poseidon.0.0 * mc.poseidon.0.0 + new_state5.poseidon.0.0 * mc1.poseidon.0.0 + new_state6.poseidon.0.0 * mc2.poseidon.0.0 + new_state7.poseidon.0.0 * mc3.poseidon.0.0 + new_state8.poseidon.0.0 * mc4.poseidon.0.0 + new_state9.poseidon.0.0 * mc5.poseidon.0.0 + new_state10.poseidon.0.0 * mc6.poseidon.0.0 + new_state11.poseidon.0.0 * mc7.poseidon.0.0 + new_state0.poseidon.0.0 * mc8.poseidon.0.0 + new_state1.poseidon.0.0 * mc9.poseidon.0.0 + new_state2.poseidon.0.0 * mc10.poseidon.0.0 + new_state3.poseidon.0.0 * mc11.poseidon.0.0
    field state5.poseidon.0.0 = new_state5.poseidon.0.0 * md5.poseidon.0.0 + new_state5.poseidon.0.0 * mc.poseidon.0.0 + new_state6.poseidon.0.0 * mc1.poseidon.0.0 + new_state7.poseidon.0.0 * mc2.poseidon.0.0 + new_state8.poseidon.0.0 * mc3.poseidon.0.0 + new_state9.poseidon.0.0 * mc4.poseidon.0.0 + new_state10.poseidon.0.0 * mc5.poseidon.0.0 + new_state11.poseidon.0.0 * mc6.poseidon.0.0 + new_state0.poseidon.0.0 * mc7.poseidon.0.0 + new_state1.poseidon.0.0 * mc8.poseidon.0.0 + new_state2.poseidon.0.0 * mc9.poseidon.0.0 + new_state3.poseidon.0.0 * mc10.poseidon.0.0 + new_state4.poseidon.0.0 * mc11.poseidon.0.0
    field state6.poseidon.0.0 = new_state6.poseidon.0.0 * md6.poseidon.0.0 + new_state6.poseidon.0.0 * mc.poseidon.0.0 + new_state7.poseidon.0.0 * mc1.poseidon.0.0 + new_state8.poseidon.0.0 * mc2.poseidon.0.0 + new_state9.poseidon.0.0 * mc3.poseidon.0.0 + new_state10.poseidon.0.0 * mc4.poseidon.0.0 + new_state11.poseidon.0.0 * mc5.poseidon.0.0 + new_state0.poseidon.0.0 * mc6.poseidon.0.0 + new_state1.poseidon.0.0 * mc7.poseidon.0.0 + new_state2.poseidon.0.0 * mc8.poseidon.0.0 + new_state3.poseidon.0.0 * mc9.poseidon.0.0 + new_state4.poseidon.0.0 * mc10.poseidon.0.0 + new_state5.poseidon.0.0 * mc11.poseidon.0.0
    field state7.poseidon.0.0 = new_state7.poseidon.0.0 * md7.poseidon.0.0 + new_state7.poseidon.0.0 * mc.poseidon.0.0 + new_state8.poseidon.0.0 * mc1.poseidon.0.0 + new_state9.poseidon.0.0 * mc2.poseidon.0.0 + new_state10.poseidon.0.0 * mc3.poseidon.0.0 + new_state11.poseidon.0.0 * mc4.poseidon.0.0 + new_state0.poseidon.0.0 * mc5.poseidon.0.0 + new_state1.poseidon.0.0 * mc6.poseidon.0.0 + new_state2.poseidon.0.0 * mc7.poseidon.0.0 + new_state3.poseidon.0.0 * mc8.poseidon.0.0 + new_state4.poseidon.0.0 * mc9.poseidon.0.0 + new_state5.poseidon.0.0 * mc10.poseidon.0.0 + new_state6.poseidon.0.0 * mc11.poseidon.0.0
    field state8.poseidon.0.0 = new_state8.poseidon.0.0 * md8.poseidon.0.0 + new_state8.poseidon.0.0 * mc.poseidon.0.0 + new_state9.poseidon.0.0 * mc1.poseidon.0.0 + new_state10.poseidon.0.0 * mc2.poseidon.0.0 + new_state11.poseidon.0.0 * mc3.poseidon.0.0 + new_state0.poseidon.0.0 * mc4.poseidon.0.0 + new_state1.poseidon.0.0 * mc5.poseidon.0.0 + new_state2.poseidon.0.0 * mc6.poseidon.0.0 + new_state3.poseidon.0.0 * mc7.poseidon.0.0 + new_state4.poseidon.0.0 * mc8.poseidon.0.0 + new_state5.poseidon.0.0 * mc9.poseidon.0.0 + new_state6.poseidon.0.0 * mc10.poseidon.0.0 + new_state7.poseidon.0.0 * mc11.poseidon.0.0
    field state9.poseidon.0.0 = new_state9.poseidon.0.0 * md9.poseidon.0.0 + new_state9.poseidon.0.0 * mc.poseidon.0.0 + new_state10.poseidon.0.0 * mc1.poseidon.0.0 + new_state11.poseidon.0.0 * mc2.poseidon.0.0 + new_state0.poseidon.0.0 * mc3.poseidon.0.0 + new_state1.poseidon.0.0 * mc4.poseidon.0.0 + new_state2.poseidon.0.0 * mc5.poseidon.0.0 + new_state3.poseidon.0.0 * mc6.poseidon.0.0 + new_state4.poseidon.0.0 * mc7.poseidon.0.0 + new_state5.poseidon.0.0 * mc8.poseidon.0.0 + new_state6.poseidon.0.0 * mc9.poseidon.0.0 + new_state7.poseidon.0.0 * mc10.poseidon.0.0 + new_state8.poseidon.0.0 * mc11.poseidon.0.0
    field state10.poseidon.0.0 = new_state10.poseidon.0.0 * md10.poseidon.0.0 + new_state10.poseidon.0.0 * mc.poseidon.0.0 + new_state11.poseidon.0.0 * mc1.poseidon.0.0 + new_state0.poseidon.0.0 * mc2.poseidon.0.0 + new_state1.poseidon.0.0 * mc3.poseidon.0.0 + new_state2.poseidon.0.0 * mc4.poseidon.0.0 + new_state3.poseidon.0.0 * mc5.poseidon.0.0 + new_state4.poseidon.0.0 * mc6.poseidon.0.0 + new_state5.poseidon.0.0 * mc7.poseidon.0.0 + new_state6.poseidon.0.0 * mc8.poseidon.0.0 + new_state7.poseidon.0.0 * mc9.poseidon.0.0 + new_state8.poseidon.0.0 * mc10.poseidon.0.0 + new_state9.poseidon.0.0 * mc11.poseidon.0.0
    field state11.poseidon.0.0 = new_state11.poseidon.0.0 * md11.poseidon.0.0 + new_state11.poseidon.0.0 * mc.poseidon.0.0 + new_state0.poseidon.0.0 * mc1.poseidon.0.0 + new_state1.poseidon.0.0 * mc2.poseidon.0.0 + new_state2.poseidon.0.0 * mc3.poseidon.0.0 + new_state3.poseidon.0.0 * mc4.poseidon.0.0 + new_state4.poseidon.0.0 * mc5.poseidon.0.0 + new_state5.poseidon.0.0 * mc6.poseidon.0.0 + new_state6.poseidon.0.0 * mc7.poseidon.0.0 + new_state7.poseidon.0.0 * mc8.poseidon.0.0 + new_state8.poseidon.0.0 * mc9.poseidon.0.0 + new_state9.poseidon.0.0 * mc10.poseidon.0.0 + new_state10.poseidon.0.0 * mc11.poseidon.0.0
    field[12 <U32>] array^0.poseidon.0.0
    field init^0^0.poseidon.0.0 = state0.poseidon.0.0
    field init^0^1.poseidon.0.0 = state1.poseidon.0.0
    field init^0^2.poseidon.0.0 = state2.poseidon.0.0
    field init^0^3.poseidon.0.0 = state3.poseidon.0.0
    field init^0^4.poseidon.0.0 = state4.poseidon.0.0
    field init^0^5.poseidon.0.0 = state5.poseidon.0.0
    field init^0^6.poseidon.0.0 = state6.poseidon.0.0
    field init^0^7.poseidon.0.0 = state7.poseidon.0.0
    field init^0^8.poseidon.0.0 = state8.poseidon.0.0
    field init^0^9.poseidon.0.0 = state9.poseidon.0.0
    field init^0^10.poseidon.0.0 = state10.poseidon.0.0
    field init^0^11.poseidon.0.0 = state11.poseidon.0.0
    array^0.poseidon.0.0[0 <U32>] = init^0^0.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[1 <U32>] = init^0^1.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[2 <U32>] = init^0^2.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[3 <U32>] = init^0^3.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[4 <U32>] = init^0^4.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[5 <U32>] = init^0^5.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[6 <U32>] = init^0^6.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[7 <U32>] = init^0^7.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[8 <U32>] = init^0^8.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[9 <U32>] = init^0^9.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[10 <U32>] = init^0^10.poseidon.0.0 <field>, init
    array^0.poseidon.0.0[11 <U32>] = init^0^11.poseidon.0.0 <field>, init
    field %RET.poseidon = array^0.poseidon.0.0
Transition: -> rp@.poseidon

Block 110:
Func: poseidon, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.poseidon

Block 111:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[12 <U32>] array^0.compress.0.0
    field init^0^0.compress.0.0 = 0 <Field>
    u32 index@.compress.0.0 = 0 <U32>
Transition: 
    index@.compress.0.0 != 12 <U32> ? -> 112 : -> 113

Block 112:
Func: compress, Scope: 1
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.compress.0.0[index@.compress.0.0] = init^0^0.compress.0.0 <field>, init
    index@.compress.0.0 = index@.compress.0.0 + 1 <U32>
Transition: 
    index@.compress.0.0 != 12 <U32> ? -> 112 : -> 113

Block 113:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^state.compress.0.0 = array^0.compress.0.0
    field perm^state.compress.0.0 = struct^0^state.compress.0.0
Transition: -> 114

Block 114:
Func: compress, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.compress.0.0 = 0 <U32>
Transition: 
    i.compress.0.0 != 4 <U32> ? -> 115 : -> 118

Block 115:
Func: compress, Scope: 2
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 116

Block 116:
Func: compress, Scope: 3
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.compress.0.0 = left^elements.compress.0.0[i.compress.0.0]
    perm^state.compress.0.0[i.compress.0.0] = load^0.compress.0.0 <field>
    field load^0.compress.0.0 = right^elements.compress.0.0[i.compress.0.0]
    perm^state.compress.0.0[i.compress.0.0 + 4 <U32>] = load^0.compress.0.0 <field>
Transition: -> 117

Block 117:
Func: compress, Scope: 2
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.compress.0.0 = i.compress.0.0 + 1 <U32>
Transition: 
    i.compress.0.0 != 4 <U32> ? -> 115 : -> 118

Block 118:
Func: compress, Scope: 1
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 119

Block 119:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.permute.0.0 = perm^state.compress.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.compress.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.compress.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.compress.0.0
    u32 num_fanin.permute.0.0 = num_fanin.compress.0.0
    field rp@.permute = 120 <Field>
Transition: -> 645

Block 120:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.compress.0.0 = %RET^state.permute
    field perm^state.compress.0.0 = ret^0^state.compress.0.0
    field self^state.squeeze.0.0 = perm^state.compress.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.squeeze.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.compress.0.0
    u32 SEL_DEGREE.squeeze.0.0 = SEL_DEGREE.compress.0.0
    u32 log2_num_fanin.squeeze.0.0 = log2_num_fanin.compress.0.0
    u32 num_fanin.squeeze.0.0 = num_fanin.compress.0.0
    field rp@.squeeze = 121 <Field>
Transition: -> 648

Block 121:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.compress.0.1 = %RET.squeeze
    field struct^0^elements.compress.0.0 = ret^0.compress.0.1
    field %RET^elements.compress = struct^0^elements.compress.0.0
Transition: -> rp@.compress

Block 122:
Func: compress, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.compress

Block 123:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[12 <U32>] array^0.hash_n_to_m_no_pad.0.0
    field init^0^0.hash_n_to_m_no_pad.0.0 = 0 <Field>
    u32 index@.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: 
    index@.hash_n_to_m_no_pad.0.0 != 12 <U32> ? -> 124 : -> 125

Block 124:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.hash_n_to_m_no_pad.0.0[index@.hash_n_to_m_no_pad.0.0] = init^0^0.hash_n_to_m_no_pad.0.0 <field>, init
    index@.hash_n_to_m_no_pad.0.0 = index@.hash_n_to_m_no_pad.0.0 + 1 <U32>
Transition: 
    index@.hash_n_to_m_no_pad.0.0 != 12 <U32> ? -> 124 : -> 125

Block 125:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^state.hash_n_to_m_no_pad.0.0 = array^0.hash_n_to_m_no_pad.0.0
    field perm^state.hash_n_to_m_no_pad.0.0 = struct^0^state.hash_n_to_m_no_pad.0.0
    u32 j.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: -> 126

Block 126:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: 
    i.hash_n_to_m_no_pad.0.0 != num_inputs.hash_n_to_m_no_pad.0.0 ? -> 127 : -> 134

Block 127:
Func: hash_n_to_m_no_pad, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 128

Block 128:
Func: hash_n_to_m_no_pad, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.hash_n_to_m_no_pad.0.0 = inputs.hash_n_to_m_no_pad.0.0[i.hash_n_to_m_no_pad.0.0]
    perm^state.hash_n_to_m_no_pad.0.0[j.hash_n_to_m_no_pad.0.0] = load^0.hash_n_to_m_no_pad.0.0 <field>
    u32 j.hash_n_to_m_no_pad.0.0 = j.hash_n_to_m_no_pad.0.0 + 1 <U32>
Transition: 
    j.hash_n_to_m_no_pad.0.0 == 8 <U32> || i.hash_n_to_m_no_pad.0.0 == num_inputs.hash_n_to_m_no_pad.0.0 - 1 <U32> ? -> 129 : -> 131

Block 129:
Func: hash_n_to_m_no_pad, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.permute.0.0 = perm^state.hash_n_to_m_no_pad.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.hash_n_to_m_no_pad.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.hash_n_to_m_no_pad.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.hash_n_to_m_no_pad.0.0
    u32 num_fanin.permute.0.0 = num_fanin.hash_n_to_m_no_pad.0.0
    field rp@.permute = 130 <Field>
Transition: -> 650

Block 130:
Func: hash_n_to_m_no_pad, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.hash_n_to_m_no_pad.0.0 = %RET^state.permute
    field perm^state.hash_n_to_m_no_pad.0.0 = ret^0^state.hash_n_to_m_no_pad.0.0
    u32 j.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: -> 132

Block 131:
Func: hash_n_to_m_no_pad, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 132

Block 132:
Func: hash_n_to_m_no_pad, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 133

Block 133:
Func: hash_n_to_m_no_pad, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.hash_n_to_m_no_pad.0.0 = i.hash_n_to_m_no_pad.0.0 + 1 <U32>
Transition: 
    i.hash_n_to_m_no_pad.0.0 != num_inputs.hash_n_to_m_no_pad.0.0 ? -> 127 : -> 134

Block 134:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 135

Block 135:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[num_outputs.hash_n_to_m_no_pad.0.0] array^0.hash_n_to_m_no_pad.0.1
    field init^0^0.hash_n_to_m_no_pad.0.0 = 0 <Field>
    u32 index@.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: 
    index@.hash_n_to_m_no_pad.0.0 != num_outputs.hash_n_to_m_no_pad.0.0 ? -> 136 : -> 137

Block 136:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.hash_n_to_m_no_pad.0.1[index@.hash_n_to_m_no_pad.0.0] = init^0^0.hash_n_to_m_no_pad.0.0 <field>, init
    index@.hash_n_to_m_no_pad.0.0 = index@.hash_n_to_m_no_pad.0.0 + 1 <U32>
Transition: 
    index@.hash_n_to_m_no_pad.0.0 != num_outputs.hash_n_to_m_no_pad.0.0 ? -> 136 : -> 137

Block 137:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field outputs.hash_n_to_m_no_pad.0.0 = array^0.hash_n_to_m_no_pad.0.1
    u32 output_count.hash_n_to_m_no_pad.0.0 = 0 <U32>
Transition: 
    true ? -> 138 : -> 151

Block 138:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.squeeze.0.0 = perm^state.hash_n_to_m_no_pad.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.squeeze.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.hash_n_to_m_no_pad.0.0
    u32 SEL_DEGREE.squeeze.0.0 = SEL_DEGREE.hash_n_to_m_no_pad.0.0
    u32 log2_num_fanin.squeeze.0.0 = log2_num_fanin.hash_n_to_m_no_pad.0.0
    u32 num_fanin.squeeze.0.0 = num_fanin.hash_n_to_m_no_pad.0.0
    field rp@.squeeze = 139 <Field>
Transition: -> 653

Block 139:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.hash_n_to_m_no_pad.0.1 = %RET.squeeze
    field ps.hash_n_to_m_no_pad.0.0 = ret^0.hash_n_to_m_no_pad.0.1
Transition: -> 140

Block 140:
Func: hash_n_to_m_no_pad, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.hash_n_to_m_no_pad.0.1 = 0 <U32>
Transition: 
    i.hash_n_to_m_no_pad.0.1 != 8 <U32> ? -> 141 : -> 148

Block 141:
Func: hash_n_to_m_no_pad, Scope: 3
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 142

Block 142:
Func: hash_n_to_m_no_pad, Scope: 4
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.hash_n_to_m_no_pad.0.1 = ps.hash_n_to_m_no_pad.0.0[i.hash_n_to_m_no_pad.0.1]
    outputs.hash_n_to_m_no_pad.0.0[output_count.hash_n_to_m_no_pad.0.0] = load^0.hash_n_to_m_no_pad.0.1 <field>
    u32 output_count.hash_n_to_m_no_pad.0.0 = output_count.hash_n_to_m_no_pad.0.0 + 1 <U32>
Transition: 
    output_count.hash_n_to_m_no_pad.0.0 == num_outputs.hash_n_to_m_no_pad.0.0 ? -> 143 : -> 145

Block 143:
Func: hash_n_to_m_no_pad, Scope: 5
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.hash_n_to_m_no_pad = outputs.hash_n_to_m_no_pad.0.0
Transition: -> rp@.hash_n_to_m_no_pad

Block 144:
Func: hash_n_to_m_no_pad, Scope: 5
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 146

Block 145:
Func: hash_n_to_m_no_pad, Scope: 5
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 146

Block 146:
Func: hash_n_to_m_no_pad, Scope: 4
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 147

Block 147:
Func: hash_n_to_m_no_pad, Scope: 3
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.hash_n_to_m_no_pad.0.1 = i.hash_n_to_m_no_pad.0.1 + 1 <U32>
Transition: 
    i.hash_n_to_m_no_pad.0.1 != 8 <U32> ? -> 141 : -> 148

Block 148:
Func: hash_n_to_m_no_pad, Scope: 2
Exec Bound: 8, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 149

Block 149:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.permute.0.0 = perm^state.hash_n_to_m_no_pad.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.hash_n_to_m_no_pad.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.hash_n_to_m_no_pad.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.hash_n_to_m_no_pad.0.0
    u32 num_fanin.permute.0.0 = num_fanin.hash_n_to_m_no_pad.0.0
    field rp@.permute = 150 <Field>
Transition: -> 655

Block 150:
Func: hash_n_to_m_no_pad, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.hash_n_to_m_no_pad.0.1 = %RET^state.permute
    field perm^state.hash_n_to_m_no_pad.0.0 = ret^0^state.hash_n_to_m_no_pad.0.1
Transition: 
    true ? -> 138 : -> 151

Block 151:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[0 <U32>] array^0.hash_n_to_m_no_pad.0.1
    field %RET.hash_n_to_m_no_pad = array^0.hash_n_to_m_no_pad.0.1
Transition: -> rp@.hash_n_to_m_no_pad

Block 152:
Func: hash_n_to_m_no_pad, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.hash_n_to_m_no_pad

Block 153:
Func: hash_or_noop, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: 
    inputs_len.hash_or_noop.0.0 <= 4 <U32> ? -> 154 : -> 164

Block 154:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[4 <U32>] array^0.hash_or_noop.0.0
    field init^0^0.hash_or_noop.0.0 = 0 <Field>
    u32 index@.hash_or_noop.0.0 = 0 <U32>
Transition: 
    index@.hash_or_noop.0.0 != 4 <U32> ? -> 155 : -> 156

Block 155:
Func: hash_or_noop, Scope: 2
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.hash_or_noop.0.0[index@.hash_or_noop.0.0] = init^0^0.hash_or_noop.0.0 <field>, init
    index@.hash_or_noop.0.0 = index@.hash_or_noop.0.0 + 1 <U32>
Transition: 
    index@.hash_or_noop.0.0 != 4 <U32> ? -> 155 : -> 156

Block 156:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field digest.hash_or_noop.0.0 = array^0.hash_or_noop.0.0
Transition: -> 157

Block 157:
Func: hash_or_noop, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.hash_or_noop.0.0 = 0 <U32>
Transition: 
    i.hash_or_noop.0.0 != inputs_len.hash_or_noop.0.0 ? -> 158 : -> 161

Block 158:
Func: hash_or_noop, Scope: 3
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 159

Block 159:
Func: hash_or_noop, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.hash_or_noop.0.0 = inputs.hash_or_noop.0.0[i.hash_or_noop.0.0]
    digest.hash_or_noop.0.0[i.hash_or_noop.0.0] = load^0.hash_or_noop.0.0 <field>
Transition: -> 160

Block 160:
Func: hash_or_noop, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.hash_or_noop.0.0 = i.hash_or_noop.0.0 + 1 <U32>
Transition: 
    i.hash_or_noop.0.0 != inputs_len.hash_or_noop.0.0 ? -> 158 : -> 161

Block 161:
Func: hash_or_noop, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 162

Block 162:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^elements.hash_or_noop.0.0 = digest.hash_or_noop.0.0
    field %RET^elements.hash_or_noop = struct^0^elements.hash_or_noop.0.0
Transition: -> rp@.hash_or_noop

Block 163:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 167

Block 164:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 num_inputs.hash_n_to_m_no_pad.0.0 = inputs_len.hash_or_noop.0.0
    field inputs.hash_n_to_m_no_pad.0.0 = inputs.hash_or_noop.0.0
    u32 num_outputs.hash_n_to_m_no_pad.0.0 = 4 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.hash_n_to_m_no_pad.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.hash_or_noop.0.0
    u32 SEL_DEGREE.hash_n_to_m_no_pad.0.0 = SEL_DEGREE.hash_or_noop.0.0
    u32 log2_num_fanin.hash_n_to_m_no_pad.0.0 = log2_num_fanin.hash_or_noop.0.0
    u32 num_fanin.hash_n_to_m_no_pad.0.0 = num_fanin.hash_or_noop.0.0
    field rp@.hash_n_to_m_no_pad = 165 <Field>
Transition: -> 123

Block 165:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.hash_or_noop.0.0 = %RET.hash_n_to_m_no_pad
    field struct^0^elements.hash_or_noop.0.1 = ret^0.hash_or_noop.0.0
    field %RET^elements.hash_or_noop = struct^0^elements.hash_or_noop.0.1
Transition: -> rp@.hash_or_noop

Block 166:
Func: hash_or_noop, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 167

Block 167:
Func: hash_or_noop, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[4 <U32>] array^0.hash_or_noop.0.1
    field init^0^0.hash_or_noop.0.1 = 0 <Field>
    u32 index@.hash_or_noop.0.1 = 0 <U32>
Transition: 
    index@.hash_or_noop.0.1 != 4 <U32> ? -> 168 : -> 169

Block 168:
Func: hash_or_noop, Scope: 1
Exec Bound: 4, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.hash_or_noop.0.1[index@.hash_or_noop.0.1] = init^0^0.hash_or_noop.0.1 <field>, init
    index@.hash_or_noop.0.1 = index@.hash_or_noop.0.1 + 1 <U32>
Transition: 
    index@.hash_or_noop.0.1 != 4 <U32> ? -> 168 : -> 169

Block 169:
Func: hash_or_noop, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^elements.hash_or_noop.0.2 = array^0.hash_or_noop.0.1
    field %RET^elements.hash_or_noop = struct^0^elements.hash_or_noop.0.2
Transition: -> rp@.hash_or_noop

Block 170:
Func: hash_or_noop, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.hash_or_noop

Block 171:
Func: two_to_one, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field left^elements.compress.0.0 = left^elements.two_to_one.0.0
    field right^elements.compress.0.0 = right^elements.two_to_one.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.compress.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.two_to_one.0.0
    u32 SEL_DEGREE.compress.0.0 = SEL_DEGREE.two_to_one.0.0
    u32 log2_num_fanin.compress.0.0 = log2_num_fanin.two_to_one.0.0
    u32 num_fanin.compress.0.0 = num_fanin.two_to_one.0.0
    field rp@.compress = 172 <Field>
Transition: -> 111

Block 172:
Func: two_to_one, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^elements.two_to_one.0.0 = %RET^elements.compress
    field %RET^elements.two_to_one = ret^0^elements.two_to_one.0.0
Transition: -> rp@.two_to_one

Block 173:
Func: two_to_one, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.two_to_one

Block 174:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[12 <U32>] array^0.new_poseidon_permutation.0.0
    field init^0^0.new_poseidon_permutation.0.0 = 0 <Field>
    u32 index@.new_poseidon_permutation.0.0 = 0 <U32>
Transition: 
    index@.new_poseidon_permutation.0.0 != 12 <U32> ? -> 175 : -> 176

Block 175:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.new_poseidon_permutation.0.0[index@.new_poseidon_permutation.0.0] = init^0^0.new_poseidon_permutation.0.0 <field>, init
    index@.new_poseidon_permutation.0.0 = index@.new_poseidon_permutation.0.0 + 1 <U32>
Transition: 
    index@.new_poseidon_permutation.0.0 != 12 <U32> ? -> 175 : -> 176

Block 176:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field state.new_poseidon_permutation.0.0 = array^0.new_poseidon_permutation.0.0
Transition: -> 177

Block 177:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.new_poseidon_permutation.0.0 = 0 <U32>
Transition: 
    i.new_poseidon_permutation.0.0 != elts_len.new_poseidon_permutation.0.0 ? -> 178 : -> 181

Block 178:
Func: new_poseidon_permutation, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 179

Block 179:
Func: new_poseidon_permutation, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.new_poseidon_permutation.0.0 = elts.new_poseidon_permutation.0.0[i.new_poseidon_permutation.0.0]
    state.new_poseidon_permutation.0.0[i.new_poseidon_permutation.0.0] = load^0.new_poseidon_permutation.0.0 <field>
Transition: -> 180

Block 180:
Func: new_poseidon_permutation, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.new_poseidon_permutation.0.0 = i.new_poseidon_permutation.0.0 + 1 <U32>
Transition: 
    i.new_poseidon_permutation.0.0 != elts_len.new_poseidon_permutation.0.0 ? -> 178 : -> 181

Block 181:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 182

Block 182:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^state.new_poseidon_permutation.0.0 = state.new_poseidon_permutation.0.0
    field %RET^state.new_poseidon_permutation = struct^0^state.new_poseidon_permutation.0.0
Transition: -> rp@.new_poseidon_permutation

Block 183:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.new_poseidon_permutation

Block 184:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 185 <Field>
Transition: -> 109

Block 185:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 186:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 187:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 188

Block 188:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 189 : -> 192

Block 189:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 190

Block 190:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 191

Block 191:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 189 : -> 192

Block 192:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 193

Block 193:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 194:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 195:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.squeeze = self^state.squeeze.0.0
Transition: -> rp@.squeeze

Block 196:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.squeeze

Block 197:
Func: check_and_generate_subclaim, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    assert self^finished.check_and_generate_subclaim.0.0
    ExtField { b0: field, b1: field }[2 <U32> * self^num_vars.check_and_generate_subclaim.0.0 + 1 <U32>] expected_vec.check_and_generate_subclaim.0.0
    expected_vec.check_and_generate_subclaim.0.0[2 <Field> * 0 <Field>] = asserted_sum^b0.check_and_generate_subclaim.0.0 <field>
    expected_vec.check_and_generate_subclaim.0.0[2 <Field> * 0 <Field> + 1 <Field>] = asserted_sum^b1.check_and_generate_subclaim.0.0 <field>
Transition: -> 198

Block 198:
Func: check_and_generate_subclaim, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.check_and_generate_subclaim.0.0 = 0 <U32>
Transition: 
    i.check_and_generate_subclaim.0.0 != self^num_vars.check_and_generate_subclaim.0.0 ? -> 199 : -> 205

Block 199:
Func: check_and_generate_subclaim, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 200

Block 200:
Func: check_and_generate_subclaim, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.check_and_generate_subclaim.0.0 = self^polynomials_received.check_and_generate_subclaim.0.0[i.check_and_generate_subclaim.0.0]
    field evaluations.check_and_generate_subclaim.0.0 = load^0.check_and_generate_subclaim.0.0
    field load^0^elements^b0.check_and_generate_subclaim.0.0 = self^challenges.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0]
    field load^0^elements^b1.check_and_generate_subclaim.0.0 = self^challenges.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0 + 1 <U32>]
    field challenge^elements^b0.check_and_generate_subclaim.0.0 = load^0^elements^b0.check_and_generate_subclaim.0.0
    field challenge^elements^b1.check_and_generate_subclaim.0.0 = load^0^elements^b1.check_and_generate_subclaim.0.0
    u32 p_i_len.interpolate_uni_poly.0.0 = self^max_degree.check_and_generate_subclaim.0.0 + 1 <U32>
    field p_i.interpolate_uni_poly.0.0 = evaluations.check_and_generate_subclaim.0.0
    field eval_at^b0.interpolate_uni_poly.0.0 = challenge^elements^b0.check_and_generate_subclaim.0.0
    field eval_at^b1.interpolate_uni_poly.0.0 = challenge^elements^b1.check_and_generate_subclaim.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.check_and_generate_subclaim.0.0
    u32 SEL_DEGREE.interpolate_uni_poly.0.0 = SEL_DEGREE.check_and_generate_subclaim.0.0
    u32 log2_num_fanin.interpolate_uni_poly.0.0 = log2_num_fanin.check_and_generate_subclaim.0.0
    u32 num_fanin.interpolate_uni_poly.0.0 = num_fanin.check_and_generate_subclaim.0.0
    field rp@.interpolate_uni_poly = 201 <Field>
Transition: -> 208

Block 201:
Func: check_and_generate_subclaim, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 8
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.check_and_generate_subclaim.0.0 = %RET^b0.interpolate_uni_poly
    field ret^0^b1.check_and_generate_subclaim.0.0 = %RET^b1.interpolate_uni_poly
    expected_vec.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0 + 1 <U32>] = ret^0^b0.check_and_generate_subclaim.0.0 <field>
    expected_vec.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0 + 1 <U32> + 1 <U32>] = ret^0^b1.check_and_generate_subclaim.0.0 <field>
    field load^0^b0.check_and_generate_subclaim.0.0 = expected_vec.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0]
    field load^0^b1.check_and_generate_subclaim.0.0 = expected_vec.check_and_generate_subclaim.0.0[2 <U32> * i.check_and_generate_subclaim.0.0 + 1 <U32>]
    field expected^b0.check_and_generate_subclaim.0.0 = load^0^b0.check_and_generate_subclaim.0.0
    field expected^b1.check_and_generate_subclaim.0.0 = load^0^b1.check_and_generate_subclaim.0.0
    field load^0^b0.check_and_generate_subclaim.0.0 = evaluations.check_and_generate_subclaim.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.check_and_generate_subclaim.0.0 = evaluations.check_and_generate_subclaim.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field load^1^b0.check_and_generate_subclaim.0.0 = evaluations.check_and_generate_subclaim.0.0[2 <Field> * 1 <Field>]
    field load^1^b1.check_and_generate_subclaim.0.0 = evaluations.check_and_generate_subclaim.0.0[2 <Field> * 1 <Field> + 1 <Field>]
    field e0^b0.ext_add.0.0 = load^0^b0.check_and_generate_subclaim.0.0
    field e0^b1.ext_add.0.0 = load^0^b1.check_and_generate_subclaim.0.0
    field e1^b0.ext_add.0.0 = load^1^b0.check_and_generate_subclaim.0.0
    field e1^b1.ext_add.0.0 = load^1^b1.check_and_generate_subclaim.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.check_and_generate_subclaim.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.check_and_generate_subclaim.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.check_and_generate_subclaim.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.check_and_generate_subclaim.0.0
    field rp@.ext_add = 202 <Field>
Transition: -> 658

Block 202:
Func: check_and_generate_subclaim, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.check_and_generate_subclaim.0.0 = %RET^b0.ext_add
    field ret^0^b1.check_and_generate_subclaim.0.0 = %RET^b1.ext_add
    field e0^b0.ext_eq.0.0 = ret^0^b0.check_and_generate_subclaim.0.0
    field e0^b1.ext_eq.0.0 = ret^0^b1.check_and_generate_subclaim.0.0
    field e1^b0.ext_eq.0.0 = expected^b0.check_and_generate_subclaim.0.0
    field e1^b1.ext_eq.0.0 = expected^b1.check_and_generate_subclaim.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_eq.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.check_and_generate_subclaim.0.0
    u32 SEL_DEGREE.ext_eq.0.0 = SEL_DEGREE.check_and_generate_subclaim.0.0
    u32 log2_num_fanin.ext_eq.0.0 = log2_num_fanin.check_and_generate_subclaim.0.0
    u32 num_fanin.ext_eq.0.0 = num_fanin.check_and_generate_subclaim.0.0
    field rp@.ext_eq = 203 <Field>
Transition: -> 660

Block 203:
Func: check_and_generate_subclaim, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1.check_and_generate_subclaim.0.0 = %RET.ext_eq
    assert ret^1.check_and_generate_subclaim.0.0 == 1 <Field>
Transition: -> 204

Block 204:
Func: check_and_generate_subclaim, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.check_and_generate_subclaim.0.0 = i.check_and_generate_subclaim.0.0 + 1 <U32>
Transition: 
    i.check_and_generate_subclaim.0.0 != self^num_vars.check_and_generate_subclaim.0.0 ? -> 199 : -> 205

Block 205:
Func: check_and_generate_subclaim, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 206

Block 206:
Func: check_and_generate_subclaim, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.check_and_generate_subclaim.0.1 = expected_vec.check_and_generate_subclaim.0.0[2 <U32> * self^num_vars.check_and_generate_subclaim.0.0]
    field load^0^b1.check_and_generate_subclaim.0.1 = expected_vec.check_and_generate_subclaim.0.0[2 <U32> * self^num_vars.check_and_generate_subclaim.0.0 + 1 <U32>]
    field struct^0^point.check_and_generate_subclaim.0.0 = self^challenges.check_and_generate_subclaim.0.0
    field struct^0^expected_evaluation^b0.check_and_generate_subclaim.0.0 = load^0^b0.check_and_generate_subclaim.0.1
    field struct^0^expected_evaluation^b1.check_and_generate_subclaim.0.0 = load^0^b1.check_and_generate_subclaim.0.1
    field %RET^expected_evaluation^b0.check_and_generate_subclaim = struct^0^expected_evaluation^b0.check_and_generate_subclaim.0.0
    field %RET^expected_evaluation^b1.check_and_generate_subclaim = struct^0^expected_evaluation^b1.check_and_generate_subclaim.0.0
    field %RET^point.check_and_generate_subclaim = struct^0^point.check_and_generate_subclaim.0.0
Transition: -> rp@.check_and_generate_subclaim

Block 207:
Func: check_and_generate_subclaim, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.check_and_generate_subclaim

Block 208:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 len.interpolate_uni_poly.0.0 = p_i_len.interpolate_uni_poly.0.0
    ExtField { b0: field, b1: field }[2 <U32> * len.interpolate_uni_poly.0.0] evals.interpolate_uni_poly.0.0
    field prod^b0.interpolate_uni_poly.0.0 = eval_at^b0.interpolate_uni_poly.0.0
    field prod^b1.interpolate_uni_poly.0.0 = eval_at^b1.interpolate_uni_poly.0.0
    evals.interpolate_uni_poly.0.0[2 <Field> * 0 <Field>] = eval_at^b0.interpolate_uni_poly.0.0 <field>
    evals.interpolate_uni_poly.0.0[2 <Field> * 0 <Field> + 1 <Field>] = eval_at^b1.interpolate_uni_poly.0.0 <field>
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 209 <Field>
Transition: -> 662

Block 209:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.0.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.0.0 = %RET^b1.to_ext
    field res^b0.interpolate_uni_poly.0.0 = ret^0^b0.interpolate_uni_poly.0.0
    field res^b1.interpolate_uni_poly.0.0 = ret^0^b1.interpolate_uni_poly.0.0
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 210 <Field>
Transition: -> 664

Block 210:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.0.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.0.0 = %RET^b1.to_ext
    field denom_up^b0.interpolate_uni_poly.0.0 = ret^0^b0.interpolate_uni_poly.0.0
    field denom_up^b1.interpolate_uni_poly.0.0 = ret^0^b1.interpolate_uni_poly.0.0
Transition: -> 211

Block 211:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 e.interpolate_uni_poly.0.0 = 1 <U32>
Transition: 
    e.interpolate_uni_poly.0.0 != len.interpolate_uni_poly.0.0 ? -> 212 : -> 220

Block 212:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 213

Block 213:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = e.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 214 <Field>
Transition: -> 666

Block 214:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.1.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.1.0 = %RET^b1.to_ext
    field e0^b0.ext_sub.0.0 = eval_at^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_sub.0.0 = eval_at^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_sub.0.0 = ret^0^b0.interpolate_uni_poly.1.0
    field e1^b1.ext_sub.0.0 = ret^0^b1.interpolate_uni_poly.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_sub = 215 <Field>
Transition: -> 668

Block 215:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_sub
    field ret^1^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_sub
    field tmp^b0.interpolate_uni_poly.0.0 = ret^1^b0.interpolate_uni_poly.0.0
    field tmp^b1.interpolate_uni_poly.0.0 = ret^1^b1.interpolate_uni_poly.0.0
    evals.interpolate_uni_poly.0.0[2 <U32> * e.interpolate_uni_poly.0.0] = tmp^b0.interpolate_uni_poly.0.0 <field>
    evals.interpolate_uni_poly.0.0[2 <U32> * e.interpolate_uni_poly.0.0 + 1 <U32>] = tmp^b1.interpolate_uni_poly.0.0 <field>
    field e0^b0.ext_mul.0.0 = prod^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = prod^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = tmp^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_mul.0.0 = tmp^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 216 <Field>
Transition: -> 670

Block 216:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.1.0 = %RET^b0.ext_mul
    field ret^0^b1.interpolate_uni_poly.1.0 = %RET^b1.ext_mul
    field prod^b0.interpolate_uni_poly.0.0 = ret^0^b0.interpolate_uni_poly.1.0
    field prod^b1.interpolate_uni_poly.0.0 = ret^0^b1.interpolate_uni_poly.1.0
    u32 i.to_ext.0.0 = e.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 217 <Field>
Transition: -> 672

Block 217:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.1.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.1.0 = %RET^b1.to_ext
    field e0^b0.ext_mul.0.0 = denom_up^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = denom_up^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = ret^0^b0.interpolate_uni_poly.1.0
    field e1^b1.ext_mul.0.0 = ret^0^b1.interpolate_uni_poly.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 218 <Field>
Transition: -> 674

Block 218:
Func: interpolate_uni_poly, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_mul
    field ret^1^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_mul
    field denom_up^b0.interpolate_uni_poly.0.0 = ret^1^b0.interpolate_uni_poly.0.0
    field denom_up^b1.interpolate_uni_poly.0.0 = ret^1^b1.interpolate_uni_poly.0.0
Transition: -> 219

Block 219:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    e.interpolate_uni_poly.0.0 = e.interpolate_uni_poly.0.0 + 1 <U32>
Transition: 
    e.interpolate_uni_poly.0.0 != len.interpolate_uni_poly.0.0 ? -> 212 : -> 220

Block 220:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 221

Block 221:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 222 <Field>
Transition: -> 676

Block 222:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.0.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.0.0 = %RET^b1.to_ext
    field denom_down^b0.interpolate_uni_poly.0.0 = ret^0^b0.interpolate_uni_poly.0.0
    field denom_down^b1.interpolate_uni_poly.0.0 = ret^0^b1.interpolate_uni_poly.0.0
    u32 it.interpolate_uni_poly.0.0 = len.interpolate_uni_poly.0.0
Transition: 
    it.interpolate_uni_poly.0.0 > 0 <U32> ? -> 223 : -> 238

Block 223:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.interpolate_uni_poly.0.0 = it.interpolate_uni_poly.0.0 - 1 <U32>
    field load^0^b0.interpolate_uni_poly.0.0 = p_i.interpolate_uni_poly.0.0[2 <U32> * i.interpolate_uni_poly.0.0]
    field load^0^b1.interpolate_uni_poly.0.0 = p_i.interpolate_uni_poly.0.0[2 <U32> * i.interpolate_uni_poly.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^0^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = load^0^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = prod^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_mul.0.0 = prod^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 224 <Field>
Transition: -> 678

Block 224:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.1.1 = %RET^b0.ext_mul
    field ret^0^b1.interpolate_uni_poly.1.1 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = ret^0^b0.interpolate_uni_poly.1.1
    field e0^b1.ext_mul.0.0 = ret^0^b1.interpolate_uni_poly.1.1
    field e1^b0.ext_mul.0.0 = denom_down^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_mul.0.0 = denom_down^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 225 <Field>
Transition: -> 680

Block 225:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.interpolate_uni_poly.0.1 = %RET^b0.ext_mul
    field ret^1^b1.interpolate_uni_poly.0.1 = %RET^b1.ext_mul
    field load^1^b0.interpolate_uni_poly.0.0 = evals.interpolate_uni_poly.0.0[2 <U32> * i.interpolate_uni_poly.0.0]
    field load^1^b1.interpolate_uni_poly.0.0 = evals.interpolate_uni_poly.0.0[2 <U32> * i.interpolate_uni_poly.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = denom_up^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = denom_up^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = load^1^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_mul.0.0 = load^1^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 226 <Field>
Transition: -> 682

Block 226:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_mul
    field ret^2^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_mul
    field e^b0.ext_invert.0.0 = ret^2^b0.interpolate_uni_poly.0.0
    field e^b1.ext_invert.0.0 = ret^2^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_invert.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_invert.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_invert.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_invert = 227 <Field>
Transition: -> 684

Block 227:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_invert
    field ret^3^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_invert
    field e0^b0.ext_mul.0.0 = ret^1^b0.interpolate_uni_poly.0.1
    field e0^b1.ext_mul.0.0 = ret^1^b1.interpolate_uni_poly.0.1
    field e1^b0.ext_mul.0.0 = ret^3^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_mul.0.0 = ret^3^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 228 <Field>
Transition: -> 695

Block 228:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_mul
    field ret^4^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = res^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_add.0.0 = res^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_add.0.0 = ret^4^b0.interpolate_uni_poly.0.0
    field e1^b1.ext_add.0.0 = ret^4^b1.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_add = 229 <Field>
Transition: -> 697

Block 229:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.interpolate_uni_poly.0.0 = %RET^b0.ext_add
    field ret^5^b1.interpolate_uni_poly.0.0 = %RET^b1.ext_add
    field res^b0.interpolate_uni_poly.0.0 = ret^5^b0.interpolate_uni_poly.0.0
    field res^b1.interpolate_uni_poly.0.0 = ret^5^b1.interpolate_uni_poly.0.0
Transition: 
    i.interpolate_uni_poly.0.0 != 0 <U32> ? -> 230 : -> 236

Block 230:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = len.interpolate_uni_poly.0.0 - i.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 231 <Field>
Transition: -> 699

Block 231:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.2.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.2.0 = %RET^b1.to_ext
    field e0^b0.ext_mul.0.0 = denom_up^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = denom_up^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = ret^0^b0.interpolate_uni_poly.2.0
    field e1^b1.ext_mul.0.0 = ret^0^b1.interpolate_uni_poly.2.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 232 <Field>
Transition: -> 701

Block 232:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.interpolate_uni_poly.1.0 = %RET^b0.ext_mul
    field ret^1^b1.interpolate_uni_poly.1.0 = %RET^b1.ext_mul
    field e^b0.ext_neg.0.0 = ret^1^b0.interpolate_uni_poly.1.0
    field e^b1.ext_neg.0.0 = ret^1^b1.interpolate_uni_poly.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_neg.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_neg.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_neg.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_neg.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_neg = 233 <Field>
Transition: -> 703

Block 233:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.interpolate_uni_poly.1.0 = %RET^b0.ext_neg
    field ret^2^b1.interpolate_uni_poly.1.0 = %RET^b1.ext_neg
    field denom_up^b0.interpolate_uni_poly.0.0 = ret^2^b0.interpolate_uni_poly.1.0
    field denom_up^b1.interpolate_uni_poly.0.0 = ret^2^b1.interpolate_uni_poly.1.0
    u32 i.to_ext.0.0 = i.interpolate_uni_poly.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.to_ext = 234 <Field>
Transition: -> 705

Block 234:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.interpolate_uni_poly.2.0 = %RET^b0.to_ext
    field ret^0^b1.interpolate_uni_poly.2.0 = %RET^b1.to_ext
    field e0^b0.ext_mul.0.0 = denom_down^b0.interpolate_uni_poly.0.0
    field e0^b1.ext_mul.0.0 = denom_down^b1.interpolate_uni_poly.0.0
    field e1^b0.ext_mul.0.0 = ret^0^b0.interpolate_uni_poly.2.0
    field e1^b1.ext_mul.0.0 = ret^0^b1.interpolate_uni_poly.2.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.interpolate_uni_poly.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.interpolate_uni_poly.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.interpolate_uni_poly.0.0
    field rp@.ext_mul = 235 <Field>
Transition: -> 707

Block 235:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.interpolate_uni_poly.1.0 = %RET^b0.ext_mul
    field ret^1^b1.interpolate_uni_poly.1.0 = %RET^b1.ext_mul
    field denom_down^b0.interpolate_uni_poly.0.0 = ret^1^b0.interpolate_uni_poly.1.0
    field denom_down^b1.interpolate_uni_poly.0.0 = ret^1^b1.interpolate_uni_poly.1.0
Transition: -> 237

Block 236:
Func: interpolate_uni_poly, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 237

Block 237:
Func: interpolate_uni_poly, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 it.interpolate_uni_poly.0.0 = it.interpolate_uni_poly.0.0 - 1 <U32>
Transition: 
    it.interpolate_uni_poly.0.0 > 0 <U32> ? -> 223 : -> 238

Block 238:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^b0.interpolate_uni_poly = res^b0.interpolate_uni_poly.0.0
    field %RET^b1.interpolate_uni_poly = res^b1.interpolate_uni_poly.0.0
Transition: -> rp@.interpolate_uni_poly

Block 239:
Func: interpolate_uni_poly, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.interpolate_uni_poly

Block 240:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^0.test_interpolate.0.0
    field b0.from_bases.0.0 = 2649376749893690711 <Field>
    field b1.from_bases.0.0 = 17218516312374968899 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_interpolate.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_interpolate.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_interpolate.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_interpolate.0.0
    field rp@.from_bases = 241 <Field>
Transition: -> 709

Block 241:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.test_interpolate.0.0 = %RET^b0.from_bases
    field ret^0^b1.test_interpolate.0.0 = %RET^b1.from_bases
    field init^0^0^b0.test_interpolate.0.0 = ret^0^b0.test_interpolate.0.0
    field init^0^0^b1.test_interpolate.0.0 = ret^0^b1.test_interpolate.0.0
    field b0.from_bases.0.0 = 2831708821143067610 <Field>
    field b1.from_bases.0.0 = 14218239706904981658 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_interpolate.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_interpolate.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_interpolate.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_interpolate.0.0
    field rp@.from_bases = 242 <Field>
Transition: -> 711

Block 242:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.test_interpolate.0.0 = %RET^b0.from_bases
    field ret^1^b1.test_interpolate.0.0 = %RET^b1.from_bases
    field init^0^1^b0.test_interpolate.0.0 = ret^1^b0.test_interpolate.0.0
    field init^0^1^b1.test_interpolate.0.0 = ret^1^b1.test_interpolate.0.0
    field b0.from_bases.0.0 = 9757815734812382814 <Field>
    field b1.from_bases.0.0 = 12686601350460486396 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_interpolate.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_interpolate.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_interpolate.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_interpolate.0.0
    field rp@.from_bases = 243 <Field>
Transition: -> 713

Block 243:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.test_interpolate.0.0 = %RET^b0.from_bases
    field ret^2^b1.test_interpolate.0.0 = %RET^b1.from_bases
    field init^0^2^b0.test_interpolate.0.0 = ret^2^b0.test_interpolate.0.0
    field init^0^2^b1.test_interpolate.0.0 = ret^2^b1.test_interpolate.0.0
    array^0.test_interpolate.0.0[2 <U32> * 0 <U32>] = init^0^0^b0.test_interpolate.0.0 <field>, init
    array^0.test_interpolate.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^0^0^b1.test_interpolate.0.0 <field>, init
    array^0.test_interpolate.0.0[2 <U32> * 1 <U32>] = init^0^1^b0.test_interpolate.0.0 <field>, init
    array^0.test_interpolate.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^0^1^b1.test_interpolate.0.0 <field>, init
    array^0.test_interpolate.0.0[2 <U32> * 2 <U32>] = init^0^2^b0.test_interpolate.0.0 <field>, init
    array^0.test_interpolate.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^0^2^b1.test_interpolate.0.0 <field>, init
    field p_i.test_interpolate.0.0 = array^0.test_interpolate.0.0
    field b0.from_bases.0.0 = 11898179702182245198 <Field>
    field b1.from_bases.0.0 = 4100753405466582436 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_interpolate.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_interpolate.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_interpolate.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_interpolate.0.0
    field rp@.from_bases = 244 <Field>
Transition: -> 715

Block 244:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.test_interpolate.0.0 = %RET^b0.from_bases
    field ret^0^b1.test_interpolate.0.0 = %RET^b1.from_bases
    field eval_at^b0.test_interpolate.0.0 = ret^0^b0.test_interpolate.0.0
    field eval_at^b1.test_interpolate.0.0 = ret^0^b1.test_interpolate.0.0
    u32 p_i_len.interpolate_uni_poly.0.0 = 3 <U32>
    field p_i.interpolate_uni_poly.0.0 = p_i.test_interpolate.0.0
    field eval_at^b0.interpolate_uni_poly.0.0 = eval_at^b0.test_interpolate.0.0
    field eval_at^b1.interpolate_uni_poly.0.0 = eval_at^b1.test_interpolate.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.interpolate_uni_poly.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_interpolate.0.0
    u32 SEL_DEGREE.interpolate_uni_poly.0.0 = SEL_DEGREE.test_interpolate.0.0
    u32 log2_num_fanin.interpolate_uni_poly.0.0 = log2_num_fanin.test_interpolate.0.0
    u32 num_fanin.interpolate_uni_poly.0.0 = num_fanin.test_interpolate.0.0
    field rp@.interpolate_uni_poly = 245 <Field>
Transition: -> 208

Block 245:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.test_interpolate.0.0 = %RET^b0.interpolate_uni_poly
    field ret^0^b1.test_interpolate.0.0 = %RET^b1.interpolate_uni_poly
    field res^b0.test_interpolate.0.0 = ret^0^b0.test_interpolate.0.0
    field res^b1.test_interpolate.0.0 = ret^0^b1.test_interpolate.0.0
    assert res^b0.test_interpolate.0.0 == 5227450849765426377 <Field>
    assert res^b1.test_interpolate.0.0 == 6732102312355077803 <Field>
    field %RET.test_interpolate = 1 <Field>
Transition: -> rp@.test_interpolate

Block 246:
Func: test_interpolate, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.test_interpolate

Block 247:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 max_degree.test_sumcheck.0.0 = 2 <U32>
    u32 num_vars.test_sumcheck.0.0 = 10 <U32>
    field b0.from_bases.0.0 = 5381739234459659577 <Field>
    field b1.from_bases.0.0 = 0 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 248 <Field>
Transition: -> 717

Block 248:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^0^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field claimed_sum^b0.test_sumcheck.0.0 = ret^0^b0.test_sumcheck.0.0
    field claimed_sum^b1.test_sumcheck.0.0 = ret^0^b1.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 10 <U32>] array^0.test_sumcheck.0.0
    field b0.from_bases.0.0 = 1302225541414200547 <Field>
    field b1.from_bases.0.0 = 12958788515171733116 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 249 <Field>
Transition: -> 719

Block 249:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^0^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^0^b0.test_sumcheck.0.0 = ret^0^b0.test_sumcheck.0.0
    field init^0^0^b1.test_sumcheck.0.0 = ret^0^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 10901875112340244795 <Field>
    field b1.from_bases.0.0 = 4968657076863547813 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 250 <Field>
Transition: -> 721

Block 250:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^1^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^1^b0.test_sumcheck.0.0 = ret^1^b0.test_sumcheck.0.0
    field init^0^1^b1.test_sumcheck.0.0 = ret^1^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11898179702182245198 <Field>
    field b1.from_bases.0.0 = 4100753405466582436 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 251 <Field>
Transition: -> 723

Block 251:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^2^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^2^b0.test_sumcheck.0.0 = ret^2^b0.test_sumcheck.0.0
    field init^0^2^b1.test_sumcheck.0.0 = ret^2^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 10092044199033547825 <Field>
    field b1.from_bases.0.0 = 9710167393108245559 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 252 <Field>
Transition: -> 725

Block 252:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^3^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^3^b0.test_sumcheck.0.0 = ret^3^b0.test_sumcheck.0.0
    field init^0^3^b1.test_sumcheck.0.0 = ret^3^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 7068724522183158216 <Field>
    field b1.from_bases.0.0 = 4064479482636010224 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 253 <Field>
Transition: -> 727

Block 253:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^4^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^4^b0.test_sumcheck.0.0 = ret^4^b0.test_sumcheck.0.0
    field init^0^4^b1.test_sumcheck.0.0 = ret^4^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 16301080299104848832 <Field>
    field b1.from_bases.0.0 = 12457446829551121118 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 254 <Field>
Transition: -> 729

Block 254:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^5^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^5^b0.test_sumcheck.0.0 = ret^5^b0.test_sumcheck.0.0
    field init^0^5^b1.test_sumcheck.0.0 = ret^5^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 8763035400087168573 <Field>
    field b1.from_bases.0.0 = 1741651985650175190 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 255 <Field>
Transition: -> 731

Block 255:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^6^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^6^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^6^b0.test_sumcheck.0.0 = ret^6^b0.test_sumcheck.0.0
    field init^0^6^b1.test_sumcheck.0.0 = ret^6^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 15235251281196635963 <Field>
    field b1.from_bases.0.0 = 7806221173787657120 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 256 <Field>
Transition: -> 733

Block 256:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^7^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^7^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^7^b0.test_sumcheck.0.0 = ret^7^b0.test_sumcheck.0.0
    field init^0^7^b1.test_sumcheck.0.0 = ret^7^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 5242186385561037625 <Field>
    field b1.from_bases.0.0 = 6233572109404572549 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 257 <Field>
Transition: -> 735

Block 257:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^8^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^8^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^8^b0.test_sumcheck.0.0 = ret^8^b0.test_sumcheck.0.0
    field init^0^8^b1.test_sumcheck.0.0 = ret^8^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 16463082648752624742 <Field>
    field b1.from_bases.0.0 = 8065453395071611817 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 258 <Field>
Transition: -> 737

Block 258:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 20
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^9^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^9^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^0^9^b0.test_sumcheck.0.0 = ret^9^b0.test_sumcheck.0.0
    field init^0^9^b1.test_sumcheck.0.0 = ret^9^b1.test_sumcheck.0.0
    array^0.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^0^0^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^0^0^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^0^1^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^0^1^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^0^2^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^0^2^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 3 <U32>] = init^0^3^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 3 <U32> + 1 <U32>] = init^0^3^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 4 <U32>] = init^0^4^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 4 <U32> + 1 <U32>] = init^0^4^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 5 <U32>] = init^0^5^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 5 <U32> + 1 <U32>] = init^0^5^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 6 <U32>] = init^0^6^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 6 <U32> + 1 <U32>] = init^0^6^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 7 <U32>] = init^0^7^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 7 <U32> + 1 <U32>] = init^0^7^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 8 <U32>] = init^0^8^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 8 <U32> + 1 <U32>] = init^0^8^b1.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 9 <U32>] = init^0^9^b0.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.0[2 <U32> * 9 <U32> + 1 <U32>] = init^0^9^b1.test_sumcheck.0.0 <field>, init
    IOPProverMessage { evaluations: ExtField { b0: field, b1: field }[3] }[10 <U32>] array^1.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^2.test_sumcheck.0.0
    field b0.from_bases.0.0 = 15625839883379815370 <Field>
    field b1.from_bases.0.0 = 0 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 259 <Field>
Transition: -> 739

Block 259:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^10^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^10^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^2^0^b0.test_sumcheck.0.0 = ret^10^b0.test_sumcheck.0.0
    field init^2^0^b1.test_sumcheck.0.0 = ret^10^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 8202643420494428528 <Field>
    field b1.from_bases.0.0 = 0 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 260 <Field>
Transition: -> 741

Block 260:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^11^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^11^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^2^1^b0.test_sumcheck.0.0 = ret^11^b0.test_sumcheck.0.0
    field init^2^1^b1.test_sumcheck.0.0 = ret^11^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 9123088646716015485 <Field>
    field b1.from_bases.0.0 = 0 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 261 <Field>
Transition: -> 743

Block 261:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^12^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^12^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^2^2^b0.test_sumcheck.0.0 = ret^12^b0.test_sumcheck.0.0
    field init^2^2^b1.test_sumcheck.0.0 = ret^12^b1.test_sumcheck.0.0
    array^2.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^2^0^b0.test_sumcheck.0.0 <field>, init
    array^2.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^2^0^b1.test_sumcheck.0.0 <field>, init
    array^2.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^2^1^b0.test_sumcheck.0.0 <field>, init
    array^2.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^2^1^b1.test_sumcheck.0.0 <field>, init
    array^2.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^2^2^b0.test_sumcheck.0.0 <field>, init
    array^2.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^2^2^b1.test_sumcheck.0.0 <field>, init
    field struct^0^evaluations.test_sumcheck.0.0 = array^2.test_sumcheck.0.0
    field init^1^0^evaluations.test_sumcheck.0.0 = struct^0^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^3.test_sumcheck.0.0
    field b0.from_bases.0.0 = 14254061527995825859 <Field>
    field b1.from_bases.0.0 = 9110557621378684481 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 262 <Field>
Transition: -> 745

Block 262:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^13^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^13^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^3^0^b0.test_sumcheck.0.0 = ret^13^b0.test_sumcheck.0.0
    field init^3^0^b1.test_sumcheck.0.0 = ret^13^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 18156701265705244163 <Field>
    field b1.from_bases.0.0 = 9862996344676813793 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 263 <Field>
Transition: -> 747

Block 263:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^14^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^14^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^3^1^b0.test_sumcheck.0.0 = ret^14^b0.test_sumcheck.0.0
    field init^3^1^b1.test_sumcheck.0.0 = ret^14^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11188546092662077216 <Field>
    field b1.from_bases.0.0 = 18049905361602751908 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 264 <Field>
Transition: -> 749

Block 264:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^15^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^15^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^3^2^b0.test_sumcheck.0.0 = ret^15^b0.test_sumcheck.0.0
    field init^3^2^b1.test_sumcheck.0.0 = ret^15^b1.test_sumcheck.0.0
    array^3.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^3^0^b0.test_sumcheck.0.0 <field>, init
    array^3.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^3^0^b1.test_sumcheck.0.0 <field>, init
    array^3.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^3^1^b0.test_sumcheck.0.0 <field>, init
    array^3.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^3^1^b1.test_sumcheck.0.0 <field>, init
    array^3.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^3^2^b0.test_sumcheck.0.0 <field>, init
    array^3.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^3^2^b1.test_sumcheck.0.0 <field>, init
    field struct^1^evaluations.test_sumcheck.0.0 = array^3.test_sumcheck.0.0
    field init^1^1^evaluations.test_sumcheck.0.0 = struct^1^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^4.test_sumcheck.0.0
    field b0.from_bases.0.0 = 2649376749893690711 <Field>
    field b1.from_bases.0.0 = 17218516312374968899 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 265 <Field>
Transition: -> 751

Block 265:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^16^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^16^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^4^0^b0.test_sumcheck.0.0 = ret^16^b0.test_sumcheck.0.0
    field init^4^0^b1.test_sumcheck.0.0 = ret^16^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 2831708821143067610 <Field>
    field b1.from_bases.0.0 = 14218239706904981658 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 266 <Field>
Transition: -> 753

Block 266:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^17^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^17^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^4^1^b0.test_sumcheck.0.0 = ret^17^b0.test_sumcheck.0.0
    field init^4^1^b1.test_sumcheck.0.0 = ret^17^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 9757815734812382814 <Field>
    field b1.from_bases.0.0 = 12686601350460486396 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 267 <Field>
Transition: -> 755

Block 267:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^18^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^18^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^4^2^b0.test_sumcheck.0.0 = ret^18^b0.test_sumcheck.0.0
    field init^4^2^b1.test_sumcheck.0.0 = ret^18^b1.test_sumcheck.0.0
    array^4.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^4^0^b0.test_sumcheck.0.0 <field>, init
    array^4.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^4^0^b1.test_sumcheck.0.0 <field>, init
    array^4.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^4^1^b0.test_sumcheck.0.0 <field>, init
    array^4.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^4^1^b1.test_sumcheck.0.0 <field>, init
    array^4.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^4^2^b0.test_sumcheck.0.0 <field>, init
    array^4.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^4^2^b1.test_sumcheck.0.0 <field>, init
    field struct^2^evaluations.test_sumcheck.0.0 = array^4.test_sumcheck.0.0
    field init^1^2^evaluations.test_sumcheck.0.0 = struct^2^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^5.test_sumcheck.0.0
    field b0.from_bases.0.0 = 7233386715498747060 <Field>
    field b1.from_bases.0.0 = 7095704565502922002 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 268 <Field>
Transition: -> 757

Block 268:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^19^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^19^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^5^0^b0.test_sumcheck.0.0 = ret^19^b0.test_sumcheck.0.0
    field init^5^0^b1.test_sumcheck.0.0 = ret^19^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 16440808203681263638 <Field>
    field b1.from_bases.0.0 = 18083141816266740122 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 269 <Field>
Transition: -> 759

Block 269:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^20^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^20^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^5^1^b0.test_sumcheck.0.0 = ret^20^b0.test_sumcheck.0.0
    field init^5^1^b1.test_sumcheck.0.0 = ret^20^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11636965197628714193 <Field>
    field b1.from_bases.0.0 = 5215192044745778373 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 270 <Field>
Transition: -> 761

Block 270:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^21^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^21^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^5^2^b0.test_sumcheck.0.0 = ret^21^b0.test_sumcheck.0.0
    field init^5^2^b1.test_sumcheck.0.0 = ret^21^b1.test_sumcheck.0.0
    array^5.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^5^0^b0.test_sumcheck.0.0 <field>, init
    array^5.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^5^0^b1.test_sumcheck.0.0 <field>, init
    array^5.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^5^1^b0.test_sumcheck.0.0 <field>, init
    array^5.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^5^1^b1.test_sumcheck.0.0 <field>, init
    array^5.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^5^2^b0.test_sumcheck.0.0 <field>, init
    array^5.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^5^2^b1.test_sumcheck.0.0 <field>, init
    field struct^3^evaluations.test_sumcheck.0.0 = array^5.test_sumcheck.0.0
    field init^1^3^evaluations.test_sumcheck.0.0 = struct^3^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^6.test_sumcheck.0.0
    field b0.from_bases.0.0 = 15772292650490448718 <Field>
    field b1.from_bases.0.0 = 3991853446702494823 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 271 <Field>
Transition: -> 763

Block 271:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^22^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^22^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^6^0^b0.test_sumcheck.0.0 = ret^22^b0.test_sumcheck.0.0
    field init^6^0^b1.test_sumcheck.0.0 = ret^22^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 4186600943806660010 <Field>
    field b1.from_bases.0.0 = 17621743141803960047 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 272 <Field>
Transition: -> 765

Block 272:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^23^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^23^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^6^1^b0.test_sumcheck.0.0 = ret^23^b0.test_sumcheck.0.0
    field init^6^1^b1.test_sumcheck.0.0 = ret^23^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 352102000098103930 <Field>
    field b1.from_bases.0.0 = 12412411835474770419 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 273 <Field>
Transition: -> 767

Block 273:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^24^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^24^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^6^2^b0.test_sumcheck.0.0 = ret^24^b0.test_sumcheck.0.0
    field init^6^2^b1.test_sumcheck.0.0 = ret^24^b1.test_sumcheck.0.0
    array^6.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^6^0^b0.test_sumcheck.0.0 <field>, init
    array^6.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^6^0^b1.test_sumcheck.0.0 <field>, init
    array^6.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^6^1^b0.test_sumcheck.0.0 <field>, init
    array^6.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^6^1^b1.test_sumcheck.0.0 <field>, init
    array^6.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^6^2^b0.test_sumcheck.0.0 <field>, init
    array^6.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^6^2^b1.test_sumcheck.0.0 <field>, init
    field struct^4^evaluations.test_sumcheck.0.0 = array^6.test_sumcheck.0.0
    field init^1^4^evaluations.test_sumcheck.0.0 = struct^4^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^7.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11729167424270545100 <Field>
    field b1.from_bases.0.0 = 3636283511385393242 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 274 <Field>
Transition: -> 769

Block 274:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^25^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^25^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^7^0^b0.test_sumcheck.0.0 = ret^25^b0.test_sumcheck.0.0
    field init^7^0^b1.test_sumcheck.0.0 = ret^25^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 3826595307448355232 <Field>
    field b1.from_bases.0.0 = 162243787959849647 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 275 <Field>
Transition: -> 771

Block 275:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^26^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^26^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^7^1^b0.test_sumcheck.0.0 = ret^26^b0.test_sumcheck.0.0
    field init^7^1^b1.test_sumcheck.0.0 = ret^26^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 17161249725578724202 <Field>
    field b1.from_bases.0.0 = 17929180343846829204 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 276 <Field>
Transition: -> 773

Block 276:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^27^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^27^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^7^2^b0.test_sumcheck.0.0 = ret^27^b0.test_sumcheck.0.0
    field init^7^2^b1.test_sumcheck.0.0 = ret^27^b1.test_sumcheck.0.0
    array^7.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^7^0^b0.test_sumcheck.0.0 <field>, init
    array^7.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^7^0^b1.test_sumcheck.0.0 <field>, init
    array^7.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^7^1^b0.test_sumcheck.0.0 <field>, init
    array^7.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^7^1^b1.test_sumcheck.0.0 <field>, init
    array^7.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^7^2^b0.test_sumcheck.0.0 <field>, init
    array^7.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^7^2^b1.test_sumcheck.0.0 <field>, init
    field struct^5^evaluations.test_sumcheck.0.0 = array^7.test_sumcheck.0.0
    field init^1^5^evaluations.test_sumcheck.0.0 = struct^5^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^8.test_sumcheck.0.0
    field b0.from_bases.0.0 = 13368631180057455090 <Field>
    field b1.from_bases.0.0 = 14861314157668241575 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 277 <Field>
Transition: -> 775

Block 277:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^28^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^28^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^8^0^b0.test_sumcheck.0.0 = ret^28^b0.test_sumcheck.0.0
    field init^8^0^b1.test_sumcheck.0.0 = ret^28^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11107368119284055473 <Field>
    field b1.from_bases.0.0 = 17075000495691848214 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 278 <Field>
Transition: -> 777

Block 278:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^29^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^29^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^8^1^b0.test_sumcheck.0.0 = ret^29^b0.test_sumcheck.0.0
    field init^8^1^b1.test_sumcheck.0.0 = ret^29^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 16875625485236122780 <Field>
    field b1.from_bases.0.0 = 2373391750072719180 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 279 <Field>
Transition: -> 779

Block 279:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^30^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^30^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^8^2^b0.test_sumcheck.0.0 = ret^30^b0.test_sumcheck.0.0
    field init^8^2^b1.test_sumcheck.0.0 = ret^30^b1.test_sumcheck.0.0
    array^8.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^8^0^b0.test_sumcheck.0.0 <field>, init
    array^8.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^8^0^b1.test_sumcheck.0.0 <field>, init
    array^8.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^8^1^b0.test_sumcheck.0.0 <field>, init
    array^8.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^8^1^b1.test_sumcheck.0.0 <field>, init
    array^8.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^8^2^b0.test_sumcheck.0.0 <field>, init
    array^8.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^8^2^b1.test_sumcheck.0.0 <field>, init
    field struct^6^evaluations.test_sumcheck.0.0 = array^8.test_sumcheck.0.0
    field init^1^6^evaluations.test_sumcheck.0.0 = struct^6^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^9.test_sumcheck.0.0
    field b0.from_bases.0.0 = 5442805463265784333 <Field>
    field b1.from_bases.0.0 = 7202328442596962592 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 280 <Field>
Transition: -> 781

Block 280:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^31^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^31^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^9^0^b0.test_sumcheck.0.0 = ret^31^b0.test_sumcheck.0.0
    field init^9^0^b1.test_sumcheck.0.0 = ret^31^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 8239797216930988234 <Field>
    field b1.from_bases.0.0 = 9707256012980634977 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 281 <Field>
Transition: -> 783

Block 281:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^32^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^32^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^9^1^b0.test_sumcheck.0.0 = ret^32^b0.test_sumcheck.0.0
    field init^9^1^b1.test_sumcheck.0.0 = ret^32^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 5985066942186614960 <Field>
    field b1.from_bases.0.0 = 9596100722667064390 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 282 <Field>
Transition: -> 785

Block 282:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^33^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^33^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^9^2^b0.test_sumcheck.0.0 = ret^33^b0.test_sumcheck.0.0
    field init^9^2^b1.test_sumcheck.0.0 = ret^33^b1.test_sumcheck.0.0
    array^9.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^9^0^b0.test_sumcheck.0.0 <field>, init
    array^9.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^9^0^b1.test_sumcheck.0.0 <field>, init
    array^9.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^9^1^b0.test_sumcheck.0.0 <field>, init
    array^9.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^9^1^b1.test_sumcheck.0.0 <field>, init
    array^9.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^9^2^b0.test_sumcheck.0.0 <field>, init
    array^9.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^9^2^b1.test_sumcheck.0.0 <field>, init
    field struct^7^evaluations.test_sumcheck.0.0 = array^9.test_sumcheck.0.0
    field init^1^7^evaluations.test_sumcheck.0.0 = struct^7^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^10.test_sumcheck.0.0
    field b0.from_bases.0.0 = 901192351431457821 <Field>
    field b1.from_bases.0.0 = 6361354629487469004 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 283 <Field>
Transition: -> 787

Block 283:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^34^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^34^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^10^0^b0.test_sumcheck.0.0 = ret^34^b0.test_sumcheck.0.0
    field init^10^0^b1.test_sumcheck.0.0 = ret^34^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 10739582455820625232 <Field>
    field b1.from_bases.0.0 = 17441647146902346169 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 284 <Field>
Transition: -> 789

Block 284:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^35^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^35^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^10^1^b0.test_sumcheck.0.0 = ret^35^b0.test_sumcheck.0.0
    field init^10^1^b1.test_sumcheck.0.0 = ret^35^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 6119905167433210895 <Field>
    field b1.from_bases.0.0 = 8599655811702501182 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 285 <Field>
Transition: -> 791

Block 285:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^36^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^36^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^10^2^b0.test_sumcheck.0.0 = ret^36^b0.test_sumcheck.0.0
    field init^10^2^b1.test_sumcheck.0.0 = ret^36^b1.test_sumcheck.0.0
    array^10.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^10^0^b0.test_sumcheck.0.0 <field>, init
    array^10.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^10^0^b1.test_sumcheck.0.0 <field>, init
    array^10.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^10^1^b0.test_sumcheck.0.0 <field>, init
    array^10.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^10^1^b1.test_sumcheck.0.0 <field>, init
    array^10.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^10^2^b0.test_sumcheck.0.0 <field>, init
    array^10.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^10^2^b1.test_sumcheck.0.0 <field>, init
    field struct^8^evaluations.test_sumcheck.0.0 = array^10.test_sumcheck.0.0
    field init^1^8^evaluations.test_sumcheck.0.0 = struct^8^evaluations.test_sumcheck.0.0
    ExtField { b0: field, b1: field }[2 <U32> * 3 <U32>] array^11.test_sumcheck.0.0
    field b0.from_bases.0.0 = 11827470633030823617 <Field>
    field b1.from_bases.0.0 = 8647186968760557107 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 286 <Field>
Transition: -> 793

Block 286:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^37^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^37^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^11^0^b0.test_sumcheck.0.0 = ret^37^b0.test_sumcheck.0.0
    field init^11^0^b1.test_sumcheck.0.0 = ret^37^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 3770405393914766850 <Field>
    field b1.from_bases.0.0 = 2961926829994381338 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 287 <Field>
Transition: -> 795

Block 287:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^38^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^38^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^11^1^b0.test_sumcheck.0.0 = ret^38^b0.test_sumcheck.0.0
    field init^11^1^b1.test_sumcheck.0.0 = ret^38^b1.test_sumcheck.0.0
    field b0.from_bases.0.0 = 4705100426159075464 <Field>
    field b1.from_bases.0.0 = 4174151454217282968 <Field>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.from_bases.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.from_bases.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.from_bases.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.from_bases.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.from_bases = 288 <Field>
Transition: -> 797

Block 288:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 28
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^39^b0.test_sumcheck.0.0 = %RET^b0.from_bases
    field ret^39^b1.test_sumcheck.0.0 = %RET^b1.from_bases
    field init^11^2^b0.test_sumcheck.0.0 = ret^39^b0.test_sumcheck.0.0
    field init^11^2^b1.test_sumcheck.0.0 = ret^39^b1.test_sumcheck.0.0
    array^11.test_sumcheck.0.0[2 <U32> * 0 <U32>] = init^11^0^b0.test_sumcheck.0.0 <field>, init
    array^11.test_sumcheck.0.0[2 <U32> * 0 <U32> + 1 <U32>] = init^11^0^b1.test_sumcheck.0.0 <field>, init
    array^11.test_sumcheck.0.0[2 <U32> * 1 <U32>] = init^11^1^b0.test_sumcheck.0.0 <field>, init
    array^11.test_sumcheck.0.0[2 <U32> * 1 <U32> + 1 <U32>] = init^11^1^b1.test_sumcheck.0.0 <field>, init
    array^11.test_sumcheck.0.0[2 <U32> * 2 <U32>] = init^11^2^b0.test_sumcheck.0.0 <field>, init
    array^11.test_sumcheck.0.0[2 <U32> * 2 <U32> + 1 <U32>] = init^11^2^b1.test_sumcheck.0.0 <field>, init
    field struct^9^evaluations.test_sumcheck.0.0 = array^11.test_sumcheck.0.0
    field init^1^9^evaluations.test_sumcheck.0.0 = struct^9^evaluations.test_sumcheck.0.0
    array^1.test_sumcheck.0.0[0 <U32>] = init^1^0^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[1 <U32>] = init^1^1^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[2 <U32>] = init^1^2^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[3 <U32>] = init^1^3^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[4 <U32>] = init^1^4^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[5 <U32>] = init^1^5^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[6 <U32>] = init^1^6^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[7 <U32>] = init^1^7^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[8 <U32>] = init^1^8^evaluations.test_sumcheck.0.0 <field>, init
    array^1.test_sumcheck.0.0[9 <U32>] = init^1^9^evaluations.test_sumcheck.0.0 <field>, init
    field struct^10^points.test_sumcheck.0.0 = array^0.test_sumcheck.0.0
    field struct^10^proofs.test_sumcheck.0.0 = array^1.test_sumcheck.0.0
    field proof^points.test_sumcheck.0.0 = struct^10^points.test_sumcheck.0.0
    field proof^proofs.test_sumcheck.0.0 = struct^10^proofs.test_sumcheck.0.0
    u32 struct^0^max_degree.test_sumcheck.0.0 = max_degree.test_sumcheck.0.0
    u32 struct^0^num_variables.test_sumcheck.0.0 = num_vars.test_sumcheck.0.0
    u32 aux_info^max_degree.test_sumcheck.0.0 = struct^0^max_degree.test_sumcheck.0.0
    u32 aux_info^num_variables.test_sumcheck.0.0 = struct^0^num_variables.test_sumcheck.0.0
    field[12 <U32>] array^0.test_sumcheck.0.1
    field init^0^0.test_sumcheck.0.1 = 787530367118369448 <Field>
    field init^0^1.test_sumcheck.0.1 = 6445557903967755975 <Field>
    field init^0^2.test_sumcheck.0.1 = 8764669763990785381 <Field>
    field init^0^3.test_sumcheck.0.1 = 8742660309018244752 <Field>
    field init^0^4.test_sumcheck.0.1 = 13094649375372052718 <Field>
    field init^0^5.test_sumcheck.0.1 = 8740822461868995925 <Field>
    field init^0^6.test_sumcheck.0.1 = 2285718199586959125 <Field>
    field init^0^7.test_sumcheck.0.1 = 15249283288261624815 <Field>
    field init^0^8.test_sumcheck.0.1 = 6496188985355145949 <Field>
    field init^0^9.test_sumcheck.0.1 = 1334424030710363167 <Field>
    field init^0^10.test_sumcheck.0.0 = 15712076019906120036 <Field>
    field init^0^11.test_sumcheck.0.0 = 9704033442049526914 <Field>
    array^0.test_sumcheck.0.1[0 <U32>] = init^0^0.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[1 <U32>] = init^0^1.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[2 <U32>] = init^0^2.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[3 <U32>] = init^0^3.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[4 <U32>] = init^0^4.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[5 <U32>] = init^0^5.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[6 <U32>] = init^0^6.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[7 <U32>] = init^0^7.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[8 <U32>] = init^0^8.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[9 <U32>] = init^0^9.test_sumcheck.0.1 <field>, init
    array^0.test_sumcheck.0.1[10 <U32>] = init^0^10.test_sumcheck.0.0 <field>, init
    array^0.test_sumcheck.0.1[11 <U32>] = init^0^11.test_sumcheck.0.0 <field>, init
    field struct^0^state.test_sumcheck.0.0 = array^0.test_sumcheck.0.1
    field struct^1^permutation^state.test_sumcheck.0.0 = struct^0^state.test_sumcheck.0.0
    field t^permutation^state.test_sumcheck.0.0 = struct^1^permutation^state.test_sumcheck.0.0
    field claimed_sum^b0.verify_sumcheck.0.0 = claimed_sum^b0.test_sumcheck.0.0
    field claimed_sum^b1.verify_sumcheck.0.0 = claimed_sum^b1.test_sumcheck.0.0
    field proof^points.verify_sumcheck.0.0 = proof^points.test_sumcheck.0.0
    field proof^proofs.verify_sumcheck.0.0 = proof^proofs.test_sumcheck.0.0
    u32 aux_info^max_degree.verify_sumcheck.0.0 = aux_info^max_degree.test_sumcheck.0.0
    u32 aux_info^num_variables.verify_sumcheck.0.0 = aux_info^num_variables.test_sumcheck.0.0
    field t^permutation^state.verify_sumcheck.0.0 = t^permutation^state.test_sumcheck.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.verify_sumcheck.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.verify_sumcheck.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.verify_sumcheck.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.verify_sumcheck = 289 <Field>
Transition: -> 298

Block 289:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^sc^expected_evaluation^b0.test_sumcheck.0.0 = %RET^sc^expected_evaluation^b0.verify_sumcheck
    field ret^0^sc^expected_evaluation^b1.test_sumcheck.0.0 = %RET^sc^expected_evaluation^b1.verify_sumcheck
    field ret^0^sc^point.test_sumcheck.0.0 = %RET^sc^point.verify_sumcheck
    field ret^0^t^permutation^state.test_sumcheck.0.0 = %RET^t^permutation^state.verify_sumcheck
    field sc_t^sc^expected_evaluation^b0.test_sumcheck.0.0 = ret^0^sc^expected_evaluation^b0.test_sumcheck.0.0
    field sc_t^sc^expected_evaluation^b1.test_sumcheck.0.0 = ret^0^sc^expected_evaluation^b1.test_sumcheck.0.0
    field sc_t^sc^point.test_sumcheck.0.0 = ret^0^sc^point.test_sumcheck.0.0
    field sc_t^t^permutation^state.test_sumcheck.0.0 = ret^0^t^permutation^state.test_sumcheck.0.0
    field t^permutation^state.test_sumcheck.0.0 = sc_t^t^permutation^state.test_sumcheck.0.0
    field self^permutation^state.read_challenge.0.0 = t^permutation^state.test_sumcheck.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.read_challenge.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.test_sumcheck.0.0
    u32 SEL_DEGREE.read_challenge.0.0 = SEL_DEGREE.test_sumcheck.0.0
    u32 log2_num_fanin.read_challenge.0.0 = log2_num_fanin.test_sumcheck.0.0
    u32 num_fanin.read_challenge.0.0 = num_fanin.test_sumcheck.0.0
    field rp@.read_challenge = 290 <Field>
Transition: -> 550

Block 290:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^elements^b0.test_sumcheck.0.0 = %RET^elements^b0.read_challenge
    field ret^0^elements^b1.test_sumcheck.0.0 = %RET^elements^b1.read_challenge
    field c^elements^b0.test_sumcheck.0.0 = ret^0^elements^b0.test_sumcheck.0.0
    field c^elements^b1.test_sumcheck.0.0 = ret^0^elements^b1.test_sumcheck.0.0
    field %RET.test_sumcheck = c^elements^b0.test_sumcheck.0.0
Transition: -> rp@.test_sumcheck

Block 291:
Func: test_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.test_sumcheck

Block 292:
Func: verify_round_and_update_state, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    assert !self^finished.verify_round_and_update_state.0.0
    field[2 <U32>] array^0.verify_round_and_update_state.0.0
    field init^0^0.verify_round_and_update_state.0.0 = 7809644666444607049 <Field>
    field init^0^1.verify_round_and_update_state.0.0 = 110425579418144 <Field>
    array^0.verify_round_and_update_state.0.0[0 <U32>] = init^0^0.verify_round_and_update_state.0.0 <field>, init
    array^0.verify_round_and_update_state.0.0[1 <U32>] = init^0^1.verify_round_and_update_state.0.0 <field>, init
    field self^permutation^state.get_and_append_challenge.0.0 = transcript^permutation^state.verify_round_and_update_state.0.0
    u32 label_len.get_and_append_challenge.0.0 = 2 <U32>
    field label.get_and_append_challenge.0.0 = array^0.verify_round_and_update_state.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_round_and_update_state.0.0
    u32 SEL_DEGREE.get_and_append_challenge.0.0 = SEL_DEGREE.verify_round_and_update_state.0.0
    u32 log2_num_fanin.get_and_append_challenge.0.0 = log2_num_fanin.verify_round_and_update_state.0.0
    u32 num_fanin.get_and_append_challenge.0.0 = num_fanin.verify_round_and_update_state.0.0
    field rp@.get_and_append_challenge = 293 <Field>
Transition: -> 530

Block 293:
Func: verify_round_and_update_state, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge^elements^b0.verify_round_and_update_state.0.0 = %RET^challenge^elements^b0.get_and_append_challenge
    field ret^0^challenge^elements^b1.verify_round_and_update_state.0.0 = %RET^challenge^elements^b1.get_and_append_challenge
    field ret^0^transcript^permutation^state.verify_round_and_update_state.0.0 = %RET^transcript^permutation^state.get_and_append_challenge
    field tc^challenge^elements^b0.verify_round_and_update_state.0.0 = ret^0^challenge^elements^b0.verify_round_and_update_state.0.0
    field tc^challenge^elements^b1.verify_round_and_update_state.0.0 = ret^0^challenge^elements^b1.verify_round_and_update_state.0.0
    field tc^transcript^permutation^state.verify_round_and_update_state.0.0 = ret^0^transcript^permutation^state.verify_round_and_update_state.0.0
    field transcript^permutation^state.verify_round_and_update_state.0.0 = tc^transcript^permutation^state.verify_round_and_update_state.0.0
    field challenge^elements^b0.verify_round_and_update_state.0.0 = tc^challenge^elements^b0.verify_round_and_update_state.0.0
    field challenge^elements^b1.verify_round_and_update_state.0.0 = tc^challenge^elements^b1.verify_round_and_update_state.0.0
    self^challenges.verify_round_and_update_state.0.0[2 <U32> * self^round.verify_round_and_update_state.0.0 - 1 <U32>] = challenge^elements^b0.verify_round_and_update_state.0.0 <field>
    self^challenges.verify_round_and_update_state.0.0[2 <U32> * self^round.verify_round_and_update_state.0.0 - 1 <U32> + 1 <U32>] = challenge^elements^b1.verify_round_and_update_state.0.0 <field>
    self^polynomials_received.verify_round_and_update_state.0.0[self^round.verify_round_and_update_state.0.0 - 1 <U32>] = prover_msg^evaluations.verify_round_and_update_state.0.0 <field>
Transition: 
    self^round.verify_round_and_update_state.0.0 == self^num_vars.verify_round_and_update_state.0.0 ? -> 294 : -> 295

Block 294:
Func: verify_round_and_update_state, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    bool self^finished.verify_round_and_update_state.0.0 = true
Transition: -> 296

Block 295:
Func: verify_round_and_update_state, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 self^round.verify_round_and_update_state.0.0 = self^round.verify_round_and_update_state.0.0 + 1 <U32>
Transition: -> 296

Block 296:
Func: verify_round_and_update_state, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^vs^challenges.verify_round_and_update_state.0.0 = self^challenges.verify_round_and_update_state.0.0
    bool struct^0^vs^finished.verify_round_and_update_state.0.0 = self^finished.verify_round_and_update_state.0.0
    u32 struct^0^vs^max_degree.verify_round_and_update_state.0.0 = self^max_degree.verify_round_and_update_state.0.0
    u32 struct^0^vs^num_vars.verify_round_and_update_state.0.0 = self^num_vars.verify_round_and_update_state.0.0
    field struct^0^vs^polynomials_received.verify_round_and_update_state.0.0 = self^polynomials_received.verify_round_and_update_state.0.0
    u32 struct^0^vs^round.verify_round_and_update_state.0.0 = self^round.verify_round_and_update_state.0.0
    field struct^0^t^permutation^state.verify_round_and_update_state.0.0 = transcript^permutation^state.verify_round_and_update_state.0.0
    field %RET^t^permutation^state.verify_round_and_update_state = struct^0^t^permutation^state.verify_round_and_update_state.0.0
    field %RET^vs^challenges.verify_round_and_update_state = struct^0^vs^challenges.verify_round_and_update_state.0.0
    bool %RET^vs^finished.verify_round_and_update_state = struct^0^vs^finished.verify_round_and_update_state.0.0
    u32 %RET^vs^max_degree.verify_round_and_update_state = struct^0^vs^max_degree.verify_round_and_update_state.0.0
    u32 %RET^vs^num_vars.verify_round_and_update_state = struct^0^vs^num_vars.verify_round_and_update_state.0.0
    field %RET^vs^polynomials_received.verify_round_and_update_state = struct^0^vs^polynomials_received.verify_round_and_update_state.0.0
    u32 %RET^vs^round.verify_round_and_update_state = struct^0^vs^round.verify_round_and_update_state.0.0
Transition: -> rp@.verify_round_and_update_state

Block 297:
Func: verify_round_and_update_state, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.verify_round_and_update_state

Block 298:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: 
    aux_info^num_variables.verify_sumcheck.0.0 == 0 <U32> ? -> 299 : -> 301

Block 299:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[0 <U32>] array^0.verify_sumcheck.0.0
    field struct^0^point.verify_sumcheck.0.0 = array^0.verify_sumcheck.0.0
    field struct^0^expected_evaluation^b0.verify_sumcheck.0.0 = claimed_sum^b0.verify_sumcheck.0.0
    field struct^0^expected_evaluation^b1.verify_sumcheck.0.0 = claimed_sum^b1.verify_sumcheck.0.0
    field struct^1^sc^expected_evaluation^b0.verify_sumcheck.0.0 = struct^0^expected_evaluation^b0.verify_sumcheck.0.0
    field struct^1^sc^expected_evaluation^b1.verify_sumcheck.0.0 = struct^0^expected_evaluation^b1.verify_sumcheck.0.0
    field struct^1^sc^point.verify_sumcheck.0.0 = struct^0^point.verify_sumcheck.0.0
    field struct^1^t^permutation^state.verify_sumcheck.0.0 = t^permutation^state.verify_sumcheck.0.0
    field %RET^sc^expected_evaluation^b0.verify_sumcheck = struct^1^sc^expected_evaluation^b0.verify_sumcheck.0.0
    field %RET^sc^expected_evaluation^b1.verify_sumcheck = struct^1^sc^expected_evaluation^b1.verify_sumcheck.0.0
    field %RET^sc^point.verify_sumcheck = struct^1^sc^point.verify_sumcheck.0.0
    field %RET^t^permutation^state.verify_sumcheck = struct^1^t^permutation^state.verify_sumcheck.0.0
Transition: -> rp@.verify_sumcheck

Block 300:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 302

Block 301:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 302

Block 302:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[1 <U32>] array^0.verify_sumcheck.0.1
    field init^0^0.verify_sumcheck.0.0 = (F)aux_info^num_variables.verify_sumcheck.0.0
    u32 index@.verify_sumcheck.0.0 = 0 <U32>
Transition: 
    index@.verify_sumcheck.0.0 != 1 <U32> ? -> 303 : -> 304

Block 303:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.verify_sumcheck.0.1[index@.verify_sumcheck.0.0] = init^0^0.verify_sumcheck.0.0 <field>, init
    index@.verify_sumcheck.0.0 = index@.verify_sumcheck.0.0 + 1 <U32>
Transition: 
    index@.verify_sumcheck.0.0 != 1 <U32> ? -> 303 : -> 304

Block 304:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^permutation^state.append_message.0.0 = t^permutation^state.verify_sumcheck.0.0
    u32 msg_len.append_message.0.0 = 1 <U32>
    field msg.append_message.0.0 = array^0.verify_sumcheck.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0
    u32 SEL_DEGREE.append_message.0.0 = SEL_DEGREE.verify_sumcheck.0.0
    u32 log2_num_fanin.append_message.0.0 = log2_num_fanin.verify_sumcheck.0.0
    u32 num_fanin.append_message.0.0 = num_fanin.verify_sumcheck.0.0
    field rp@.append_message = 305 <Field>
Transition: -> 799

Block 305:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^permutation^state.verify_sumcheck.0.0 = %RET^permutation^state.append_message
    field t^permutation^state.verify_sumcheck.0.0 = ret^0^permutation^state.verify_sumcheck.0.0
    field[1 <U32>] array^0.verify_sumcheck.0.1
    field init^0^0.verify_sumcheck.0.0 = (F)aux_info^max_degree.verify_sumcheck.0.0
    u32 index@.verify_sumcheck.0.0 = 0 <U32>
Transition: 
    index@.verify_sumcheck.0.0 != 1 <U32> ? -> 306 : -> 307

Block 306:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.verify_sumcheck.0.1[index@.verify_sumcheck.0.0] = init^0^0.verify_sumcheck.0.0 <field>, init
    index@.verify_sumcheck.0.0 = index@.verify_sumcheck.0.0 + 1 <U32>
Transition: 
    index@.verify_sumcheck.0.0 != 1 <U32> ? -> 306 : -> 307

Block 307:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^permutation^state.append_message.0.0 = t^permutation^state.verify_sumcheck.0.0
    u32 msg_len.append_message.0.0 = 1 <U32>
    field msg.append_message.0.0 = array^0.verify_sumcheck.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0
    u32 SEL_DEGREE.append_message.0.0 = SEL_DEGREE.verify_sumcheck.0.0
    u32 log2_num_fanin.append_message.0.0 = log2_num_fanin.verify_sumcheck.0.0
    u32 num_fanin.append_message.0.0 = num_fanin.verify_sumcheck.0.0
    field rp@.append_message = 308 <Field>
Transition: -> 814

Block 308:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^permutation^state.verify_sumcheck.0.0 = %RET^permutation^state.append_message
    field t^permutation^state.verify_sumcheck.0.0 = ret^0^permutation^state.verify_sumcheck.0.0
    Challenge { elements: ExtField { b0: field, b1: field } }[2 <U32> * aux_info^num_variables.verify_sumcheck.0.0] challenges.verify_sumcheck.0.0
    ExtField { b0: field, b1: field }[0][aux_info^num_variables.verify_sumcheck.0.0] polynomials_received.verify_sumcheck.0.0
    u32 struct^0^round.verify_sumcheck.0.0 = 1 <U32>
    u32 struct^0^num_vars.verify_sumcheck.0.0 = aux_info^num_variables.verify_sumcheck.0.0
    u32 struct^0^max_degree.verify_sumcheck.0.0 = aux_info^max_degree.verify_sumcheck.0.0
    bool struct^0^finished.verify_sumcheck.0.0 = false
    field struct^0^polynomials_received.verify_sumcheck.0.0 = polynomials_received.verify_sumcheck.0.0
    field struct^0^challenges.verify_sumcheck.0.0 = challenges.verify_sumcheck.0.0
    field vs^challenges.verify_sumcheck.0.0 = struct^0^challenges.verify_sumcheck.0.0
    bool vs^finished.verify_sumcheck.0.0 = struct^0^finished.verify_sumcheck.0.0
    u32 vs^max_degree.verify_sumcheck.0.0 = struct^0^max_degree.verify_sumcheck.0.0
    u32 vs^num_vars.verify_sumcheck.0.0 = struct^0^num_vars.verify_sumcheck.0.0
    field vs^polynomials_received.verify_sumcheck.0.0 = struct^0^polynomials_received.verify_sumcheck.0.0
    u32 vs^round.verify_sumcheck.0.0 = struct^0^round.verify_sumcheck.0.0
Transition: -> 309

Block 309:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.verify_sumcheck.0.0 = 0 <U32>
Transition: 
    i.verify_sumcheck.0.0 != aux_info^num_variables.verify_sumcheck.0.0 ? -> 310 : -> 321

Block 310:
Func: verify_sumcheck, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 311

Block 311:
Func: verify_sumcheck, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^evaluations.verify_sumcheck.0.0 = proof^proofs.verify_sumcheck.0.0[i.verify_sumcheck.0.0]
    field prover_msg^evaluations.verify_sumcheck.0.0 = load^0^evaluations.verify_sumcheck.0.0
Transition: -> 312

Block 312:
Func: verify_sumcheck, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.verify_sumcheck.0.0 = 0 <U32>
Transition: 
    j.verify_sumcheck.0.0 != aux_info^max_degree.verify_sumcheck.0.0 + 1 <U32> ? -> 313 : -> 317

Block 313:
Func: verify_sumcheck, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 314

Block 314:
Func: verify_sumcheck, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.verify_sumcheck.0.0 = prover_msg^evaluations.verify_sumcheck.0.0[2 <U32> * j.verify_sumcheck.0.0]
    field load^0^b1.verify_sumcheck.0.0 = prover_msg^evaluations.verify_sumcheck.0.0[2 <U32> * j.verify_sumcheck.0.0 + 1 <U32>]
    field self^permutation^state.append_field_element_ext.0.0 = t^permutation^state.verify_sumcheck.0.0
    field element^b0.append_field_element_ext.0.0 = load^0^b0.verify_sumcheck.0.0
    field element^b1.append_field_element_ext.0.0 = load^0^b1.verify_sumcheck.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0
    u32 SEL_DEGREE.append_field_element_ext.0.0 = SEL_DEGREE.verify_sumcheck.0.0
    u32 log2_num_fanin.append_field_element_ext.0.0 = log2_num_fanin.verify_sumcheck.0.0
    u32 num_fanin.append_field_element_ext.0.0 = num_fanin.verify_sumcheck.0.0
    field rp@.append_field_element_ext = 315 <Field>
Transition: -> 829

Block 315:
Func: verify_sumcheck, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^permutation^state.verify_sumcheck.1.0 = %RET^permutation^state.append_field_element_ext
    field t^permutation^state.verify_sumcheck.0.0 = ret^0^permutation^state.verify_sumcheck.1.0
Transition: -> 316

Block 316:
Func: verify_sumcheck, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.verify_sumcheck.0.0 = j.verify_sumcheck.0.0 + 1 <U32>
Transition: 
    j.verify_sumcheck.0.0 != aux_info^max_degree.verify_sumcheck.0.0 + 1 <U32> ? -> 313 : -> 317

Block 317:
Func: verify_sumcheck, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 318

Block 318:
Func: verify_sumcheck, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^challenges.verify_round_and_update_state.0.0 = vs^challenges.verify_sumcheck.0.0
    bool self^finished.verify_round_and_update_state.0.0 = vs^finished.verify_sumcheck.0.0
    u32 self^max_degree.verify_round_and_update_state.0.0 = vs^max_degree.verify_sumcheck.0.0
    u32 self^num_vars.verify_round_and_update_state.0.0 = vs^num_vars.verify_sumcheck.0.0
    field self^polynomials_received.verify_round_and_update_state.0.0 = vs^polynomials_received.verify_sumcheck.0.0
    u32 self^round.verify_round_and_update_state.0.0 = vs^round.verify_sumcheck.0.0
    field prover_msg^evaluations.verify_round_and_update_state.0.0 = prover_msg^evaluations.verify_sumcheck.0.0
    field transcript^permutation^state.verify_round_and_update_state.0.0 = t^permutation^state.verify_sumcheck.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_round_and_update_state.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0
    u32 SEL_DEGREE.verify_round_and_update_state.0.0 = SEL_DEGREE.verify_sumcheck.0.0
    u32 log2_num_fanin.verify_round_and_update_state.0.0 = log2_num_fanin.verify_sumcheck.0.0
    u32 num_fanin.verify_round_and_update_state.0.0 = num_fanin.verify_sumcheck.0.0
    field rp@.verify_round_and_update_state = 319 <Field>
Transition: -> 292

Block 319:
Func: verify_sumcheck, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^t^permutation^state.verify_sumcheck.0.0 = %RET^t^permutation^state.verify_round_and_update_state
    field ret^0^vs^challenges.verify_sumcheck.0.0 = %RET^vs^challenges.verify_round_and_update_state
    bool ret^0^vs^finished.verify_sumcheck.0.0 = %RET^vs^finished.verify_round_and_update_state
    u32 ret^0^vs^max_degree.verify_sumcheck.0.0 = %RET^vs^max_degree.verify_round_and_update_state
    u32 ret^0^vs^num_vars.verify_sumcheck.0.0 = %RET^vs^num_vars.verify_round_and_update_state
    field ret^0^vs^polynomials_received.verify_sumcheck.0.0 = %RET^vs^polynomials_received.verify_round_and_update_state
    u32 ret^0^vs^round.verify_sumcheck.0.0 = %RET^vs^round.verify_round_and_update_state
    field vs_t^t^permutation^state.verify_sumcheck.0.0 = ret^0^t^permutation^state.verify_sumcheck.0.0
    field vs_t^vs^challenges.verify_sumcheck.0.0 = ret^0^vs^challenges.verify_sumcheck.0.0
    bool vs_t^vs^finished.verify_sumcheck.0.0 = ret^0^vs^finished.verify_sumcheck.0.0
    u32 vs_t^vs^max_degree.verify_sumcheck.0.0 = ret^0^vs^max_degree.verify_sumcheck.0.0
    u32 vs_t^vs^num_vars.verify_sumcheck.0.0 = ret^0^vs^num_vars.verify_sumcheck.0.0
    field vs_t^vs^polynomials_received.verify_sumcheck.0.0 = ret^0^vs^polynomials_received.verify_sumcheck.0.0
    u32 vs_t^vs^round.verify_sumcheck.0.0 = ret^0^vs^round.verify_sumcheck.0.0
    field vs^challenges.verify_sumcheck.0.0 = vs_t^vs^challenges.verify_sumcheck.0.0
    bool vs^finished.verify_sumcheck.0.0 = vs_t^vs^finished.verify_sumcheck.0.0
    u32 vs^max_degree.verify_sumcheck.0.0 = vs_t^vs^max_degree.verify_sumcheck.0.0
    u32 vs^num_vars.verify_sumcheck.0.0 = vs_t^vs^num_vars.verify_sumcheck.0.0
    field vs^polynomials_received.verify_sumcheck.0.0 = vs_t^vs^polynomials_received.verify_sumcheck.0.0
    u32 vs^round.verify_sumcheck.0.0 = vs_t^vs^round.verify_sumcheck.0.0
    field t^permutation^state.verify_sumcheck.0.0 = vs_t^t^permutation^state.verify_sumcheck.0.0
Transition: -> 320

Block 320:
Func: verify_sumcheck, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.verify_sumcheck.0.0 = i.verify_sumcheck.0.0 + 1 <U32>
Transition: 
    i.verify_sumcheck.0.0 != aux_info^num_variables.verify_sumcheck.0.0 ? -> 310 : -> 321

Block 321:
Func: verify_sumcheck, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 322

Block 322:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^challenges.check_and_generate_subclaim.0.0 = vs^challenges.verify_sumcheck.0.0
    bool self^finished.check_and_generate_subclaim.0.0 = vs^finished.verify_sumcheck.0.0
    u32 self^max_degree.check_and_generate_subclaim.0.0 = vs^max_degree.verify_sumcheck.0.0
    u32 self^num_vars.check_and_generate_subclaim.0.0 = vs^num_vars.verify_sumcheck.0.0
    field self^polynomials_received.check_and_generate_subclaim.0.0 = vs^polynomials_received.verify_sumcheck.0.0
    u32 self^round.check_and_generate_subclaim.0.0 = vs^round.verify_sumcheck.0.0
    field asserted_sum^b0.check_and_generate_subclaim.0.0 = claimed_sum^b0.verify_sumcheck.0.0
    field asserted_sum^b1.check_and_generate_subclaim.0.0 = claimed_sum^b1.verify_sumcheck.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.check_and_generate_subclaim.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0
    u32 SEL_DEGREE.check_and_generate_subclaim.0.0 = SEL_DEGREE.verify_sumcheck.0.0
    u32 log2_num_fanin.check_and_generate_subclaim.0.0 = log2_num_fanin.verify_sumcheck.0.0
    u32 num_fanin.check_and_generate_subclaim.0.0 = num_fanin.verify_sumcheck.0.0
    field rp@.check_and_generate_subclaim = 323 <Field>
Transition: -> 197

Block 323:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^expected_evaluation^b0.verify_sumcheck.0.0 = %RET^expected_evaluation^b0.check_and_generate_subclaim
    field ret^0^expected_evaluation^b1.verify_sumcheck.0.0 = %RET^expected_evaluation^b1.check_and_generate_subclaim
    field ret^0^point.verify_sumcheck.0.0 = %RET^point.check_and_generate_subclaim
    field sc^expected_evaluation^b0.verify_sumcheck.0.0 = ret^0^expected_evaluation^b0.verify_sumcheck.0.0
    field sc^expected_evaluation^b1.verify_sumcheck.0.0 = ret^0^expected_evaluation^b1.verify_sumcheck.0.0
    field sc^point.verify_sumcheck.0.0 = ret^0^point.verify_sumcheck.0.0
    field struct^0^sc^expected_evaluation^b0.verify_sumcheck.0.0 = sc^expected_evaluation^b0.verify_sumcheck.0.0
    field struct^0^sc^expected_evaluation^b1.verify_sumcheck.0.0 = sc^expected_evaluation^b1.verify_sumcheck.0.0
    field struct^0^sc^point.verify_sumcheck.0.0 = sc^point.verify_sumcheck.0.0
    field struct^0^t^permutation^state.verify_sumcheck.0.0 = t^permutation^state.verify_sumcheck.0.0
    field %RET^sc^expected_evaluation^b0.verify_sumcheck = struct^0^sc^expected_evaluation^b0.verify_sumcheck.0.0
    field %RET^sc^expected_evaluation^b1.verify_sumcheck = struct^0^sc^expected_evaluation^b1.verify_sumcheck.0.0
    field %RET^sc^point.verify_sumcheck = struct^0^sc^point.verify_sumcheck.0.0
    field %RET^t^permutation^state.verify_sumcheck = struct^0^t^permutation^state.verify_sumcheck.0.0
Transition: -> rp@.verify_sumcheck

Block 324:
Func: verify_sumcheck, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.verify_sumcheck

Block 325:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 num_prod_spec.tower_verify.0.0 = tower_proofs^prod_spec_size.tower_verify.0.0
    u32 num_logup_spec.tower_verify.0.0 = tower_proofs^logup_spec_size.tower_verify.0.0
    u32 size.get_challenge_pows.0.0 = num_prod_spec.tower_verify.0.0 + num_logup_spec.tower_verify.0.0 * 2 <U32>
    field transcript^permutation^state.get_challenge_pows.0.0 = t^permutation^state.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.get_challenge_pows.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.get_challenge_pows.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.get_challenge_pows.0.0 = num_fanin.tower_verify.0.0
    field rp@.get_challenge_pows = 326 <Field>
Transition: -> 534

Block 326:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge_pows.tower_verify.0.0 = %RET^challenge_pows.get_challenge_pows
    field ret^0^transcript^permutation^state.tower_verify.0.0 = %RET^transcript^permutation^state.get_challenge_pows
    field t_cp^challenge_pows.tower_verify.0.0 = ret^0^challenge_pows.tower_verify.0.0
    field t_cp^transcript^permutation^state.tower_verify.0.0 = ret^0^transcript^permutation^state.tower_verify.0.0
    field t^permutation^state.tower_verify.0.0 = t_cp^transcript^permutation^state.tower_verify.0.0
    field alpha_pows.tower_verify.0.0 = t_cp^challenge_pows.tower_verify.0.0
    ExtField { b0: field, b1: field }[2 <U32> * log2_num_fanin.tower_verify.0.0] initial_rt.tower_verify.0.0
Transition: -> 327

Block 327:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.0 = 0 <U32>
Transition: 
    i.tower_verify.0.0 != log2_num_fanin.tower_verify.0.0 ? -> 328 : -> 332

Block 328:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 329

Block 329:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[2 <U32>] array^0.tower_verify.0.0
    field init^0^0.tower_verify.0.0 = 6878231886748938864 <Field>
    field init^0^1.tower_verify.0.0 = 7173491 <Field>
    array^0.tower_verify.0.0[0 <U32>] = init^0^0.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.0[1 <U32>] = init^0^1.tower_verify.0.0 <field>, init
    field self^permutation^state.get_and_append_challenge.0.0 = t^permutation^state.tower_verify.0.0
    u32 label_len.get_and_append_challenge.0.0 = 2 <U32>
    field label.get_and_append_challenge.0.0 = array^0.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.get_and_append_challenge.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.get_and_append_challenge.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.get_and_append_challenge.0.0 = num_fanin.tower_verify.0.0
    field rp@.get_and_append_challenge = 330 <Field>
Transition: -> 530

Block 330:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge^elements^b0.tower_verify.0.0 = %RET^challenge^elements^b0.get_and_append_challenge
    field ret^0^challenge^elements^b1.tower_verify.0.0 = %RET^challenge^elements^b1.get_and_append_challenge
    field ret^0^transcript^permutation^state.tower_verify.1.0 = %RET^transcript^permutation^state.get_and_append_challenge
    field t0^challenge^elements^b0.tower_verify.0.0 = ret^0^challenge^elements^b0.tower_verify.0.0
    field t0^challenge^elements^b1.tower_verify.0.0 = ret^0^challenge^elements^b1.tower_verify.0.0
    field t0^transcript^permutation^state.tower_verify.0.0 = ret^0^transcript^permutation^state.tower_verify.1.0
    field t^permutation^state.tower_verify.0.0 = t0^transcript^permutation^state.tower_verify.0.0
    initial_rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.0] = t0^challenge^elements^b0.tower_verify.0.0 <field>
    initial_rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.0 + 1 <U32>] = t0^challenge^elements^b1.tower_verify.0.0 <field>
Transition: -> 331

Block 331:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.0 = i.tower_verify.0.0 + 1 <U32>
Transition: 
    i.tower_verify.0.0 != log2_num_fanin.tower_verify.0.0 ? -> 328 : -> 332

Block 332:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 333

Block 333:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 334 <Field>
Transition: -> 844

Block 334:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.0.0 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.0.0 = %RET^b1.to_ext
    field initial_claim^b0.tower_verify.0.0 = ret^0^b0.tower_verify.0.0
    field initial_claim^b1.tower_verify.0.0 = ret^0^b1.tower_verify.0.0
Transition: -> 335

Block 335:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.1 = 0 <U32>
Transition: 
    i.tower_verify.0.1 != num_prod_spec.tower_verify.0.0 ? -> 336 : -> 342

Block 336:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 337

Block 337:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.tower_verify.0.0 = prod_out_evals.tower_verify.0.0[i.tower_verify.0.1]
    field evals.tower_verify.0.0 = load^0.tower_verify.0.0
    field load^0^b0.tower_verify.0.0 = alpha_pows.tower_verify.0.0[2 <U32> * i.tower_verify.0.1]
    field load^0^b1.tower_verify.0.0 = alpha_pows.tower_verify.0.0[2 <U32> * i.tower_verify.0.1 + 1 <U32>]
    field alpha^b0.tower_verify.0.0 = load^0^b0.tower_verify.0.0
    field alpha^b1.tower_verify.0.0 = load^0^b1.tower_verify.0.0
    field self.mle_eval.0.0 = evals.tower_verify.0.0
    u32 mle_len.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field point.mle_eval.0.0 = initial_rt.tower_verify.0.0
    u32 point_len.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.mle_eval.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field rp@.mle_eval = 338 <Field>
Transition: -> 846

Block 338:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.0 = %RET^b0.mle_eval
    field ret^0^b1.tower_verify.1.0 = %RET^b1.mle_eval
    field e0^b0.ext_mul.0.0 = ret^0^b0.tower_verify.1.0
    field e0^b1.ext_mul.0.0 = ret^0^b1.tower_verify.1.0
    field e1^b0.ext_mul.0.0 = alpha^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = alpha^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 339 <Field>
Transition: -> 875

Block 339:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.0 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = initial_claim^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = initial_claim^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.0
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 340 <Field>
Transition: -> 877

Block 340:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.0 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.0.0 = %RET^b1.ext_add
    field initial_claim^b0.tower_verify.0.0 = ret^2^b0.tower_verify.0.0
    field initial_claim^b1.tower_verify.0.0 = ret^2^b1.tower_verify.0.0
Transition: -> 341

Block 341:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.1 = i.tower_verify.0.1 + 1 <U32>
Transition: 
    i.tower_verify.0.1 != num_prod_spec.tower_verify.0.0 ? -> 336 : -> 342

Block 342:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 343

Block 343:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 344

Block 344:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.2 = 0 <U32>
Transition: 
    i.tower_verify.0.2 != num_logup_spec.tower_verify.0.0 ? -> 345 : -> 354

Block 345:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 346

Block 346:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 24
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.1 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * i.tower_verify.0.2]
    field load^0^b1.tower_verify.0.1 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * i.tower_verify.0.2 + 1 <U32>]
    field alpha_numerator^b0.tower_verify.0.0 = load^0^b0.tower_verify.0.1
    field alpha_numerator^b1.tower_verify.0.0 = load^0^b1.tower_verify.0.1
    field load^0^b0.tower_verify.0.1 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * i.tower_verify.0.2 + 1 <U32>]
    field load^0^b1.tower_verify.0.1 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * i.tower_verify.0.2 + 1 <U32> + 1 <U32>]
    field alpha_denominator^b0.tower_verify.0.0 = load^0^b0.tower_verify.0.1
    field alpha_denominator^b1.tower_verify.0.0 = load^0^b1.tower_verify.0.1
    ExtField { b0: field, b1: field }[2 <U32> * 2 <U32>] array^0.tower_verify.0.1
    field load^0.tower_verify.0.3 = logup_out_evals.tower_verify.0.0[i.tower_verify.0.2]
    field load^1^b0.tower_verify.0.0 = load^0.tower_verify.0.3[2 <Field> * 0 <Field>]
    field load^1^b1.tower_verify.0.0 = load^0.tower_verify.0.3[2 <Field> * 0 <Field> + 1 <Field>]
    field init^0^0^b0.tower_verify.0.0 = load^1^b0.tower_verify.0.0
    field init^0^0^b1.tower_verify.0.0 = load^1^b1.tower_verify.0.0
    field load^2.tower_verify.0.0 = logup_out_evals.tower_verify.0.0[i.tower_verify.0.2]
    field load^3^b0.tower_verify.0.0 = load^2.tower_verify.0.0[2 <Field> * 1 <Field>]
    field load^3^b1.tower_verify.0.0 = load^2.tower_verify.0.0[2 <Field> * 1 <Field> + 1 <Field>]
    field init^0^1^b0.tower_verify.0.0 = load^3^b0.tower_verify.0.0
    field init^0^1^b1.tower_verify.0.0 = load^3^b1.tower_verify.0.0
    array^0.tower_verify.0.1[2 <U32> * 0 <U32>] = init^0^0^b0.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 0 <U32> + 1 <U32>] = init^0^0^b1.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 1 <U32>] = init^0^1^b0.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 1 <U32> + 1 <U32>] = init^0^1^b1.tower_verify.0.0 <field>, init
    field mle_numerator.tower_verify.0.0 = array^0.tower_verify.0.1
    ExtField { b0: field, b1: field }[2 <U32> * 2 <U32>] array^0.tower_verify.0.1
    field load^0.tower_verify.0.3 = logup_out_evals.tower_verify.0.0[i.tower_verify.0.2]
    field load^1^b0.tower_verify.0.0 = load^0.tower_verify.0.3[2 <Field> * 2 <Field>]
    field load^1^b1.tower_verify.0.0 = load^0.tower_verify.0.3[2 <Field> * 2 <Field> + 1 <Field>]
    field init^0^0^b0.tower_verify.0.0 = load^1^b0.tower_verify.0.0
    field init^0^0^b1.tower_verify.0.0 = load^1^b1.tower_verify.0.0
    field load^2.tower_verify.0.0 = logup_out_evals.tower_verify.0.0[i.tower_verify.0.2]
    field load^3^b0.tower_verify.0.0 = load^2.tower_verify.0.0[2 <Field> * 3 <Field>]
    field load^3^b1.tower_verify.0.0 = load^2.tower_verify.0.0[2 <Field> * 3 <Field> + 1 <Field>]
    field init^0^1^b0.tower_verify.0.0 = load^3^b0.tower_verify.0.0
    field init^0^1^b1.tower_verify.0.0 = load^3^b1.tower_verify.0.0
    array^0.tower_verify.0.1[2 <U32> * 0 <U32>] = init^0^0^b0.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 0 <U32> + 1 <U32>] = init^0^0^b1.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 1 <U32>] = init^0^1^b0.tower_verify.0.0 <field>, init
    array^0.tower_verify.0.1[2 <U32> * 1 <U32> + 1 <U32>] = init^0^1^b1.tower_verify.0.0 <field>, init
    field mle_denominator.tower_verify.0.0 = array^0.tower_verify.0.1
    field self.mle_eval.0.0 = mle_numerator.tower_verify.0.0
    u32 mle_len.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field point.mle_eval.0.0 = initial_rt.tower_verify.0.0
    u32 point_len.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.mle_eval.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field rp@.mle_eval = 347 <Field>
Transition: -> 879

Block 347:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.1 = %RET^b0.mle_eval
    field ret^0^b1.tower_verify.1.1 = %RET^b1.mle_eval
    field e0^b0.ext_mul.0.0 = ret^0^b0.tower_verify.1.1
    field e0^b1.ext_mul.0.0 = ret^0^b1.tower_verify.1.1
    field e1^b0.ext_mul.0.0 = alpha_numerator^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = alpha_numerator^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 348 <Field>
Transition: -> 908

Block 348:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.1 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.1 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = initial_claim^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = initial_claim^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.1
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 349 <Field>
Transition: -> 910

Block 349:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.1 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.0.1 = %RET^b1.ext_add
    field initial_claim^b0.tower_verify.0.0 = ret^2^b0.tower_verify.0.1
    field initial_claim^b1.tower_verify.0.0 = ret^2^b1.tower_verify.0.1
    field self.mle_eval.0.0 = mle_denominator.tower_verify.0.0
    u32 mle_len.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field point.mle_eval.0.0 = initial_rt.tower_verify.0.0
    u32 point_len.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.mle_eval.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.mle_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.mle_eval.0.0 = num_fanin.tower_verify.0.0
    field rp@.mle_eval = 350 <Field>
Transition: -> 912

Block 350:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.1 = %RET^b0.mle_eval
    field ret^0^b1.tower_verify.1.1 = %RET^b1.mle_eval
    field e0^b0.ext_mul.0.0 = ret^0^b0.tower_verify.1.1
    field e0^b1.ext_mul.0.0 = ret^0^b1.tower_verify.1.1
    field e1^b0.ext_mul.0.0 = alpha_denominator^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = alpha_denominator^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 351 <Field>
Transition: -> 941

Block 351:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.1 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.1 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = initial_claim^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = initial_claim^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.1
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 352 <Field>
Transition: -> 943

Block 352:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.1 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.0.1 = %RET^b1.ext_add
    field initial_claim^b0.tower_verify.0.0 = ret^2^b0.tower_verify.0.1
    field initial_claim^b1.tower_verify.0.0 = ret^2^b1.tower_verify.0.1
Transition: -> 353

Block 353:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.2 = i.tower_verify.0.2 + 1 <U32>
Transition: 
    i.tower_verify.0.2 != num_logup_spec.tower_verify.0.0 ? -> 345 : -> 354

Block 354:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 355

Block 355:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    PointAndEval { eval: ExtField { b0: field, b1: field }, point: ExtField { b0: field, b1: field }[0] }[3 <U32> * tower_proofs^prod_spec_size.tower_verify.0.0] prod_spec_input_layer_eval.tower_verify.0.0
    PointAndEval { eval: ExtField { b0: field, b1: field }, point: ExtField { b0: field, b1: field }[0] }[3 <U32> * tower_proofs^logup_spec_size.tower_verify.0.0] logup_spec_p_input_layer_eval.tower_verify.0.0
    PointAndEval { eval: ExtField { b0: field, b1: field }, point: ExtField { b0: field, b1: field }[0] }[3 <U32> * tower_proofs^logup_spec_size.tower_verify.0.0] logup_spec_q_input_layer_eval.tower_verify.0.0
    u32 expected_max_round.tower_verify.0.0 = 0 <U32>
Transition: -> 356

Block 356:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.3 = 0 <U32>
Transition: 
    i.tower_verify.0.3 != num_prod_spec.tower_verify.0.0 + num_logup_spec.tower_verify.0.0 ? -> 357 : -> 363

Block 357:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 358

Block 358:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.0.4 = expected_rounds.tower_verify.0.0[i.tower_verify.0.3]
Transition: 
    load^0.tower_verify.0.4 > expected_max_round.tower_verify.0.0 ? -> 359 : -> 360

Block 359:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.1.0 = expected_rounds.tower_verify.0.0[i.tower_verify.0.3]
    u32 expected_max_round.tower_verify.0.0 = load^0.tower_verify.1.0
Transition: -> 361

Block 360:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 361

Block 361:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 362

Block 362:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.3 = i.tower_verify.0.3 + 1 <U32>
Transition: 
    i.tower_verify.0.3 != num_prod_spec.tower_verify.0.0 + num_logup_spec.tower_verify.0.0 ? -> 357 : -> 363

Block 363:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 364

Block 364:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^point.tower_verify.0.0 = initial_rt.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.0.0 = initial_claim^b0.tower_verify.0.0
    field struct^0^eval^b1.tower_verify.0.0 = initial_claim^b1.tower_verify.0.0
    field next_rt^eval^b0.tower_verify.0.0 = struct^0^eval^b0.tower_verify.0.0
    field next_rt^eval^b1.tower_verify.0.0 = struct^0^eval^b1.tower_verify.0.0
    field next_rt^point.tower_verify.0.0 = struct^0^point.tower_verify.0.0
Transition: -> 365

Block 365:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 round.tower_verify.0.0 = 0 <U32>
Transition: 
    round.tower_verify.0.0 != expected_max_round.tower_verify.0.0 - 1 <U32> ? -> 366 : -> 486

Block 366:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 367

Block 367:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    field out_rt.tower_verify.0.0 = next_rt^point.tower_verify.0.0
    field out_claim^b0.tower_verify.0.0 = next_rt^eval^b0.tower_verify.0.0
    field out_claim^b1.tower_verify.0.0 = next_rt^eval^b1.tower_verify.0.0
    u32 rt_len.tower_verify.0.0 = round.tower_verify.0.0 + 1 <U32> * log2_num_fanin.tower_verify.0.0
    field[0 <U32>] array^0.tower_verify.0.2
    field load^0.tower_verify.0.5 = tower_proofs^proofs.tower_verify.0.0[round.tower_verify.0.0]
    field struct^0^points.tower_verify.0.0 = array^0.tower_verify.0.2
    field struct^0^proofs.tower_verify.0.0 = load^0.tower_verify.0.5
    u32 struct^1^max_degree.tower_verify.0.0 = num_fanin.tower_verify.0.0 + 1 <U32>
    u32 struct^1^num_variables.tower_verify.0.0 = rt_len.tower_verify.0.0
    field claimed_sum^b0.verify_sumcheck.0.0 = out_claim^b0.tower_verify.0.0
    field claimed_sum^b1.verify_sumcheck.0.0 = out_claim^b1.tower_verify.0.0
    field proof^points.verify_sumcheck.0.0 = struct^0^points.tower_verify.0.0
    field proof^proofs.verify_sumcheck.0.0 = struct^0^proofs.tower_verify.0.0
    u32 aux_info^max_degree.verify_sumcheck.0.0 = struct^1^max_degree.tower_verify.0.0
    u32 aux_info^num_variables.verify_sumcheck.0.0 = struct^1^num_variables.tower_verify.0.0
    field t^permutation^state.verify_sumcheck.0.0 = t^permutation^state.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.verify_sumcheck.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.verify_sumcheck.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.verify_sumcheck.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.verify_sumcheck.0.0 = num_fanin.tower_verify.0.0
    field rp@.verify_sumcheck = 368 <Field>
Transition: -> 298

Block 368:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^sc^expected_evaluation^b0.tower_verify.0.0 = %RET^sc^expected_evaluation^b0.verify_sumcheck
    field ret^0^sc^expected_evaluation^b1.tower_verify.0.0 = %RET^sc^expected_evaluation^b1.verify_sumcheck
    field ret^0^sc^point.tower_verify.0.0 = %RET^sc^point.verify_sumcheck
    field ret^0^t^permutation^state.tower_verify.0.0 = %RET^t^permutation^state.verify_sumcheck
    field sc_t^sc^expected_evaluation^b0.tower_verify.0.0 = ret^0^sc^expected_evaluation^b0.tower_verify.0.0
    field sc_t^sc^expected_evaluation^b1.tower_verify.0.0 = ret^0^sc^expected_evaluation^b1.tower_verify.0.0
    field sc_t^sc^point.tower_verify.0.0 = ret^0^sc^point.tower_verify.0.0
    field sc_t^t^permutation^state.tower_verify.0.0 = ret^0^t^permutation^state.tower_verify.0.0
    field sumcheck_claim^expected_evaluation^b0.tower_verify.0.0 = sc_t^sc^expected_evaluation^b0.tower_verify.0.0
    field sumcheck_claim^expected_evaluation^b1.tower_verify.0.0 = sc_t^sc^expected_evaluation^b1.tower_verify.0.0
    field sumcheck_claim^point.tower_verify.0.0 = sc_t^sc^point.tower_verify.0.0
    field t^permutation^state.tower_verify.0.0 = sc_t^t^permutation^state.tower_verify.0.0
    ExtField { b0: field, b1: field }[2 <U32> * rt_len.tower_verify.0.0] rt.tower_verify.0.0
Transition: -> 369

Block 369:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.4 = 0 <U32>
Transition: 
    i.tower_verify.0.4 != rt_len.tower_verify.0.0 ? -> 370 : -> 373

Block 370:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 371

Block 371:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^elements^b0.tower_verify.0.0 = sumcheck_claim^point.tower_verify.0.0[2 <U32> * i.tower_verify.0.4]
    field load^0^elements^b1.tower_verify.0.0 = sumcheck_claim^point.tower_verify.0.0[2 <U32> * i.tower_verify.0.4 + 1 <U32>]
    field c^elements^b0.tower_verify.0.0 = load^0^elements^b0.tower_verify.0.0
    field c^elements^b1.tower_verify.0.0 = load^0^elements^b1.tower_verify.0.0
    rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.4] = c^elements^b0.tower_verify.0.0 <field>
    rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.4 + 1 <U32>] = c^elements^b1.tower_verify.0.0 <field>
Transition: -> 372

Block 372:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.4 = i.tower_verify.0.4 + 1 <U32>
Transition: 
    i.tower_verify.0.4 != rt_len.tower_verify.0.0 ? -> 370 : -> 373

Block 373:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 374

Block 374:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 375 <Field>
Transition: -> 945

Block 375:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.2 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.1.2 = %RET^b1.to_ext
    field expected_evaluation^b0.tower_verify.0.0 = ret^0^b0.tower_verify.1.2
    field expected_evaluation^b1.tower_verify.0.0 = ret^0^b1.tower_verify.1.2
Transition: -> 376

Block 376:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 spec_index.tower_verify.0.0 = 0 <U32>
Transition: 
    spec_index.tower_verify.0.0 != num_prod_spec.tower_verify.0.0 ? -> 377 : -> 395

Block 377:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 378

Block 378:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.1.2 = expected_rounds.tower_verify.0.0[spec_index.tower_verify.0.0]
Transition: 
    round.tower_verify.0.0 < load^0.tower_verify.1.2 - 1 <U32> ? -> 379 : -> 392

Block 379:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.2 = alpha_pows.tower_verify.0.0[2 <U32> * spec_index.tower_verify.0.0]
    field load^0^b1.tower_verify.0.2 = alpha_pows.tower_verify.0.0[2 <U32> * spec_index.tower_verify.0.0 + 1 <U32>]
    field alpha^b0.tower_verify.0.1 = load^0^b0.tower_verify.0.2
    field alpha^b1.tower_verify.0.1 = load^0^b1.tower_verify.0.2
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 380 <Field>
Transition: -> 947

Block 380:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.0 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.2.0 = %RET^b1.to_ext
    field prod^b0.tower_verify.0.0 = ret^0^b0.tower_verify.2.0
    field prod^b1.tower_verify.0.0 = ret^0^b1.tower_verify.2.0
Transition: -> 381

Block 381:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.5 = 0 <U32>
Transition: 
    i.tower_verify.0.5 != num_fanin.tower_verify.0.0 ? -> 382 : -> 386

Block 382:
Func: tower_verify, Scope: 9
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 383

Block 383:
Func: tower_verify, Scope: 10
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.tower_verify.3.0 = tower_proofs^prod_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.0]
    field load^1.tower_verify.0.1 = load^0.tower_verify.3.0[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.0 = load^1.tower_verify.0.1[2 <U32> * i.tower_verify.0.5]
    field load^2^b1.tower_verify.0.0 = load^1.tower_verify.0.1[2 <U32> * i.tower_verify.0.5 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = prod^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = prod^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = load^2^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = load^2^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 384 <Field>
Transition: -> 949

Block 384:
Func: tower_verify, Scope: 10
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.3.0 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.3.0 = %RET^b1.ext_mul
    field prod^b0.tower_verify.0.0 = ret^0^b0.tower_verify.3.0
    field prod^b1.tower_verify.0.0 = ret^0^b1.tower_verify.3.0
Transition: -> 385

Block 385:
Func: tower_verify, Scope: 9
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.5 = i.tower_verify.0.5 + 1 <U32>
Transition: 
    i.tower_verify.0.5 != num_fanin.tower_verify.0.0 ? -> 382 : -> 386

Block 386:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 387

Block 387:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 len.eq_eval.0.0 = rt_len.tower_verify.0.0
    field x.eq_eval.0.0 = out_rt.tower_verify.0.0
    field y.eq_eval.0.0 = rt.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.eq_eval.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.eq_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.eq_eval.0.0 = num_fanin.tower_verify.0.0
    field rp@.eq_eval = 388 <Field>
Transition: -> 951

Block 388:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.0 = %RET^b0.eq_eval
    field ret^0^b1.tower_verify.2.0 = %RET^b1.eq_eval
    field e0^b0.ext_mul.0.0 = ret^0^b0.tower_verify.2.0
    field e0^b1.ext_mul.0.0 = ret^0^b1.tower_verify.2.0
    field e1^b0.ext_mul.0.0 = alpha^b0.tower_verify.0.1
    field e1^b1.ext_mul.0.0 = alpha^b1.tower_verify.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 389 <Field>
Transition: -> 983

Block 389:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.2 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.2 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = ret^1^b0.tower_verify.0.2
    field e0^b1.ext_mul.0.0 = ret^1^b1.tower_verify.0.2
    field e1^b0.ext_mul.0.0 = prod^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = prod^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 390 <Field>
Transition: -> 985

Block 390:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.2 = %RET^b0.ext_mul
    field ret^2^b1.tower_verify.0.2 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = expected_evaluation^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = expected_evaluation^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^2^b0.tower_verify.0.2
    field e1^b1.ext_add.0.0 = ret^2^b1.tower_verify.0.2
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 391 <Field>
Transition: -> 987

Block 391:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.tower_verify.0.0 = %RET^b0.ext_add
    field ret^3^b1.tower_verify.0.0 = %RET^b1.ext_add
    field expected_evaluation^b0.tower_verify.0.0 = ret^3^b0.tower_verify.0.0
    field expected_evaluation^b1.tower_verify.0.0 = ret^3^b1.tower_verify.0.0
Transition: -> 393

Block 392:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 393

Block 393:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 394

Block 394:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    spec_index.tower_verify.0.0 = spec_index.tower_verify.0.0 + 1 <U32>
Transition: 
    spec_index.tower_verify.0.0 != num_prod_spec.tower_verify.0.0 ? -> 377 : -> 395

Block 395:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 396

Block 396:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 397

Block 397:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 spec_index.tower_verify.0.1 = 0 <U32>
Transition: 
    spec_index.tower_verify.0.1 != num_logup_spec.tower_verify.0.0 ? -> 398 : -> 414

Block 398:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 399

Block 399:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.1.3 = expected_rounds.tower_verify.0.0[num_prod_spec.tower_verify.0.0 + spec_index.tower_verify.0.1]
Transition: 
    round.tower_verify.0.0 < load^0.tower_verify.1.3 - 1 <U32> ? -> 400 : -> 411

Block 400:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 20
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.3 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.1]
    field load^0^b1.tower_verify.0.3 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.1 + 1 <U32>]
    field alpha_numerator^b0.tower_verify.0.1 = load^0^b0.tower_verify.0.3
    field alpha_numerator^b1.tower_verify.0.1 = load^0^b1.tower_verify.0.3
    field load^0^b0.tower_verify.0.3 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.1 + 1 <U32>]
    field load^0^b1.tower_verify.0.3 = alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.1 + 1 <U32> + 1 <U32>]
    field alpha_denominator^b0.tower_verify.0.1 = load^0^b0.tower_verify.0.3
    field alpha_denominator^b1.tower_verify.0.1 = load^0^b1.tower_verify.0.3
    field load^0.tower_verify.2.2 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.1]
    field load^1.tower_verify.0.2 = load^0.tower_verify.2.2[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 0 <Field>]
    field load^2^b1.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 0 <Field> + 1 <Field>]
    field p1^b0.tower_verify.0.0 = load^2^b0.tower_verify.0.1
    field p1^b1.tower_verify.0.0 = load^2^b1.tower_verify.0.1
    field load^0.tower_verify.2.2 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.1]
    field load^1.tower_verify.0.2 = load^0.tower_verify.2.2[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 1 <Field>]
    field load^2^b1.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 1 <Field> + 1 <Field>]
    field p2^b0.tower_verify.0.0 = load^2^b0.tower_verify.0.1
    field p2^b1.tower_verify.0.0 = load^2^b1.tower_verify.0.1
    field load^0.tower_verify.2.2 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.1]
    field load^1.tower_verify.0.2 = load^0.tower_verify.2.2[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 2 <Field>]
    field load^2^b1.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 2 <Field> + 1 <Field>]
    field q1^b0.tower_verify.0.0 = load^2^b0.tower_verify.0.1
    field q1^b1.tower_verify.0.0 = load^2^b1.tower_verify.0.1
    field load^0.tower_verify.2.2 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.1]
    field load^1.tower_verify.0.2 = load^0.tower_verify.2.2[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 3 <Field>]
    field load^2^b1.tower_verify.0.1 = load^1.tower_verify.0.2[2 <Field> * 3 <Field> + 1 <Field>]
    field q2^b0.tower_verify.0.0 = load^2^b0.tower_verify.0.1
    field q2^b1.tower_verify.0.0 = load^2^b1.tower_verify.0.1
    u32 len.eq_eval.0.0 = rt_len.tower_verify.0.0
    field x.eq_eval.0.0 = out_rt.tower_verify.0.0
    field y.eq_eval.0.0 = rt.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.eq_eval.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.eq_eval.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.eq_eval.0.0 = num_fanin.tower_verify.0.0
    field rp@.eq_eval = 401 <Field>
Transition: -> 989

Block 401:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.1 = %RET^b0.eq_eval
    field ret^0^b1.tower_verify.2.1 = %RET^b1.eq_eval
    field e0^b0.ext_mul.0.0 = p1^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = p1^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = q2^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = q2^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 402 <Field>
Transition: -> 1021

Block 402:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.3 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.3 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = p2^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = p2^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = q1^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = q1^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 403 <Field>
Transition: -> 1023

Block 403:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.3 = %RET^b0.ext_mul
    field ret^2^b1.tower_verify.0.3 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.3
    field e0^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.3
    field e1^b0.ext_add.0.0 = ret^2^b0.tower_verify.0.3
    field e1^b1.ext_add.0.0 = ret^2^b1.tower_verify.0.3
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 404 <Field>
Transition: -> 1025

Block 404:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.tower_verify.0.1 = %RET^b0.ext_add
    field ret^3^b1.tower_verify.0.1 = %RET^b1.ext_add
    field e0^b0.ext_mul.0.0 = alpha_numerator^b0.tower_verify.0.1
    field e0^b1.ext_mul.0.0 = alpha_numerator^b1.tower_verify.0.1
    field e1^b0.ext_mul.0.0 = ret^3^b0.tower_verify.0.1
    field e1^b1.ext_mul.0.0 = ret^3^b1.tower_verify.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 405 <Field>
Transition: -> 1027

Block 405:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.tower_verify.0.0 = %RET^b0.ext_mul
    field ret^4^b1.tower_verify.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = q1^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = q1^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = q2^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = q2^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 406 <Field>
Transition: -> 1029

Block 406:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.tower_verify.0.0 = %RET^b0.ext_mul
    field ret^5^b1.tower_verify.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = alpha_denominator^b0.tower_verify.0.1
    field e0^b1.ext_mul.0.0 = alpha_denominator^b1.tower_verify.0.1
    field e1^b0.ext_mul.0.0 = ret^5^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = ret^5^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 407 <Field>
Transition: -> 1031

Block 407:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^6^b0.tower_verify.0.0 = %RET^b0.ext_mul
    field ret^6^b1.tower_verify.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^4^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = ret^4^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^6^b0.tower_verify.0.0
    field e1^b1.ext_add.0.0 = ret^6^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 408 <Field>
Transition: -> 1033

Block 408:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^7^b0.tower_verify.0.0 = %RET^b0.ext_add
    field ret^7^b1.tower_verify.0.0 = %RET^b1.ext_add
    field e0^b0.ext_mul.0.0 = ret^0^b0.tower_verify.2.1
    field e0^b1.ext_mul.0.0 = ret^0^b1.tower_verify.2.1
    field e1^b0.ext_mul.0.0 = ret^7^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = ret^7^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 409 <Field>
Transition: -> 1035

Block 409:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^8^b0.tower_verify.0.0 = %RET^b0.ext_mul
    field ret^8^b1.tower_verify.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = expected_evaluation^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = expected_evaluation^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^8^b0.tower_verify.0.0
    field e1^b1.ext_add.0.0 = ret^8^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 410 <Field>
Transition: -> 1037

Block 410:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^9^b0.tower_verify.0.0 = %RET^b0.ext_add
    field ret^9^b1.tower_verify.0.0 = %RET^b1.ext_add
    field expected_evaluation^b0.tower_verify.0.0 = ret^9^b0.tower_verify.0.0
    field expected_evaluation^b1.tower_verify.0.0 = ret^9^b1.tower_verify.0.0
Transition: -> 412

Block 411:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 412

Block 412:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 413

Block 413:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    spec_index.tower_verify.0.1 = spec_index.tower_verify.0.1 + 1 <U32>
Transition: 
    spec_index.tower_verify.0.1 != num_logup_spec.tower_verify.0.0 ? -> 398 : -> 414

Block 414:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 415

Block 415:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field e0^b0.ext_eq.0.0 = expected_evaluation^b0.tower_verify.0.0
    field e0^b1.ext_eq.0.0 = expected_evaluation^b1.tower_verify.0.0
    field e1^b0.ext_eq.0.0 = sumcheck_claim^expected_evaluation^b0.tower_verify.0.0
    field e1^b1.ext_eq.0.0 = sumcheck_claim^expected_evaluation^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_eq.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_eq.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_eq.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_eq.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_eq = 416 <Field>
Transition: -> 1039

Block 416:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.tower_verify.1.5 = %RET.ext_eq
    assert ret^0.tower_verify.1.5 == 1 <Field>
    ExtField { b0: field, b1: field }[2 <U32> * log2_num_fanin.tower_verify.0.0] r_merge.tower_verify.0.0
    ExtField { b0: field, b1: field }[2 <U32> * rt_len.tower_verify.0.0 + log2_num_fanin.tower_verify.0.0] rt_prime.tower_verify.0.0
Transition: -> 417

Block 417:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.6 = 0 <U32>
Transition: 
    i.tower_verify.0.6 != rt_len.tower_verify.0.0 ? -> 418 : -> 421

Block 418:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 419

Block 419:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.4 = rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.6]
    field load^0^b1.tower_verify.0.4 = rt.tower_verify.0.0[2 <U32> * i.tower_verify.0.6 + 1 <U32>]
    rt_prime.tower_verify.0.0[2 <U32> * i.tower_verify.0.6] = load^0^b0.tower_verify.0.4 <field>
    rt_prime.tower_verify.0.0[2 <U32> * i.tower_verify.0.6 + 1 <U32>] = load^0^b1.tower_verify.0.4 <field>
Transition: -> 420

Block 420:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.6 = i.tower_verify.0.6 + 1 <U32>
Transition: 
    i.tower_verify.0.6 != rt_len.tower_verify.0.0 ? -> 418 : -> 421

Block 421:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 422

Block 422:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 423

Block 423:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.7 = 0 <U32>
Transition: 
    i.tower_verify.0.7 != log2_num_fanin.tower_verify.0.0 ? -> 424 : -> 430

Block 424:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 425

Block 425:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[1 <U32>] array^0.tower_verify.1.0
    field init^0^0.tower_verify.0.2 = 435527247213 <Field>
    u32 index@.tower_verify.0.0 = 0 <U32>
Transition: 
    index@.tower_verify.0.0 != 1 <U32> ? -> 426 : -> 427

Block 426:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.tower_verify.1.0[index@.tower_verify.0.0] = init^0^0.tower_verify.0.2 <field>, init
    index@.tower_verify.0.0 = index@.tower_verify.0.0 + 1 <U32>
Transition: 
    index@.tower_verify.0.0 != 1 <U32> ? -> 426 : -> 427

Block 427:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^permutation^state.get_and_append_challenge.0.0 = t^permutation^state.tower_verify.0.0
    u32 label_len.get_and_append_challenge.0.0 = 1 <U32>
    field label.get_and_append_challenge.0.0 = array^0.tower_verify.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.get_and_append_challenge.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.get_and_append_challenge.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.get_and_append_challenge.0.0 = num_fanin.tower_verify.0.0
    field rp@.get_and_append_challenge = 428 <Field>
Transition: -> 530

Block 428:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge^elements^b0.tower_verify.0.1 = %RET^challenge^elements^b0.get_and_append_challenge
    field ret^0^challenge^elements^b1.tower_verify.0.1 = %RET^challenge^elements^b1.get_and_append_challenge
    field ret^0^transcript^permutation^state.tower_verify.1.1 = %RET^transcript^permutation^state.get_and_append_challenge
    field t0^challenge^elements^b0.tower_verify.0.1 = ret^0^challenge^elements^b0.tower_verify.0.1
    field t0^challenge^elements^b1.tower_verify.0.1 = ret^0^challenge^elements^b1.tower_verify.0.1
    field t0^transcript^permutation^state.tower_verify.0.1 = ret^0^transcript^permutation^state.tower_verify.1.1
    field t^permutation^state.tower_verify.0.0 = t0^transcript^permutation^state.tower_verify.0.1
    r_merge.tower_verify.0.0[2 <U32> * i.tower_verify.0.7] = t0^challenge^elements^b0.tower_verify.0.1 <field>
    r_merge.tower_verify.0.0[2 <U32> * i.tower_verify.0.7 + 1 <U32>] = t0^challenge^elements^b1.tower_verify.0.1 <field>
    rt_prime.tower_verify.0.0[2 <U32> * rt_len.tower_verify.0.0 + i.tower_verify.0.7] = t0^challenge^elements^b0.tower_verify.0.1 <field>
    rt_prime.tower_verify.0.0[2 <U32> * rt_len.tower_verify.0.0 + i.tower_verify.0.7 + 1 <U32>] = t0^challenge^elements^b1.tower_verify.0.1 <field>
Transition: -> 429

Block 429:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.7 = i.tower_verify.0.7 + 1 <U32>
Transition: 
    i.tower_verify.0.7 != log2_num_fanin.tower_verify.0.0 ? -> 424 : -> 430

Block 430:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 431

Block 431:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 r_len.build_eq_x_r_vec_sequential.0.0 = log2_num_fanin.tower_verify.0.0
    u32 r_len_pow2.build_eq_x_r_vec_sequential.0.0 = num_fanin.tower_verify.0.0
    field r.build_eq_x_r_vec_sequential.0.0 = r_merge.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.build_eq_x_r_vec_sequential.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.build_eq_x_r_vec_sequential.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.build_eq_x_r_vec_sequential.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.build_eq_x_r_vec_sequential.0.0 = num_fanin.tower_verify.0.0
    field rp@.build_eq_x_r_vec_sequential = 432 <Field>
Transition: -> 59

Block 432:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.tower_verify.1.5 = %RET.build_eq_x_r_vec_sequential
    field coeffs.tower_verify.0.0 = ret^0.tower_verify.1.5
    u32 size.get_challenge_pows.0.0 = num_prod_spec.tower_verify.0.0 + num_logup_spec.tower_verify.0.0 * 2 <U32>
    field transcript^permutation^state.get_challenge_pows.0.0 = t^permutation^state.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.get_challenge_pows.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.get_challenge_pows.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.get_challenge_pows.0.0 = num_fanin.tower_verify.0.0
    field rp@.get_challenge_pows = 433 <Field>
Transition: -> 534

Block 433:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge_pows.tower_verify.1.0 = %RET^challenge_pows.get_challenge_pows
    field ret^0^transcript^permutation^state.tower_verify.1.2 = %RET^transcript^permutation^state.get_challenge_pows
    field t_cp^challenge_pows.tower_verify.1.0 = ret^0^challenge_pows.tower_verify.1.0
    field t_cp^transcript^permutation^state.tower_verify.1.0 = ret^0^transcript^permutation^state.tower_verify.1.2
    field t^permutation^state.tower_verify.0.0 = t_cp^transcript^permutation^state.tower_verify.1.0
    field next_alpha_pows.tower_verify.0.0 = t_cp^challenge_pows.tower_verify.1.0
    u32 next_round.tower_verify.0.0 = round.tower_verify.0.0 + 1 <U32>
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 434 <Field>
Transition: -> 1041

Block 434:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.2 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.1.2 = %RET^b1.to_ext
    field next_prod_spec_evals^b0.tower_verify.0.0 = ret^0^b0.tower_verify.1.2
    field next_prod_spec_evals^b1.tower_verify.0.0 = ret^0^b1.tower_verify.1.2
Transition: -> 435

Block 435:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 spec_index.tower_verify.0.2 = 0 <U32>
Transition: 
    spec_index.tower_verify.0.2 != num_prod_spec.tower_verify.0.0 ? -> 436 : -> 457

Block 436:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 437

Block 437:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.1.5 = expected_rounds.tower_verify.0.0[spec_index.tower_verify.0.2]
    u32 max_round.tower_verify.0.0 = load^0.tower_verify.1.5
Transition: 
    round.tower_verify.0.0 < max_round.tower_verify.0.0 - 1 <U32> ? -> 438 : -> 453

Block 438:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.5 = next_alpha_pows.tower_verify.0.0[2 <U32> * spec_index.tower_verify.0.2]
    field load^0^b1.tower_verify.0.5 = next_alpha_pows.tower_verify.0.0[2 <U32> * spec_index.tower_verify.0.2 + 1 <U32>]
    field alpha^b0.tower_verify.0.2 = load^0^b0.tower_verify.0.5
    field alpha^b1.tower_verify.0.2 = load^0^b1.tower_verify.0.5
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 439 <Field>
Transition: -> 1043

Block 439:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.2 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.2.2 = %RET^b1.to_ext
    field evals^b0.tower_verify.0.0 = ret^0^b0.tower_verify.2.2
    field evals^b1.tower_verify.0.0 = ret^0^b1.tower_verify.2.2
Transition: -> 440

Block 440:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.tower_verify.0.8 = 0 <U32>
Transition: 
    i.tower_verify.0.8 != num_fanin.tower_verify.0.0 ? -> 441 : -> 446

Block 441:
Func: tower_verify, Scope: 9
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 442

Block 442:
Func: tower_verify, Scope: 10
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.tower_verify.3.1 = tower_proofs^prod_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.2]
    field load^1.tower_verify.0.3 = load^0.tower_verify.3.1[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.2 = load^1.tower_verify.0.3[2 <U32> * i.tower_verify.0.8]
    field load^2^b1.tower_verify.0.2 = load^1.tower_verify.0.3[2 <U32> * i.tower_verify.0.8 + 1 <U32>]
    field load^3^b0.tower_verify.0.1 = coeffs.tower_verify.0.0[2 <U32> * i.tower_verify.0.8]
    field load^3^b1.tower_verify.0.1 = coeffs.tower_verify.0.0[2 <U32> * i.tower_verify.0.8 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^2^b0.tower_verify.0.2
    field e0^b1.ext_mul.0.0 = load^2^b1.tower_verify.0.2
    field e1^b0.ext_mul.0.0 = load^3^b0.tower_verify.0.1
    field e1^b1.ext_mul.0.0 = load^3^b1.tower_verify.0.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 443 <Field>
Transition: -> 1045

Block 443:
Func: tower_verify, Scope: 10
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.3.1 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.3.1 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = evals^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = evals^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^0^b0.tower_verify.3.1
    field e1^b1.ext_add.0.0 = ret^0^b1.tower_verify.3.1
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 444 <Field>
Transition: -> 1047

Block 444:
Func: tower_verify, Scope: 10
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.4 = %RET^b0.ext_add
    field ret^1^b1.tower_verify.0.4 = %RET^b1.ext_add
    field evals^b0.tower_verify.0.0 = ret^1^b0.tower_verify.0.4
    field evals^b1.tower_verify.0.0 = ret^1^b1.tower_verify.0.4
Transition: -> 445

Block 445:
Func: tower_verify, Scope: 9
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.tower_verify.0.8 = i.tower_verify.0.8 + 1 <U32>
Transition: 
    i.tower_verify.0.8 != num_fanin.tower_verify.0.0 ? -> 441 : -> 446

Block 446:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 447

Block 447:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^point.tower_verify.1.0 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.0 = evals^b0.tower_verify.0.0
    field struct^0^eval^b1.tower_verify.1.0 = evals^b1.tower_verify.0.0
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2] = struct^0^eval^b0.tower_verify.1.0 <field>
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.0 <field>
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2 + 2 <U32>] = struct^0^point.tower_verify.1.0 <field>
Transition: 
    next_round.tower_verify.0.0 < max_round.tower_verify.0.0 - 1 <U32> ? -> 448 : -> 451

Block 448:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field e0^b0.ext_mul.0.0 = alpha^b0.tower_verify.0.2
    field e0^b1.ext_mul.0.0 = alpha^b1.tower_verify.0.2
    field e1^b0.ext_mul.0.0 = evals^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = evals^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 449 <Field>
Transition: -> 1049

Block 449:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.3.2 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.3.2 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = next_prod_spec_evals^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = next_prod_spec_evals^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^0^b0.tower_verify.3.2
    field e1^b1.ext_add.0.0 = ret^0^b1.tower_verify.3.2
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 450 <Field>
Transition: -> 1051

Block 450:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.5 = %RET^b0.ext_add
    field ret^1^b1.tower_verify.0.5 = %RET^b1.ext_add
    field next_prod_spec_evals^b0.tower_verify.0.0 = ret^1^b0.tower_verify.0.5
    field next_prod_spec_evals^b1.tower_verify.0.0 = ret^1^b1.tower_verify.0.5
Transition: -> 452

Block 451:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 452

Block 452:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 455

Block 453:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 454 <Field>
Transition: -> 1053

Block 454:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.3 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.2.3 = %RET^b1.to_ext
    field struct^0^point.tower_verify.1.1 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.1 = ret^0^b0.tower_verify.2.3
    field struct^0^eval^b1.tower_verify.1.1 = ret^0^b1.tower_verify.2.3
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2] = struct^0^eval^b0.tower_verify.1.1 <field>
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.1 <field>
    prod_spec_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.2 + 2 <U32>] = struct^0^point.tower_verify.1.1 <field>
Transition: -> 455

Block 455:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 456

Block 456:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    spec_index.tower_verify.0.2 = spec_index.tower_verify.0.2 + 1 <U32>
Transition: 
    spec_index.tower_verify.0.2 != num_prod_spec.tower_verify.0.0 ? -> 436 : -> 457

Block 457:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 458

Block 458:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 459 <Field>
Transition: -> 1055

Block 459:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.2 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.1.2 = %RET^b1.to_ext
    field next_logup_spec_evals^b0.tower_verify.0.0 = ret^0^b0.tower_verify.1.2
    field next_logup_spec_evals^b1.tower_verify.0.0 = ret^0^b1.tower_verify.1.2
Transition: -> 460

Block 460:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 spec_index.tower_verify.0.3 = 0 <U32>
Transition: 
    spec_index.tower_verify.0.3 != num_logup_spec.tower_verify.0.0 ? -> 461 : -> 482

Block 461:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 462

Block 462:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 load^0.tower_verify.1.6 = expected_rounds.tower_verify.0.0[num_prod_spec.tower_verify.0.0 + spec_index.tower_verify.0.3]
    u32 max_round.tower_verify.0.1 = load^0.tower_verify.1.6
Transition: 
    round.tower_verify.0.0 < max_round.tower_verify.0.1 - 1 <U32> ? -> 463 : -> 477

Block 463:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 10
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.tower_verify.0.6 = next_alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.3]
    field load^0^b1.tower_verify.0.6 = next_alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.3 + 1 <U32>]
    field alpha_numerator^b0.tower_verify.0.2 = load^0^b0.tower_verify.0.6
    field alpha_numerator^b1.tower_verify.0.2 = load^0^b1.tower_verify.0.6
    field load^0^b0.tower_verify.0.6 = next_alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.3 + 1 <U32>]
    field load^0^b1.tower_verify.0.6 = next_alpha_pows.tower_verify.0.0[2 <U32> * num_prod_spec.tower_verify.0.0 + 2 <U32> * spec_index.tower_verify.0.3 + 1 <U32> + 1 <U32>]
    field alpha_denominator^b0.tower_verify.0.2 = load^0^b0.tower_verify.0.6
    field alpha_denominator^b1.tower_verify.0.2 = load^0^b1.tower_verify.0.6
    field load^0.tower_verify.2.5 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.3]
    field load^1.tower_verify.0.4 = load^0.tower_verify.2.5[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.3 = load^1.tower_verify.0.4[2 <Field> * 0 <Field>]
    field load^2^b1.tower_verify.0.3 = load^1.tower_verify.0.4[2 <Field> * 0 <Field> + 1 <Field>]
    field load^3^b0.tower_verify.0.2 = coeffs.tower_verify.0.0[2 <Field> * 0 <Field>]
    field load^3^b1.tower_verify.0.2 = coeffs.tower_verify.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field e0^b0.ext_mul.0.0 = load^2^b0.tower_verify.0.3
    field e0^b1.ext_mul.0.0 = load^2^b1.tower_verify.0.3
    field e1^b0.ext_mul.0.0 = load^3^b0.tower_verify.0.2
    field e1^b1.ext_mul.0.0 = load^3^b1.tower_verify.0.2
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 464 <Field>
Transition: -> 1057

Block 464:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.4 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.2.4 = %RET^b1.ext_mul
    field load^4.tower_verify.0.0 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.3]
    field load^5.tower_verify.0.0 = load^4.tower_verify.0.0[round.tower_verify.0.0]
    field load^6^b0.tower_verify.0.0 = load^5.tower_verify.0.0[2 <Field> * 1 <Field>]
    field load^6^b1.tower_verify.0.0 = load^5.tower_verify.0.0[2 <Field> * 1 <Field> + 1 <Field>]
    field load^7^b0.tower_verify.0.0 = coeffs.tower_verify.0.0[2 <Field> * 1 <Field>]
    field load^7^b1.tower_verify.0.0 = coeffs.tower_verify.0.0[2 <Field> * 1 <Field> + 1 <Field>]
    field e0^b0.ext_mul.0.0 = load^6^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = load^6^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = load^7^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = load^7^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 465 <Field>
Transition: -> 1059

Block 465:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.6 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.6 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^0^b0.tower_verify.2.4
    field e0^b1.ext_add.0.0 = ret^0^b1.tower_verify.2.4
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.6
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.6
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 466 <Field>
Transition: -> 1061

Block 466:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.4 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.0.4 = %RET^b1.ext_add
    field p_evals^b0.tower_verify.0.0 = ret^2^b0.tower_verify.0.4
    field p_evals^b1.tower_verify.0.0 = ret^2^b1.tower_verify.0.4
    field load^0.tower_verify.2.5 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.3]
    field load^1.tower_verify.0.4 = load^0.tower_verify.2.5[round.tower_verify.0.0]
    field load^2^b0.tower_verify.0.3 = load^1.tower_verify.0.4[2 <Field> * 2 <Field>]
    field load^2^b1.tower_verify.0.3 = load^1.tower_verify.0.4[2 <Field> * 2 <Field> + 1 <Field>]
    field load^3^b0.tower_verify.0.2 = coeffs.tower_verify.0.0[2 <Field> * 0 <Field>]
    field load^3^b1.tower_verify.0.2 = coeffs.tower_verify.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field e0^b0.ext_mul.0.0 = load^2^b0.tower_verify.0.3
    field e0^b1.ext_mul.0.0 = load^2^b1.tower_verify.0.3
    field e1^b0.ext_mul.0.0 = load^3^b0.tower_verify.0.2
    field e1^b1.ext_mul.0.0 = load^3^b1.tower_verify.0.2
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 467 <Field>
Transition: -> 1063

Block 467:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.4 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.2.4 = %RET^b1.ext_mul
    field load^4.tower_verify.0.0 = tower_proofs^logup_specs_eval.tower_verify.0.0[spec_index.tower_verify.0.3]
    field load^5.tower_verify.0.0 = load^4.tower_verify.0.0[round.tower_verify.0.0]
    field load^6^b0.tower_verify.0.0 = load^5.tower_verify.0.0[2 <Field> * 3 <Field>]
    field load^6^b1.tower_verify.0.0 = load^5.tower_verify.0.0[2 <Field> * 3 <Field> + 1 <Field>]
    field load^7^b0.tower_verify.0.0 = coeffs.tower_verify.0.0[2 <Field> * 1 <Field>]
    field load^7^b1.tower_verify.0.0 = coeffs.tower_verify.0.0[2 <Field> * 1 <Field> + 1 <Field>]
    field e0^b0.ext_mul.0.0 = load^6^b0.tower_verify.0.0
    field e0^b1.ext_mul.0.0 = load^6^b1.tower_verify.0.0
    field e1^b0.ext_mul.0.0 = load^7^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = load^7^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 468 <Field>
Transition: -> 1065

Block 468:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.0.6 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.0.6 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^0^b0.tower_verify.2.4
    field e0^b1.ext_add.0.0 = ret^0^b1.tower_verify.2.4
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.0.6
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.0.6
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 469 <Field>
Transition: -> 1067

Block 469:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 6
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.0.4 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.0.4 = %RET^b1.ext_add
    field q_evals^b0.tower_verify.0.0 = ret^2^b0.tower_verify.0.4
    field q_evals^b1.tower_verify.0.0 = ret^2^b1.tower_verify.0.4
    field struct^0^point.tower_verify.1.2 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.2 = p_evals^b0.tower_verify.0.0
    field struct^0^eval^b1.tower_verify.1.2 = p_evals^b1.tower_verify.0.0
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3] = struct^0^eval^b0.tower_verify.1.2 <field>
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.2 <field>
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 2 <U32>] = struct^0^point.tower_verify.1.2 <field>
    field struct^0^point.tower_verify.1.2 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.2 = q_evals^b0.tower_verify.0.0
    field struct^0^eval^b1.tower_verify.1.2 = q_evals^b1.tower_verify.0.0
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3] = struct^0^eval^b0.tower_verify.1.2 <field>
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.2 <field>
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 2 <U32>] = struct^0^point.tower_verify.1.2 <field>
Transition: 
    next_round.tower_verify.0.0 < max_round.tower_verify.0.1 - 1 <U32> ? -> 470 : -> 475

Block 470:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field e0^b0.ext_mul.0.0 = alpha_numerator^b0.tower_verify.0.2
    field e0^b1.ext_mul.0.0 = alpha_numerator^b1.tower_verify.0.2
    field e1^b0.ext_mul.0.0 = p_evals^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = p_evals^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 471 <Field>
Transition: -> 1069

Block 471:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.3.3 = %RET^b0.ext_mul
    field ret^0^b1.tower_verify.3.3 = %RET^b1.ext_mul
    field e0^b0.ext_mul.0.0 = alpha_denominator^b0.tower_verify.0.2
    field e0^b1.ext_mul.0.0 = alpha_denominator^b1.tower_verify.0.2
    field e1^b0.ext_mul.0.0 = q_evals^b0.tower_verify.0.0
    field e1^b1.ext_mul.0.0 = q_evals^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_mul = 472 <Field>
Transition: -> 1071

Block 472:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.tower_verify.1.0 = %RET^b0.ext_mul
    field ret^1^b1.tower_verify.1.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^0^b0.tower_verify.3.3
    field e0^b1.ext_add.0.0 = ret^0^b1.tower_verify.3.3
    field e1^b0.ext_add.0.0 = ret^1^b0.tower_verify.1.0
    field e1^b1.ext_add.0.0 = ret^1^b1.tower_verify.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 473 <Field>
Transition: -> 1073

Block 473:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.tower_verify.1.0 = %RET^b0.ext_add
    field ret^2^b1.tower_verify.1.0 = %RET^b1.ext_add
    field e0^b0.ext_add.0.0 = next_logup_spec_evals^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = next_logup_spec_evals^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = ret^2^b0.tower_verify.1.0
    field e1^b1.ext_add.0.0 = ret^2^b1.tower_verify.1.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 474 <Field>
Transition: -> 1075

Block 474:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.tower_verify.0.2 = %RET^b0.ext_add
    field ret^3^b1.tower_verify.0.2 = %RET^b1.ext_add
    field next_logup_spec_evals^b0.tower_verify.0.0 = ret^3^b0.tower_verify.0.2
    field next_logup_spec_evals^b1.tower_verify.0.0 = ret^3^b1.tower_verify.0.2
Transition: -> 476

Block 475:
Func: tower_verify, Scope: 8
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 476

Block 476:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 480

Block 477:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 478 <Field>
Transition: -> 1077

Block 478:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.5 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.2.5 = %RET^b1.to_ext
    field struct^0^point.tower_verify.1.3 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.3 = ret^0^b0.tower_verify.2.5
    field struct^0^eval^b1.tower_verify.1.3 = ret^0^b1.tower_verify.2.5
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3] = struct^0^eval^b0.tower_verify.1.3 <field>
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.3 <field>
    logup_spec_p_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 2 <U32>] = struct^0^point.tower_verify.1.3 <field>
    u32 i.to_ext.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.tower_verify.0.0
    field rp@.to_ext = 479 <Field>
Transition: -> 1079

Block 479:
Func: tower_verify, Scope: 7
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.2.5 = %RET^b0.to_ext
    field ret^0^b1.tower_verify.2.5 = %RET^b1.to_ext
    field struct^0^point.tower_verify.1.3 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.3 = ret^0^b0.tower_verify.2.5
    field struct^0^eval^b1.tower_verify.1.3 = ret^0^b1.tower_verify.2.5
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3] = struct^0^eval^b0.tower_verify.1.3 <field>
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 1 <U32>] = struct^0^eval^b1.tower_verify.1.3 <field>
    logup_spec_q_input_layer_eval.tower_verify.0.0[3 <U32> * spec_index.tower_verify.0.3 + 2 <U32>] = struct^0^point.tower_verify.1.3 <field>
Transition: -> 480

Block 480:
Func: tower_verify, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 481

Block 481:
Func: tower_verify, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    spec_index.tower_verify.0.3 = spec_index.tower_verify.0.3 + 1 <U32>
Transition: 
    spec_index.tower_verify.0.3 != num_logup_spec.tower_verify.0.0 ? -> 461 : -> 482

Block 482:
Func: tower_verify, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 483

Block 483:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field e0^b0.ext_add.0.0 = next_prod_spec_evals^b0.tower_verify.0.0
    field e0^b1.ext_add.0.0 = next_prod_spec_evals^b1.tower_verify.0.0
    field e1^b0.ext_add.0.0 = next_logup_spec_evals^b0.tower_verify.0.0
    field e1^b1.ext_add.0.0 = next_logup_spec_evals^b1.tower_verify.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.tower_verify.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.tower_verify.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.tower_verify.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.tower_verify.0.0
    field rp@.ext_add = 484 <Field>
Transition: -> 1081

Block 484:
Func: tower_verify, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.tower_verify.1.2 = %RET^b0.ext_add
    field ret^0^b1.tower_verify.1.2 = %RET^b1.ext_add
    field next_eval^b0.tower_verify.0.0 = ret^0^b0.tower_verify.1.2
    field next_eval^b1.tower_verify.0.0 = ret^0^b1.tower_verify.1.2
    field struct^0^point.tower_verify.1.4 = rt_prime.tower_verify.0.0
    field struct^0^eval^b0.tower_verify.1.4 = next_eval^b0.tower_verify.0.0
    field struct^0^eval^b1.tower_verify.1.4 = next_eval^b1.tower_verify.0.0
    field next_rt^eval^b0.tower_verify.0.0 = struct^0^eval^b0.tower_verify.1.4
    field next_rt^eval^b1.tower_verify.0.0 = struct^0^eval^b1.tower_verify.1.4
    field next_rt^point.tower_verify.0.0 = struct^0^point.tower_verify.1.4
    field alpha_pows.tower_verify.0.0 = next_alpha_pows.tower_verify.0.0
Transition: -> 485

Block 485:
Func: tower_verify, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    round.tower_verify.0.0 = round.tower_verify.0.0 + 1 <U32>
Transition: 
    round.tower_verify.0.0 != expected_max_round.tower_verify.0.0 - 1 <U32> ? -> 366 : -> 486

Block 486:
Func: tower_verify, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 487

Block 487:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^rt_tower.tower_verify.0.0 = next_rt^point.tower_verify.0.0
    field struct^0^record_evals.tower_verify.0.0 = prod_spec_input_layer_eval.tower_verify.0.0
    field struct^0^logup_p_evals.tower_verify.0.0 = logup_spec_p_input_layer_eval.tower_verify.0.0
    field struct^0^logup_q_evals.tower_verify.0.0 = logup_spec_q_input_layer_eval.tower_verify.0.0
    field %RET^logup_p_evals.tower_verify = struct^0^logup_p_evals.tower_verify.0.0
    field %RET^logup_q_evals.tower_verify = struct^0^logup_q_evals.tower_verify.0.0
    field %RET^record_evals.tower_verify = struct^0^record_evals.tower_verify.0.0
    field %RET^rt_tower.tower_verify = struct^0^rt_tower.tower_verify.0.0
Transition: -> rp@.tower_verify

Block 488:
Func: tower_verify, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.tower_verify

Block 489:
Func: append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[2 <U32>] array^0.append_challenge.0.0
    field init^0^0.append_challenge.0.0 = challenge^elements^b0.append_challenge.0.0
    field init^0^1.append_challenge.0.0 = challenge^elements^b1.append_challenge.0.0
    array^0.append_challenge.0.0[0 <U32>] = init^0^0.append_challenge.0.0 <field>, init
    array^0.append_challenge.0.0[1 <U32>] = init^0^1.append_challenge.0.0 <field>, init
    field self^state.set_from_slice.0.0 = self^permutation^state.append_challenge.0.0
    u32 elts_len.set_from_slice.0.0 = 2 <U32>
    field elts.set_from_slice.0.0 = array^0.append_challenge.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_challenge.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_challenge.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_challenge.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_challenge.0.0
    field rp@.set_from_slice = 490 <Field>
Transition: -> 1083

Block 490:
Func: append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_challenge.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_challenge.0.0 = ret^0^state.append_challenge.0.0
    field self^state.permute.0.0 = self^permutation^state.append_challenge.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_challenge.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_challenge.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_challenge.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_challenge.0.0
    field rp@.permute = 491 <Field>
Transition: -> 1091

Block 491:
Func: append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_challenge.0.0 = %RET^state.permute
    field self^permutation^state.append_challenge.0.0 = ret^0^state.append_challenge.0.0
    field %RET^permutation^state.append_challenge = self^permutation^state.append_challenge.0.0
Transition: -> rp@.append_challenge

Block 492:
Func: append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_challenge

Block 493:
Func: append_field_element, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[1 <U32>] array^0.append_field_element.0.0
    field init^0^0.append_field_element.0.0 = element.append_field_element.0.0
    u32 index@.append_field_element.0.0 = 0 <U32>
Transition: 
    index@.append_field_element.0.0 != 1 <U32> ? -> 494 : -> 495

Block 494:
Func: append_field_element, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.append_field_element.0.0[index@.append_field_element.0.0] = init^0^0.append_field_element.0.0 <field>, init
    index@.append_field_element.0.0 = index@.append_field_element.0.0 + 1 <U32>
Transition: 
    index@.append_field_element.0.0 != 1 <U32> ? -> 494 : -> 495

Block 495:
Func: append_field_element, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.set_from_slice.0.0 = self^permutation^state.append_field_element.0.0
    u32 elts_len.set_from_slice.0.0 = 1 <U32>
    field elts.set_from_slice.0.0 = array^0.append_field_element.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_field_element.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_field_element.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_field_element.0.0
    field rp@.set_from_slice = 496 <Field>
Transition: -> 1094

Block 496:
Func: append_field_element, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_field_element.0.0 = ret^0^state.append_field_element.0.0
    field self^state.permute.0.0 = self^permutation^state.append_field_element.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_field_element.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_field_element.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_field_element.0.0
    field rp@.permute = 497 <Field>
Transition: -> 1102

Block 497:
Func: append_field_element, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element.0.0 = %RET^state.permute
    field self^permutation^state.append_field_element.0.0 = ret^0^state.append_field_element.0.0
    field %RET^permutation^state.append_field_element = self^permutation^state.append_field_element.0.0
Transition: -> rp@.append_field_element

Block 498:
Func: append_field_element, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_field_element

Block 499:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[2 <U32>] array^0.append_field_element_ext.0.0
    field init^0^0.append_field_element_ext.0.0 = element^b0.append_field_element_ext.0.0
    field init^0^1.append_field_element_ext.0.0 = element^b1.append_field_element_ext.0.0
    array^0.append_field_element_ext.0.0[0 <U32>] = init^0^0.append_field_element_ext.0.0 <field>, init
    array^0.append_field_element_ext.0.0[1 <U32>] = init^0^1.append_field_element_ext.0.0 <field>, init
    field self^state.set_from_slice.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 elts_len.set_from_slice.0.0 = 2 <U32>
    field elts.set_from_slice.0.0 = array^0.append_field_element_ext.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.set_from_slice = 500 <Field>
Transition: -> 1105

Block 500:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field self^state.permute.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.permute = 501 <Field>
Transition: -> 1113

Block 501:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.permute
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field %RET^permutation^state.append_field_element_ext = self^permutation^state.append_field_element_ext.0.0
Transition: -> rp@.append_field_element_ext

Block 502:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_field_element_ext

Block 503:
Func: append_field_element_exts, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 504

Block 504:
Func: append_field_element_exts, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.append_field_element_exts.0.0 = 0 <U32>
Transition: 
    i.append_field_element_exts.0.0 != elem_len.append_field_element_exts.0.0 ? -> 505 : -> 509

Block 505:
Func: append_field_element_exts, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 506

Block 506:
Func: append_field_element_exts, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.append_field_element_exts.0.0 = elements.append_field_element_exts.0.0[2 <U32> * i.append_field_element_exts.0.0]
    field load^0^b1.append_field_element_exts.0.0 = elements.append_field_element_exts.0.0[2 <U32> * i.append_field_element_exts.0.0 + 1 <U32>]
    field self^permutation^state.append_field_element_ext.0.0 = self^permutation^state.append_field_element_exts.0.0
    field element^b0.append_field_element_ext.0.0 = load^0^b0.append_field_element_exts.0.0
    field element^b1.append_field_element_ext.0.0 = load^0^b1.append_field_element_exts.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_exts.0.0
    u32 SEL_DEGREE.append_field_element_ext.0.0 = SEL_DEGREE.append_field_element_exts.0.0
    u32 log2_num_fanin.append_field_element_ext.0.0 = log2_num_fanin.append_field_element_exts.0.0
    u32 num_fanin.append_field_element_ext.0.0 = num_fanin.append_field_element_exts.0.0
    field rp@.append_field_element_ext = 507 <Field>
Transition: -> 1116

Block 507:
Func: append_field_element_exts, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^permutation^state.append_field_element_exts.0.0 = %RET^permutation^state.append_field_element_ext
    field self^permutation^state.append_field_element_exts.0.0 = ret^0^permutation^state.append_field_element_exts.0.0
Transition: -> 508

Block 508:
Func: append_field_element_exts, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.append_field_element_exts.0.0 = i.append_field_element_exts.0.0 + 1 <U32>
Transition: 
    i.append_field_element_exts.0.0 != elem_len.append_field_element_exts.0.0 ? -> 505 : -> 509

Block 509:
Func: append_field_element_exts, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 510

Block 510:
Func: append_field_element_exts, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^permutation^state.append_field_element_exts = self^permutation^state.append_field_element_exts.0.0
Transition: -> rp@.append_field_element_exts

Block 511:
Func: append_field_element_exts, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_field_element_exts

Block 512:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.set_from_slice.0.0 = self^permutation^state.append_message.0.0
    u32 elts_len.set_from_slice.0.0 = msg_len.append_message.0.0
    field elts.set_from_slice.0.0 = msg.append_message.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_message.0.0
    field rp@.set_from_slice = 513 <Field>
Transition: -> 1131

Block 513:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field self^state.permute.0.0 = self^permutation^state.append_message.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_message.0.0
    field rp@.permute = 514 <Field>
Transition: -> 1139

Block 514:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.permute
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field %RET^permutation^state.append_message = self^permutation^state.append_message.0.0
Transition: -> rp@.append_message

Block 515:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_message

Block 516:
Func: fork_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    Transcript { permutation: PoseidonPermutation { state: field[12] } }[n.fork_transcript.0.0] forks.fork_transcript.0.0
Transition: -> 517

Block 517:
Func: fork_transcript, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.fork_transcript.0.0 = 0 <U32>
Transition: 
    i.fork_transcript.0.0 != n.fork_transcript.0.0 ? -> 518 : -> 527

Block 518:
Func: fork_transcript, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 519

Block 519:
Func: fork_transcript, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[12 <U32>] forked_state.fork_transcript.0.0
Transition: -> 520

Block 520:
Func: fork_transcript, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.fork_transcript.0.0 = 0 <U32>
Transition: 
    j.fork_transcript.0.0 != 12 <U32> ? -> 521 : -> 524

Block 521:
Func: fork_transcript, Scope: 5
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 522

Block 522:
Func: fork_transcript, Scope: 6
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.fork_transcript.0.0 = self^permutation^state.fork_transcript.0.0[j.fork_transcript.0.0]
    forked_state.fork_transcript.0.0[j.fork_transcript.0.0] = load^0.fork_transcript.0.0 <field>
Transition: -> 523

Block 523:
Func: fork_transcript, Scope: 5
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.fork_transcript.0.0 = j.fork_transcript.0.0 + 1 <U32>
Transition: 
    j.fork_transcript.0.0 != 12 <U32> ? -> 521 : -> 524

Block 524:
Func: fork_transcript, Scope: 4
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 525

Block 525:
Func: fork_transcript, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^state.fork_transcript.0.0 = forked_state.fork_transcript.0.0
    field struct^1^permutation^state.fork_transcript.0.0 = struct^0^state.fork_transcript.0.0
    forks.fork_transcript.0.0[i.fork_transcript.0.0] = struct^1^permutation^state.fork_transcript.0.0 <field>
Transition: -> 526

Block 526:
Func: fork_transcript, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.fork_transcript.0.0 = i.fork_transcript.0.0 + 1 <U32>
Transition: 
    i.fork_transcript.0.0 != n.fork_transcript.0.0 ? -> 518 : -> 527

Block 527:
Func: fork_transcript, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 528

Block 528:
Func: fork_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.fork_transcript = forks.fork_transcript.0.0
Transition: -> rp@.fork_transcript

Block 529:
Func: fork_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.fork_transcript

Block 530:
Func: get_and_append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^permutation^state.append_message.0.0 = self^permutation^state.get_and_append_challenge.0.0
    u32 msg_len.append_message.0.0 = label_len.get_and_append_challenge.0.0
    field msg.append_message.0.0 = label.get_and_append_challenge.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0
    u32 SEL_DEGREE.append_message.0.0 = SEL_DEGREE.get_and_append_challenge.0.0
    u32 log2_num_fanin.append_message.0.0 = log2_num_fanin.get_and_append_challenge.0.0
    u32 num_fanin.append_message.0.0 = num_fanin.get_and_append_challenge.0.0
    field rp@.append_message = 531 <Field>
Transition: -> 1142

Block 531:
Func: get_and_append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^permutation^state.get_and_append_challenge.0.0 = %RET^permutation^state.append_message
    field self^permutation^state.get_and_append_challenge.0.0 = ret^0^permutation^state.get_and_append_challenge.0.0
    field self^state.squeeze.0.0 = self^permutation^state.get_and_append_challenge.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.squeeze.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0
    u32 SEL_DEGREE.squeeze.0.0 = SEL_DEGREE.get_and_append_challenge.0.0
    u32 log2_num_fanin.squeeze.0.0 = log2_num_fanin.get_and_append_challenge.0.0
    u32 num_fanin.squeeze.0.0 = num_fanin.get_and_append_challenge.0.0
    field rp@.squeeze = 532 <Field>
Transition: -> 1157

Block 532:
Func: get_and_append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.get_and_append_challenge.0.1 = %RET.squeeze
    field sq.get_and_append_challenge.0.0 = ret^0.get_and_append_challenge.0.1
    field load^0.get_and_append_challenge.0.0 = sq.get_and_append_challenge.0.0[0 <Field>]
    field load^1.get_and_append_challenge.0.0 = sq.get_and_append_challenge.0.0[1 <Field>]
    field struct^0^b0.get_and_append_challenge.0.0 = load^0.get_and_append_challenge.0.0
    field struct^0^b1.get_and_append_challenge.0.0 = load^1.get_and_append_challenge.0.0
    field struct^1^elements^b0.get_and_append_challenge.0.0 = struct^0^b0.get_and_append_challenge.0.0
    field struct^1^elements^b1.get_and_append_challenge.0.0 = struct^0^b1.get_and_append_challenge.0.0
    field challenge^elements^b0.get_and_append_challenge.0.0 = struct^1^elements^b0.get_and_append_challenge.0.0
    field challenge^elements^b1.get_and_append_challenge.0.0 = struct^1^elements^b1.get_and_append_challenge.0.0
    field struct^0^transcript^permutation^state.get_and_append_challenge.0.0 = self^permutation^state.get_and_append_challenge.0.0
    field struct^0^challenge^elements^b0.get_and_append_challenge.0.0 = challenge^elements^b0.get_and_append_challenge.0.0
    field struct^0^challenge^elements^b1.get_and_append_challenge.0.0 = challenge^elements^b1.get_and_append_challenge.0.0
    field %RET^challenge^elements^b0.get_and_append_challenge = struct^0^challenge^elements^b0.get_and_append_challenge.0.0
    field %RET^challenge^elements^b1.get_and_append_challenge = struct^0^challenge^elements^b1.get_and_append_challenge.0.0
    field %RET^transcript^permutation^state.get_and_append_challenge = struct^0^transcript^permutation^state.get_and_append_challenge.0.0
Transition: -> rp@.get_and_append_challenge

Block 533:
Func: get_and_append_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.get_and_append_challenge

Block 534:
Func: get_challenge_pows, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 3
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[3 <U32>] array^0.get_challenge_pows.0.0
    field init^0^0.get_challenge_pows.0.0 = 2334393380763430755 <Field>
    field init^0^1.get_challenge_pows.0.0 = 7286952176161813875 <Field>
    field init^0^2.get_challenge_pows.0.0 = 1936482678 <Field>
    array^0.get_challenge_pows.0.0[0 <U32>] = init^0^0.get_challenge_pows.0.0 <field>, init
    array^0.get_challenge_pows.0.0[1 <U32>] = init^0^1.get_challenge_pows.0.0 <field>, init
    array^0.get_challenge_pows.0.0[2 <U32>] = init^0^2.get_challenge_pows.0.0 <field>, init
    field self^permutation^state.get_and_append_challenge.0.0 = transcript^permutation^state.get_challenge_pows.0.0
    u32 label_len.get_and_append_challenge.0.0 = 3 <U32>
    field label.get_and_append_challenge.0.0 = array^0.get_challenge_pows.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_and_append_challenge.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0
    u32 SEL_DEGREE.get_and_append_challenge.0.0 = SEL_DEGREE.get_challenge_pows.0.0
    u32 log2_num_fanin.get_and_append_challenge.0.0 = log2_num_fanin.get_challenge_pows.0.0
    u32 num_fanin.get_and_append_challenge.0.0 = num_fanin.get_challenge_pows.0.0
    field rp@.get_and_append_challenge = 535 <Field>
Transition: -> 530

Block 535:
Func: get_challenge_pows, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^challenge^elements^b0.get_challenge_pows.0.0 = %RET^challenge^elements^b0.get_and_append_challenge
    field ret^0^challenge^elements^b1.get_challenge_pows.0.0 = %RET^challenge^elements^b1.get_and_append_challenge
    field ret^0^transcript^permutation^state.get_challenge_pows.0.0 = %RET^transcript^permutation^state.get_and_append_challenge
    field t_c^challenge^elements^b0.get_challenge_pows.0.0 = ret^0^challenge^elements^b0.get_challenge_pows.0.0
    field t_c^challenge^elements^b1.get_challenge_pows.0.0 = ret^0^challenge^elements^b1.get_challenge_pows.0.0
    field t_c^transcript^permutation^state.get_challenge_pows.0.0 = ret^0^transcript^permutation^state.get_challenge_pows.0.0
    field transcript^permutation^state.get_challenge_pows.0.0 = t_c^transcript^permutation^state.get_challenge_pows.0.0
    field alpha^b0.get_challenge_pows.0.0 = t_c^challenge^elements^b0.get_challenge_pows.0.0
    field alpha^b1.get_challenge_pows.0.0 = t_c^challenge^elements^b1.get_challenge_pows.0.0
    ExtField { b0: field, b1: field }[2 <U32> * size.get_challenge_pows.0.0] alpha_pows.get_challenge_pows.0.0
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.get_challenge_pows.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.get_challenge_pows.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.get_challenge_pows.0.0
    field rp@.to_ext = 536 <Field>
Transition: -> 1159

Block 536:
Func: get_challenge_pows, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.get_challenge_pows.0.0 = %RET^b0.to_ext
    field ret^0^b1.get_challenge_pows.0.0 = %RET^b1.to_ext
    field state^b0.get_challenge_pows.0.0 = ret^0^b0.get_challenge_pows.0.0
    field state^b1.get_challenge_pows.0.0 = ret^0^b1.get_challenge_pows.0.0
Transition: -> 537

Block 537:
Func: get_challenge_pows, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.get_challenge_pows.0.0 = 0 <U32>
Transition: 
    i.get_challenge_pows.0.0 != size.get_challenge_pows.0.0 ? -> 538 : -> 542

Block 538:
Func: get_challenge_pows, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 539

Block 539:
Func: get_challenge_pows, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    alpha_pows.get_challenge_pows.0.0[2 <U32> * i.get_challenge_pows.0.0] = state^b0.get_challenge_pows.0.0 <field>
    alpha_pows.get_challenge_pows.0.0[2 <U32> * i.get_challenge_pows.0.0 + 1 <U32>] = state^b1.get_challenge_pows.0.0 <field>
    field e0^b0.ext_mul.0.0 = state^b0.get_challenge_pows.0.0
    field e0^b1.ext_mul.0.0 = state^b1.get_challenge_pows.0.0
    field e1^b0.ext_mul.0.0 = alpha^b0.get_challenge_pows.0.0
    field e1^b1.ext_mul.0.0 = alpha^b1.get_challenge_pows.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.get_challenge_pows.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.get_challenge_pows.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.get_challenge_pows.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.get_challenge_pows.0.0
    field rp@.ext_mul = 540 <Field>
Transition: -> 1161

Block 540:
Func: get_challenge_pows, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.get_challenge_pows.1.0 = %RET^b0.ext_mul
    field ret^0^b1.get_challenge_pows.1.0 = %RET^b1.ext_mul
    field state^b0.get_challenge_pows.0.0 = ret^0^b0.get_challenge_pows.1.0
    field state^b1.get_challenge_pows.0.0 = ret^0^b1.get_challenge_pows.1.0
Transition: -> 541

Block 541:
Func: get_challenge_pows, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.get_challenge_pows.0.0 = i.get_challenge_pows.0.0 + 1 <U32>
Transition: 
    i.get_challenge_pows.0.0 != size.get_challenge_pows.0.0 ? -> 538 : -> 542

Block 542:
Func: get_challenge_pows, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 543

Block 543:
Func: get_challenge_pows, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^transcript^permutation^state.get_challenge_pows.0.0 = transcript^permutation^state.get_challenge_pows.0.0
    field struct^0^challenge_pows.get_challenge_pows.0.0 = alpha_pows.get_challenge_pows.0.0
    field %RET^challenge_pows.get_challenge_pows = struct^0^challenge_pows.get_challenge_pows.0.0
    field %RET^transcript^permutation^state.get_challenge_pows = struct^0^transcript^permutation^state.get_challenge_pows.0.0
Transition: -> rp@.get_challenge_pows

Block 544:
Func: get_challenge_pows, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.get_challenge_pows

Block 545:
Func: new_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[0 <U32>] array^0.new_transcript.0.0
    u32 elts_len.new_poseidon_permutation.0.0 = 0 <U32>
    field elts.new_poseidon_permutation.0.0 = array^0.new_transcript.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.new_poseidon_permutation.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.new_transcript.0.0
    u32 SEL_DEGREE.new_poseidon_permutation.0.0 = SEL_DEGREE.new_transcript.0.0
    u32 log2_num_fanin.new_poseidon_permutation.0.0 = log2_num_fanin.new_transcript.0.0
    u32 num_fanin.new_poseidon_permutation.0.0 = num_fanin.new_transcript.0.0
    field rp@.new_poseidon_permutation = 546 <Field>
Transition: -> 1163

Block 546:
Func: new_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.new_transcript.0.0 = %RET^state.new_poseidon_permutation
    field perm^state.new_transcript.0.0 = ret^0^state.new_transcript.0.0
    field self^state.set_from_slice.0.0 = perm^state.new_transcript.0.0
    u32 elts_len.set_from_slice.0.0 = label_len.new_transcript.0.0
    field elts.set_from_slice.0.0 = label.new_transcript.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.new_transcript.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.new_transcript.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.new_transcript.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.new_transcript.0.0
    field rp@.set_from_slice = 547 <Field>
Transition: -> 1173

Block 547:
Func: new_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.new_transcript.0.0 = %RET^state.set_from_slice
    field perm^state.new_transcript.0.0 = ret^0^state.new_transcript.0.0
    field self^state.permute.0.0 = perm^state.new_transcript.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.new_transcript.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.new_transcript.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.new_transcript.0.0
    u32 num_fanin.permute.0.0 = num_fanin.new_transcript.0.0
    field rp@.permute = 548 <Field>
Transition: -> 1181

Block 548:
Func: new_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.new_transcript.0.0 = %RET^state.permute
    field perm^state.new_transcript.0.0 = ret^0^state.new_transcript.0.0
    field struct^0^permutation^state.new_transcript.0.0 = perm^state.new_transcript.0.0
    field %RET^permutation^state.new_transcript = struct^0^permutation^state.new_transcript.0.0
Transition: -> rp@.new_transcript

Block 549:
Func: new_transcript, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.new_transcript

Block 550:
Func: read_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.squeeze.0.0 = self^permutation^state.read_challenge.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.squeeze.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.read_challenge.0.0
    u32 SEL_DEGREE.squeeze.0.0 = SEL_DEGREE.read_challenge.0.0
    u32 log2_num_fanin.squeeze.0.0 = log2_num_fanin.read_challenge.0.0
    u32 num_fanin.squeeze.0.0 = num_fanin.read_challenge.0.0
    field rp@.squeeze = 551 <Field>
Transition: -> 1184

Block 551:
Func: read_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.read_challenge.0.0 = %RET.squeeze
    field sq.read_challenge.0.0 = ret^0.read_challenge.0.0
    field load^0.read_challenge.0.0 = sq.read_challenge.0.0[0 <Field>]
    field load^1.read_challenge.0.0 = sq.read_challenge.0.0[1 <Field>]
    field struct^0^b0.read_challenge.0.0 = load^0.read_challenge.0.0
    field struct^0^b1.read_challenge.0.0 = load^1.read_challenge.0.0
    field struct^1^elements^b0.read_challenge.0.0 = struct^0^b0.read_challenge.0.0
    field struct^1^elements^b1.read_challenge.0.0 = struct^0^b1.read_challenge.0.0
    field %RET^elements^b0.read_challenge = struct^1^elements^b0.read_challenge.0.0
    field %RET^elements^b1.read_challenge = struct^1^elements^b1.read_challenge.0.0
Transition: -> rp@.read_challenge

Block 552:
Func: read_challenge, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.read_challenge

Block 553:
Func: ceil_log2, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    witness u32 width.ceil_log2.0.0
    assert width.ceil_log2.0.0 <= 32 <U32>
    u32 acc_bit.ceil_log2.0.0 = 1 <U32>
Transition: -> 554

Block 554:
Func: ceil_log2, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.ceil_log2.0.0 = 1 <U32>
Transition: 
    i.ceil_log2.0.0 != width.ceil_log2.0.0 ? -> 555 : -> 558

Block 555:
Func: ceil_log2, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 556

Block 556:
Func: ceil_log2, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 acc_bit.ceil_log2.0.0 = acc_bit.ceil_log2.0.0 * 2 <U32>
    witness u32 next_bit.ceil_log2.0.0
    assert next_bit.ceil_log2.0.0 * 1 <U32> - next_bit.ceil_log2.0.0 == 0 <U32>
    u32 acc_bit.ceil_log2.0.0 = acc_bit.ceil_log2.0.0 + next_bit.ceil_log2.0.0
Transition: -> 557

Block 557:
Func: ceil_log2, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.ceil_log2.0.0 = i.ceil_log2.0.0 + 1 <U32>
Transition: 
    i.ceil_log2.0.0 != width.ceil_log2.0.0 ? -> 555 : -> 558

Block 558:
Func: ceil_log2, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 559

Block 559:
Func: ceil_log2, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    assert acc_bit.ceil_log2.0.0 == x.ceil_log2.0.0
    u32 %RET.ceil_log2 = width.ceil_log2.0.0
Transition: -> rp@.ceil_log2

Block 560:
Func: ceil_log2, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ceil_log2

Block 561:
Func: max, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 %RET.max = a.max.0.0 < b.max.0.0 ? b.max.0.0 : a.max.0.0
Transition: -> rp@.max

Block 562:
Func: max, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.max

Block 563:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 564:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 565:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 566:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 567:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 568:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 569:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 570:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 571:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 572:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 573:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 574:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 575:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 576:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 577:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 578:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 579:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 580:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 581:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 582:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 583:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 584:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 585:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 586:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 587:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 588:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 589:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 590:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 591:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 592:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 593:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 594:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 595:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 596:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 597:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 598:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 599:
Func: max, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 %RET.max = a.max.0.0 < b.max.0.0 ? b.max.0.0 : a.max.0.0
Transition: -> rp@.max

Block 600:
Func: max, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.max

Block 601:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 602:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 603:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 604:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 605:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 606:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 607:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 608:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 609:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 610:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 611:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 612:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 613:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 614:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 615:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 616:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 617:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 618:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 619:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 620:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 621:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 622:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 623:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 624:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 625:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 626:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 627:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 628:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 629:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 630:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 631:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 632:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 633:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 634:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 635:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 636:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 637:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 638:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 639:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 640:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 641:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 642:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 643:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 644:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 645:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 646 <Field>
Transition: -> 109

Block 646:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 647:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 648:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.squeeze = self^state.squeeze.0.0
Transition: -> rp@.squeeze

Block 649:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.squeeze

Block 650:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 651 <Field>
Transition: -> 109

Block 651:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 652:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 653:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.squeeze = self^state.squeeze.0.0
Transition: -> rp@.squeeze

Block 654:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.squeeze

Block 655:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 656 <Field>
Transition: -> 109

Block 656:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 657:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 658:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 659:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 660:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 661:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 662:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 663:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 664:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 665:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 666:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 667:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 668:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 669:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 670:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 671:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 672:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 673:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 674:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 675:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 676:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 677:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 678:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 679:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 680:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 681:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 682:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 683:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 684:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    witness field inv_b0.ext_invert.0.0
    witness field inv_b1.ext_invert.0.0
    field struct^0^b0.ext_invert.0.0 = inv_b0.ext_invert.0.0
    field struct^0^b1.ext_invert.0.0 = inv_b1.ext_invert.0.0
    field inv^b0.ext_invert.0.0 = struct^0^b0.ext_invert.0.0
    field inv^b1.ext_invert.0.0 = struct^0^b1.ext_invert.0.0
    field e0^b0.ext_mul.0.0 = e^b0.ext_invert.0.0
    field e0^b1.ext_mul.0.0 = e^b1.ext_invert.0.0
    field e1^b0.ext_mul.0.0 = inv^b0.ext_invert.0.0
    field e1^b1.ext_mul.0.0 = inv^b1.ext_invert.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.ext_invert.0.0
    field rp@.ext_mul = 685 <Field>
Transition: -> 689

Block 685:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.ext_invert.0.0 = %RET^b0.ext_mul
    field ret^0^b1.ext_invert.0.0 = %RET^b1.ext_mul
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.ext_invert.0.0
    field rp@.to_ext = 686 <Field>
Transition: -> 691

Block 686:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.ext_invert.0.0 = %RET^b0.to_ext
    field ret^1^b1.ext_invert.0.0 = %RET^b1.to_ext
    field e0^b0.ext_eq.0.0 = ret^0^b0.ext_invert.0.0
    field e0^b1.ext_eq.0.0 = ret^0^b1.ext_invert.0.0
    field e1^b0.ext_eq.0.0 = ret^1^b0.ext_invert.0.0
    field e1^b1.ext_eq.0.0 = ret^1^b1.ext_invert.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_eq.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_invert.0.0
    u32 SEL_DEGREE.ext_eq.0.0 = SEL_DEGREE.ext_invert.0.0
    u32 log2_num_fanin.ext_eq.0.0 = log2_num_fanin.ext_invert.0.0
    u32 num_fanin.ext_eq.0.0 = num_fanin.ext_invert.0.0
    field rp@.ext_eq = 687 <Field>
Transition: -> 693

Block 687:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2.ext_invert.0.0 = %RET.ext_eq
    assert ret^2.ext_invert.0.0 == 1 <Field>
    field %RET^b0.ext_invert = inv^b0.ext_invert.0.0
    field %RET^b1.ext_invert = inv^b1.ext_invert.0.0
Transition: -> rp@.ext_invert

Block 688:
Func: ext_invert, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_invert

Block 689:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 690:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 691:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 692:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 693:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 694:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 695:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 696:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 697:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 698:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 699:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 700:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 701:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 702:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 703:
Func: ext_neg, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_neg.0.0 = -1 <Field> * e^b0.ext_neg.0.0
    field struct^0^b1.ext_neg.0.0 = -1 <Field> * e^b1.ext_neg.0.0
    field %RET^b0.ext_neg = struct^0^b0.ext_neg.0.0
    field %RET^b1.ext_neg = struct^0^b1.ext_neg.0.0
Transition: -> rp@.ext_neg

Block 704:
Func: ext_neg, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_neg

Block 705:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 706:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 707:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 708:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 709:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 710:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 711:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 712:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 713:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 714:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 715:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 716:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 717:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 718:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 719:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 720:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 721:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 722:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 723:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 724:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 725:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 726:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 727:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 728:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 729:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 730:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 731:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 732:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 733:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 734:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 735:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 736:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 737:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 738:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 739:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 740:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 741:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 742:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 743:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 744:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 745:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 746:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 747:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 748:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 749:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 750:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 751:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 752:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 753:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 754:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 755:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 756:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 757:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 758:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 759:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 760:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 761:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 762:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 763:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 764:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 765:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 766:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 767:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 768:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 769:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 770:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 771:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 772:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 773:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 774:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 775:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 776:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 777:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 778:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 779:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 780:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 781:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 782:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 783:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 784:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 785:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 786:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 787:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 788:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 789:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 790:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 791:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 792:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 793:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 794:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 795:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 796:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 797:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.from_bases.0.0 = b0.from_bases.0.0
    field struct^0^b1.from_bases.0.0 = b1.from_bases.0.0
    field %RET^b0.from_bases = struct^0^b0.from_bases.0.0
    field %RET^b1.from_bases = struct^0^b1.from_bases.0.0
Transition: -> rp@.from_bases

Block 798:
Func: from_bases, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.from_bases

Block 799:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.set_from_slice.0.0 = self^permutation^state.append_message.0.0
    u32 elts_len.set_from_slice.0.0 = msg_len.append_message.0.0
    field elts.set_from_slice.0.0 = msg.append_message.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_message.0.0
    field rp@.set_from_slice = 800 <Field>
Transition: -> 803

Block 800:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field self^state.permute.0.0 = self^permutation^state.append_message.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_message.0.0
    field rp@.permute = 801 <Field>
Transition: -> 811

Block 801:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.permute
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field %RET^permutation^state.append_message = self^permutation^state.append_message.0.0
Transition: -> rp@.append_message

Block 802:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_message

Block 803:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 804

Block 804:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 805 : -> 808

Block 805:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 806

Block 806:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 807

Block 807:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 805 : -> 808

Block 808:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 809

Block 809:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 810:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 811:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 812 <Field>
Transition: -> 109

Block 812:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 813:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 814:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.set_from_slice.0.0 = self^permutation^state.append_message.0.0
    u32 elts_len.set_from_slice.0.0 = msg_len.append_message.0.0
    field elts.set_from_slice.0.0 = msg.append_message.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_message.0.0
    field rp@.set_from_slice = 815 <Field>
Transition: -> 818

Block 815:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field self^state.permute.0.0 = self^permutation^state.append_message.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_message.0.0
    field rp@.permute = 816 <Field>
Transition: -> 826

Block 816:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.permute
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field %RET^permutation^state.append_message = self^permutation^state.append_message.0.0
Transition: -> rp@.append_message

Block 817:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_message

Block 818:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 819

Block 819:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 820 : -> 823

Block 820:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 821

Block 821:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 822

Block 822:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 820 : -> 823

Block 823:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 824

Block 824:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 825:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 826:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 827 <Field>
Transition: -> 109

Block 827:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 828:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 829:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[2 <U32>] array^0.append_field_element_ext.0.0
    field init^0^0.append_field_element_ext.0.0 = element^b0.append_field_element_ext.0.0
    field init^0^1.append_field_element_ext.0.0 = element^b1.append_field_element_ext.0.0
    array^0.append_field_element_ext.0.0[0 <U32>] = init^0^0.append_field_element_ext.0.0 <field>, init
    array^0.append_field_element_ext.0.0[1 <U32>] = init^0^1.append_field_element_ext.0.0 <field>, init
    field self^state.set_from_slice.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 elts_len.set_from_slice.0.0 = 2 <U32>
    field elts.set_from_slice.0.0 = array^0.append_field_element_ext.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.set_from_slice = 830 <Field>
Transition: -> 833

Block 830:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field self^state.permute.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.permute = 831 <Field>
Transition: -> 841

Block 831:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.permute
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field %RET^permutation^state.append_field_element_ext = self^permutation^state.append_field_element_ext.0.0
Transition: -> rp@.append_field_element_ext

Block 832:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_field_element_ext

Block 833:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 834

Block 834:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 835 : -> 838

Block 835:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 836

Block 836:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 837

Block 837:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 835 : -> 838

Block 838:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 839

Block 839:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 840:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 841:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 842 <Field>
Transition: -> 109

Block 842:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 843:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 844:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 845:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 846:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 847

Block 847:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.mle_eval.0.0 = 0 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 848 : -> 862

Block 848:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 849

Block 849:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 mle_len.mle_eval.0.0 = mle_len.mle_eval.0.0 / 2 <U32>
Transition: -> 850

Block 850:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.mle_eval.0.0 = 0 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 851 : -> 859

Block 851:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 852

Block 852:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.mle_eval.0.0
    field rp@.to_ext = 853 <Field>
Transition: -> 865

Block 853:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.mle_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.mle_eval.0.0 = %RET^b1.to_ext
    field load^0^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^0^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_sub.0.0 = ret^0^b0.mle_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.mle_eval.0.0
    field e1^b0.ext_sub.0.0 = load^0^b0.mle_eval.0.0
    field e1^b1.ext_sub.0.0 = load^0^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_sub = 854 <Field>
Transition: -> 867

Block 854:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.mle_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.mle_eval.0.0 = %RET^b1.ext_sub
    field load^1^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0]
    field load^1^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = ret^1^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = ret^1^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^1^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^1^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 855 <Field>
Transition: -> 869

Block 855:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^2^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field load^2^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^2^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field load^3^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0]
    field load^3^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^2^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = load^2^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^3^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 856 <Field>
Transition: -> 871

Block 856:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^3^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^2^b0.mle_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.mle_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.mle_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_add = 857 <Field>
Transition: -> 873

Block 857:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.mle_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.mle_eval.0.0 = %RET^b1.ext_add
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0] = ret^4^b0.mle_eval.0.0 <field>
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>] = ret^4^b1.mle_eval.0.0 <field>
Transition: -> 858

Block 858:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.mle_eval.0.0 = j.mle_eval.0.0 + 1 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 851 : -> 859

Block 859:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 860

Block 860:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 861

Block 861:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.mle_eval.0.0 = i.mle_eval.0.0 + 1 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 848 : -> 862

Block 862:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 863

Block 863:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field %RET^b0.mle_eval = load^0^b0.mle_eval.0.1
    field %RET^b1.mle_eval = load^0^b1.mle_eval.0.1
Transition: -> rp@.mle_eval

Block 864:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.mle_eval

Block 865:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 866:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 867:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 868:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 869:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 870:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 871:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 872:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 873:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 874:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 875:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 876:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 877:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 878:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 879:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 880

Block 880:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.mle_eval.0.0 = 0 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 881 : -> 895

Block 881:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 882

Block 882:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 mle_len.mle_eval.0.0 = mle_len.mle_eval.0.0 / 2 <U32>
Transition: -> 883

Block 883:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.mle_eval.0.0 = 0 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 884 : -> 892

Block 884:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 885

Block 885:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.mle_eval.0.0
    field rp@.to_ext = 886 <Field>
Transition: -> 898

Block 886:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.mle_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.mle_eval.0.0 = %RET^b1.to_ext
    field load^0^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^0^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_sub.0.0 = ret^0^b0.mle_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.mle_eval.0.0
    field e1^b0.ext_sub.0.0 = load^0^b0.mle_eval.0.0
    field e1^b1.ext_sub.0.0 = load^0^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_sub = 887 <Field>
Transition: -> 900

Block 887:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.mle_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.mle_eval.0.0 = %RET^b1.ext_sub
    field load^1^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0]
    field load^1^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = ret^1^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = ret^1^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^1^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^1^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 888 <Field>
Transition: -> 902

Block 888:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^2^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field load^2^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^2^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field load^3^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0]
    field load^3^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^2^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = load^2^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^3^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 889 <Field>
Transition: -> 904

Block 889:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^3^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^2^b0.mle_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.mle_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.mle_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_add = 890 <Field>
Transition: -> 906

Block 890:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.mle_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.mle_eval.0.0 = %RET^b1.ext_add
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0] = ret^4^b0.mle_eval.0.0 <field>
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>] = ret^4^b1.mle_eval.0.0 <field>
Transition: -> 891

Block 891:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.mle_eval.0.0 = j.mle_eval.0.0 + 1 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 884 : -> 892

Block 892:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 893

Block 893:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 894

Block 894:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.mle_eval.0.0 = i.mle_eval.0.0 + 1 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 881 : -> 895

Block 895:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 896

Block 896:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field %RET^b0.mle_eval = load^0^b0.mle_eval.0.1
    field %RET^b1.mle_eval = load^0^b1.mle_eval.0.1
Transition: -> rp@.mle_eval

Block 897:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.mle_eval

Block 898:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 899:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 900:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 901:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 902:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 903:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 904:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 905:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 906:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 907:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 908:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 909:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 910:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 911:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 912:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 913

Block 913:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.mle_eval.0.0 = 0 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 914 : -> 928

Block 914:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 915

Block 915:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 mle_len.mle_eval.0.0 = mle_len.mle_eval.0.0 / 2 <U32>
Transition: -> 916

Block 916:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 j.mle_eval.0.0 = 0 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 917 : -> 925

Block 917:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 918

Block 918:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.mle_eval.0.0
    field rp@.to_ext = 919 <Field>
Transition: -> 931

Block 919:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.mle_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.mle_eval.0.0 = %RET^b1.to_ext
    field load^0^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^0^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_sub.0.0 = ret^0^b0.mle_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.mle_eval.0.0
    field e1^b0.ext_sub.0.0 = load^0^b0.mle_eval.0.0
    field e1^b1.ext_sub.0.0 = load^0^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_sub = 920 <Field>
Transition: -> 933

Block 920:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.mle_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.mle_eval.0.0 = %RET^b1.ext_sub
    field load^1^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0]
    field load^1^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = ret^1^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = ret^1^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^1^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^1^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 921 <Field>
Transition: -> 935

Block 921:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^2^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field load^2^b0.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0]
    field load^2^b1.mle_eval.0.0 = point.mle_eval.0.0[2 <U32> * i.mle_eval.0.0 + 1 <U32>]
    field load^3^b0.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0]
    field load^3^b1.mle_eval.0.0 = self.mle_eval.0.0[2 <U32> * mle_len.mle_eval.0.0 + j.mle_eval.0.0 + 1 <U32>]
    field e0^b0.ext_mul.0.0 = load^2^b0.mle_eval.0.0
    field e0^b1.ext_mul.0.0 = load^2^b1.mle_eval.0.0
    field e1^b0.ext_mul.0.0 = load^3^b0.mle_eval.0.0
    field e1^b1.ext_mul.0.0 = load^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_mul = 922 <Field>
Transition: -> 937

Block 922:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.mle_eval.0.0 = %RET^b0.ext_mul
    field ret^3^b1.mle_eval.0.0 = %RET^b1.ext_mul
    field e0^b0.ext_add.0.0 = ret^2^b0.mle_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.mle_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.mle_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.mle_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.mle_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.mle_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.mle_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.mle_eval.0.0
    field rp@.ext_add = 923 <Field>
Transition: -> 939

Block 923:
Func: mle_eval, Scope: 6
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.mle_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.mle_eval.0.0 = %RET^b1.ext_add
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0] = ret^4^b0.mle_eval.0.0 <field>
    self.mle_eval.0.0[2 <U32> * j.mle_eval.0.0 + 1 <U32>] = ret^4^b1.mle_eval.0.0 <field>
Transition: -> 924

Block 924:
Func: mle_eval, Scope: 5
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    j.mle_eval.0.0 = j.mle_eval.0.0 + 1 <U32>
Transition: 
    j.mle_eval.0.0 != mle_len.mle_eval.0.0 ? -> 917 : -> 925

Block 925:
Func: mle_eval, Scope: 4
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 926

Block 926:
Func: mle_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 927

Block 927:
Func: mle_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.mle_eval.0.0 = i.mle_eval.0.0 + 1 <U32>
Transition: 
    i.mle_eval.0.0 != point_len.mle_eval.0.0 ? -> 914 : -> 928

Block 928:
Func: mle_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 929

Block 929:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field>]
    field load^0^b1.mle_eval.0.1 = self.mle_eval.0.0[2 <Field> * 0 <Field> + 1 <Field>]
    field %RET^b0.mle_eval = load^0^b0.mle_eval.0.1
    field %RET^b1.mle_eval = load^0^b1.mle_eval.0.1
Transition: -> rp@.mle_eval

Block 930:
Func: mle_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.mle_eval

Block 931:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 932:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 933:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 934:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 935:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 936:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 937:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 938:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 939:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 940:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 941:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 942:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 943:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 944:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 945:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 946:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 947:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 948:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 949:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 950:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 951:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 952 <Field>
Transition: -> 967

Block 952:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.eq_eval.0.0 = %RET^b1.to_ext
    field res^b0.eq_eval.0.0 = ret^0^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^0^b1.eq_eval.0.0
Transition: -> 953

Block 953:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.eq_eval.0.0 = 0 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 954 : -> 964

Block 954:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 955

Block 955:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field xi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field xi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field load^0^b0.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field yi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field yi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field e0^b0.ext_mul.0.0 = xi^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = xi^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 956 <Field>
Transition: -> 969

Block 956:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_mul
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_mul
    field xi_yi^b0.eq_eval.0.0 = ret^0^b0.eq_eval.1.0
    field xi_yi^b1.eq_eval.0.0 = ret^0^b1.eq_eval.1.0
    field e0^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 957 <Field>
Transition: -> 971

Block 957:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_add
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_add
    field e0^b0.ext_sub.0.0 = ret^0^b0.eq_eval.1.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.eq_eval.1.0
    field e1^b0.ext_sub.0.0 = xi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = xi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 958 <Field>
Transition: -> 973

Block 958:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.eq_eval.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_sub.0.0 = ret^1^b0.eq_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^1^b1.eq_eval.0.0
    field e1^b0.ext_sub.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 959 <Field>
Transition: -> 975

Block 959:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^2^b1.eq_eval.0.0 = %RET^b1.ext_sub
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 960 <Field>
Transition: -> 977

Block 960:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^3^b1.eq_eval.0.0 = %RET^b1.to_ext
    field e0^b0.ext_add.0.0 = ret^2^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 961 <Field>
Transition: -> 979

Block 961:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.eq_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.eq_eval.0.0 = %RET^b1.ext_add
    field e0^b0.ext_mul.0.0 = res^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = res^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = ret^4^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = ret^4^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 962 <Field>
Transition: -> 981

Block 962:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.eq_eval.0.0 = %RET^b0.ext_mul
    field ret^5^b1.eq_eval.0.0 = %RET^b1.ext_mul
    field res^b0.eq_eval.0.0 = ret^5^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^5^b1.eq_eval.0.0
Transition: -> 963

Block 963:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.eq_eval.0.0 = i.eq_eval.0.0 + 1 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 954 : -> 964

Block 964:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 965

Block 965:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^b0.eq_eval = res^b0.eq_eval.0.0
    field %RET^b1.eq_eval = res^b1.eq_eval.0.0
Transition: -> rp@.eq_eval

Block 966:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.eq_eval

Block 967:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 968:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 969:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 970:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 971:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 972:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 973:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 974:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 975:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 976:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 977:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 978:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 979:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 980:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 981:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 982:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 983:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 984:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 985:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 986:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 987:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 988:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 989:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 990 <Field>
Transition: -> 1005

Block 990:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^0^b1.eq_eval.0.0 = %RET^b1.to_ext
    field res^b0.eq_eval.0.0 = ret^0^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^0^b1.eq_eval.0.0
Transition: -> 991

Block 991:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.eq_eval.0.0 = 0 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 992 : -> 1002

Block 992:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 993

Block 993:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 4
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0^b0.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = x.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field xi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field xi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field load^0^b0.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0]
    field load^0^b1.eq_eval.0.0 = y.eq_eval.0.0[2 <U32> * i.eq_eval.0.0 + 1 <U32>]
    field yi^b0.eq_eval.0.0 = load^0^b0.eq_eval.0.0
    field yi^b1.eq_eval.0.0 = load^0^b1.eq_eval.0.0
    field e0^b0.ext_mul.0.0 = xi^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = xi^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 994 <Field>
Transition: -> 1007

Block 994:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_mul
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_mul
    field xi_yi^b0.eq_eval.0.0 = ret^0^b0.eq_eval.1.0
    field xi_yi^b1.eq_eval.0.0 = ret^0^b1.eq_eval.1.0
    field e0^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = xi_yi^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = xi_yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 995 <Field>
Transition: -> 1009

Block 995:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^b0.eq_eval.1.0 = %RET^b0.ext_add
    field ret^0^b1.eq_eval.1.0 = %RET^b1.ext_add
    field e0^b0.ext_sub.0.0 = ret^0^b0.eq_eval.1.0
    field e0^b1.ext_sub.0.0 = ret^0^b1.eq_eval.1.0
    field e1^b0.ext_sub.0.0 = xi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = xi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 996 <Field>
Transition: -> 1011

Block 996:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^1^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^1^b1.eq_eval.0.0 = %RET^b1.ext_sub
    field e0^b0.ext_sub.0.0 = ret^1^b0.eq_eval.0.0
    field e0^b1.ext_sub.0.0 = ret^1^b1.eq_eval.0.0
    field e1^b0.ext_sub.0.0 = yi^b0.eq_eval.0.0
    field e1^b1.ext_sub.0.0 = yi^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_sub.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_sub.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_sub.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_sub.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_sub = 997 <Field>
Transition: -> 1013

Block 997:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^2^b0.eq_eval.0.0 = %RET^b0.ext_sub
    field ret^2^b1.eq_eval.0.0 = %RET^b1.ext_sub
    u32 i.to_ext.0.0 = 1 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.to_ext.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.to_ext.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.to_ext.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.to_ext.0.0 = num_fanin.eq_eval.0.0
    field rp@.to_ext = 998 <Field>
Transition: -> 1015

Block 998:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^3^b0.eq_eval.0.0 = %RET^b0.to_ext
    field ret^3^b1.eq_eval.0.0 = %RET^b1.to_ext
    field e0^b0.ext_add.0.0 = ret^2^b0.eq_eval.0.0
    field e0^b1.ext_add.0.0 = ret^2^b1.eq_eval.0.0
    field e1^b0.ext_add.0.0 = ret^3^b0.eq_eval.0.0
    field e1^b1.ext_add.0.0 = ret^3^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_add.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_add.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_add.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_add.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_add = 999 <Field>
Transition: -> 1017

Block 999:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^4^b0.eq_eval.0.0 = %RET^b0.ext_add
    field ret^4^b1.eq_eval.0.0 = %RET^b1.ext_add
    field e0^b0.ext_mul.0.0 = res^b0.eq_eval.0.0
    field e0^b1.ext_mul.0.0 = res^b1.eq_eval.0.0
    field e1^b0.ext_mul.0.0 = ret^4^b0.eq_eval.0.0
    field e1^b1.ext_mul.0.0 = ret^4^b1.eq_eval.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.ext_mul.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.eq_eval.0.0
    u32 SEL_DEGREE.ext_mul.0.0 = SEL_DEGREE.eq_eval.0.0
    u32 log2_num_fanin.ext_mul.0.0 = log2_num_fanin.eq_eval.0.0
    u32 num_fanin.ext_mul.0.0 = num_fanin.eq_eval.0.0
    field rp@.ext_mul = 1000 <Field>
Transition: -> 1019

Block 1000:
Func: eq_eval, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^5^b0.eq_eval.0.0 = %RET^b0.ext_mul
    field ret^5^b1.eq_eval.0.0 = %RET^b1.ext_mul
    field res^b0.eq_eval.0.0 = ret^5^b0.eq_eval.0.0
    field res^b1.eq_eval.0.0 = ret^5^b1.eq_eval.0.0
Transition: -> 1001

Block 1001:
Func: eq_eval, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.eq_eval.0.0 = i.eq_eval.0.0 + 1 <U32>
Transition: 
    i.eq_eval.0.0 != len.eq_eval.0.0 ? -> 992 : -> 1002

Block 1002:
Func: eq_eval, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1003

Block 1003:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^b0.eq_eval = res^b0.eq_eval.0.0
    field %RET^b1.eq_eval = res^b1.eq_eval.0.0
Transition: -> rp@.eq_eval

Block 1004:
Func: eq_eval, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.eq_eval

Block 1005:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1006:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1007:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1008:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1009:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1010:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1011:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 1012:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 1013:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_sub.0.0 = e0^b0.ext_sub.0.0 - e1^b0.ext_sub.0.0
    field struct^0^b1.ext_sub.0.0 = e0^b1.ext_sub.0.0 - e1^b1.ext_sub.0.0
    field %RET^b0.ext_sub = struct^0^b0.ext_sub.0.0
    field %RET^b1.ext_sub = struct^0^b1.ext_sub.0.0
Transition: -> rp@.ext_sub

Block 1014:
Func: ext_sub, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_sub

Block 1015:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1016:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1017:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1018:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1019:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1020:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1021:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1022:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1023:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1024:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1025:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1026:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1027:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1028:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1029:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1030:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1031:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1032:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1033:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1034:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1035:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1036:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1037:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1038:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1039:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.ext_eq = e0^b0.ext_eq.0.0 == e1^b0.ext_eq.0.0 && e0^b1.ext_eq.0.0 == e1^b1.ext_eq.0.0 ? 1 <Field> : 0 <Field>
Transition: -> rp@.ext_eq

Block 1040:
Func: ext_eq, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_eq

Block 1041:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1042:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1043:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1044:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1045:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1046:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1047:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1048:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1049:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1050:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1051:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1052:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1053:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1054:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1055:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1056:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1057:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1058:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1059:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1060:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1061:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1062:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1063:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1064:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1065:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1066:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1067:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1068:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1069:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1070:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1071:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1072:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1073:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1074:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1075:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1076:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1077:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1078:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1079:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1080:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1081:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.ext_add.0.0 = e0^b0.ext_add.0.0 + e1^b0.ext_add.0.0
    field struct^0^b1.ext_add.0.0 = e0^b1.ext_add.0.0 + e1^b1.ext_add.0.0
    field %RET^b0.ext_add = struct^0^b0.ext_add.0.0
    field %RET^b1.ext_add = struct^0^b1.ext_add.0.0
Transition: -> rp@.ext_add

Block 1082:
Func: ext_add, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_add

Block 1083:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1084

Block 1084:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1085 : -> 1088

Block 1085:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1086

Block 1086:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1087

Block 1087:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1085 : -> 1088

Block 1088:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1089

Block 1089:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1090:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1091:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1092 <Field>
Transition: -> 109

Block 1092:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1093:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1094:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1095

Block 1095:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1096 : -> 1099

Block 1096:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1097

Block 1097:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1098

Block 1098:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1096 : -> 1099

Block 1099:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1100

Block 1100:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1101:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1102:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1103 <Field>
Transition: -> 109

Block 1103:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1104:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1105:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1106

Block 1106:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1107 : -> 1110

Block 1107:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1108

Block 1108:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1109

Block 1109:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1107 : -> 1110

Block 1110:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1111

Block 1111:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1112:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1113:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1114 <Field>
Transition: -> 109

Block 1114:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1115:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1116:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[2 <U32>] array^0.append_field_element_ext.0.0
    field init^0^0.append_field_element_ext.0.0 = element^b0.append_field_element_ext.0.0
    field init^0^1.append_field_element_ext.0.0 = element^b1.append_field_element_ext.0.0
    array^0.append_field_element_ext.0.0[0 <U32>] = init^0^0.append_field_element_ext.0.0 <field>, init
    array^0.append_field_element_ext.0.0[1 <U32>] = init^0^1.append_field_element_ext.0.0 <field>, init
    field self^state.set_from_slice.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 elts_len.set_from_slice.0.0 = 2 <U32>
    field elts.set_from_slice.0.0 = array^0.append_field_element_ext.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.set_from_slice = 1117 <Field>
Transition: -> 1120

Block 1117:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field self^state.permute.0.0 = self^permutation^state.append_field_element_ext.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_field_element_ext.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_field_element_ext.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_field_element_ext.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_field_element_ext.0.0
    field rp@.permute = 1118 <Field>
Transition: -> 1128

Block 1118:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_field_element_ext.0.0 = %RET^state.permute
    field self^permutation^state.append_field_element_ext.0.0 = ret^0^state.append_field_element_ext.0.0
    field %RET^permutation^state.append_field_element_ext = self^permutation^state.append_field_element_ext.0.0
Transition: -> rp@.append_field_element_ext

Block 1119:
Func: append_field_element_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_field_element_ext

Block 1120:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1121

Block 1121:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1122 : -> 1125

Block 1122:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1123

Block 1123:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1124

Block 1124:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1122 : -> 1125

Block 1125:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1126

Block 1126:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1127:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1128:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1129 <Field>
Transition: -> 109

Block 1129:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1130:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1131:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1132

Block 1132:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1133 : -> 1136

Block 1133:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1134

Block 1134:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1135

Block 1135:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1133 : -> 1136

Block 1136:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1137

Block 1137:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1138:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1139:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1140 <Field>
Transition: -> 109

Block 1140:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1141:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1142:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field self^state.set_from_slice.0.0 = self^permutation^state.append_message.0.0
    u32 elts_len.set_from_slice.0.0 = msg_len.append_message.0.0
    field elts.set_from_slice.0.0 = msg.append_message.0.0
    u32 start_idx.set_from_slice.0.0 = 0 <U32>
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.set_from_slice.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.set_from_slice.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.set_from_slice.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.set_from_slice.0.0 = num_fanin.append_message.0.0
    field rp@.set_from_slice = 1143 <Field>
Transition: -> 1146

Block 1143:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.set_from_slice
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field self^state.permute.0.0 = self^permutation^state.append_message.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.append_message.0.0
    u32 SEL_DEGREE.permute.0.0 = SEL_DEGREE.append_message.0.0
    u32 log2_num_fanin.permute.0.0 = log2_num_fanin.append_message.0.0
    u32 num_fanin.permute.0.0 = num_fanin.append_message.0.0
    field rp@.permute = 1144 <Field>
Transition: -> 1154

Block 1144:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0^state.append_message.0.0 = %RET^state.permute
    field self^permutation^state.append_message.0.0 = ret^0^state.append_message.0.0
    field %RET^permutation^state.append_message = self^permutation^state.append_message.0.0
Transition: -> rp@.append_message

Block 1145:
Func: append_message, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.append_message

Block 1146:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1147

Block 1147:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1148 : -> 1151

Block 1148:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1149

Block 1149:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1150

Block 1150:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1148 : -> 1151

Block 1151:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1152

Block 1152:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1153:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1154:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1155 <Field>
Transition: -> 109

Block 1155:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1156:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1157:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.squeeze = self^state.squeeze.0.0
Transition: -> rp@.squeeze

Block 1158:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.squeeze

Block 1159:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^b0.to_ext.0.0 = (F)i.to_ext.0.0
    field struct^0^b1.to_ext.0.0 = 0 <Field>
    field %RET^b0.to_ext = struct^0^b0.to_ext.0.0
    field %RET^b1.to_ext = struct^0^b1.to_ext.0.0
Transition: -> rp@.to_ext

Block 1160:
Func: to_ext, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.to_ext

Block 1161:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field t0.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t1.ext_mul.0.0 = e0^b0.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field t2.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b0.ext_mul.0.0
    field t3.ext_mul.0.0 = e0^b1.ext_mul.0.0 * e1^b1.ext_mul.0.0
    field c0.ext_mul.0.0 = t0.ext_mul.0.0 + 7 <Field> * t3.ext_mul.0.0
    field c1.ext_mul.0.0 = t1.ext_mul.0.0 + t2.ext_mul.0.0
    field struct^0^b0.ext_mul.0.0 = c0.ext_mul.0.0
    field struct^0^b1.ext_mul.0.0 = c1.ext_mul.0.0
    field %RET^b0.ext_mul = struct^0^b0.ext_mul.0.0
    field %RET^b1.ext_mul = struct^0^b1.ext_mul.0.0
Transition: -> rp@.ext_mul

Block 1162:
Func: ext_mul, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.ext_mul

Block 1163:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field[12 <U32>] array^0.new_poseidon_permutation.0.0
    field init^0^0.new_poseidon_permutation.0.0 = 0 <Field>
    u32 index@.new_poseidon_permutation.0.0 = 0 <U32>
Transition: 
    index@.new_poseidon_permutation.0.0 != 12 <U32> ? -> 1164 : -> 1165

Block 1164:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 12, While Loop: false
RO Ops: 0, VM Ops: 1
Num Cons: -
Inputs:
Outputs:
Instructions:
    array^0.new_poseidon_permutation.0.0[index@.new_poseidon_permutation.0.0] = init^0^0.new_poseidon_permutation.0.0 <field>, init
    index@.new_poseidon_permutation.0.0 = index@.new_poseidon_permutation.0.0 + 1 <U32>
Transition: 
    index@.new_poseidon_permutation.0.0 != 12 <U32> ? -> 1164 : -> 1165

Block 1165:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field state.new_poseidon_permutation.0.0 = array^0.new_poseidon_permutation.0.0
Transition: -> 1166

Block 1166:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.new_poseidon_permutation.0.0 = 0 <U32>
Transition: 
    i.new_poseidon_permutation.0.0 != elts_len.new_poseidon_permutation.0.0 ? -> 1167 : -> 1170

Block 1167:
Func: new_poseidon_permutation, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1168

Block 1168:
Func: new_poseidon_permutation, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.new_poseidon_permutation.0.0 = elts.new_poseidon_permutation.0.0[i.new_poseidon_permutation.0.0]
    state.new_poseidon_permutation.0.0[i.new_poseidon_permutation.0.0] = load^0.new_poseidon_permutation.0.0 <field>
Transition: -> 1169

Block 1169:
Func: new_poseidon_permutation, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.new_poseidon_permutation.0.0 = i.new_poseidon_permutation.0.0 + 1 <U32>
Transition: 
    i.new_poseidon_permutation.0.0 != elts_len.new_poseidon_permutation.0.0 ? -> 1167 : -> 1170

Block 1170:
Func: new_poseidon_permutation, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1171

Block 1171:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field struct^0^state.new_poseidon_permutation.0.0 = state.new_poseidon_permutation.0.0
    field %RET^state.new_poseidon_permutation = struct^0^state.new_poseidon_permutation.0.0
Transition: -> rp@.new_poseidon_permutation

Block 1172:
Func: new_poseidon_permutation, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.new_poseidon_permutation

Block 1173:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1174

Block 1174:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    u32 i.set_from_slice.0.0 = 0 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1175 : -> 1178

Block 1175:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: true
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1176

Block 1176:
Func: set_from_slice, Scope: 3
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 2
Num Cons: -
Inputs:
Outputs:
Instructions:
    field load^0.set_from_slice.0.0 = elts.set_from_slice.0.0[i.set_from_slice.0.0]
    self^state.set_from_slice.0.0[start_idx.set_from_slice.0.0 + i.set_from_slice.0.0] = load^0.set_from_slice.0.0 <field>
Transition: -> 1177

Block 1177:
Func: set_from_slice, Scope: 2
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    i.set_from_slice.0.0 = i.set_from_slice.0.0 + 1 <U32>
Transition: 
    i.set_from_slice.0.0 != elts_len.set_from_slice.0.0 ? -> 1175 : -> 1178

Block 1178:
Func: set_from_slice, Scope: 1
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> 1179

Block 1179:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET^state.set_from_slice = self^state.set_from_slice.0.0
Transition: -> rp@.set_from_slice

Block 1180:
Func: set_from_slice, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.set_from_slice

Block 1181:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field input.poseidon.0.0 = self^state.permute.0.0
    u32 MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.poseidon.0.0 = MAINCONSTRAIN_SUMCHECK_BATCH_SIZE.permute.0.0
    u32 SEL_DEGREE.poseidon.0.0 = SEL_DEGREE.permute.0.0
    u32 log2_num_fanin.poseidon.0.0 = log2_num_fanin.permute.0.0
    u32 num_fanin.poseidon.0.0 = num_fanin.permute.0.0
    field rp@.poseidon = 1182 <Field>
Transition: -> 109

Block 1182:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field ret^0.permute.0.0 = %RET.poseidon
    field self^state.permute.0.0 = ret^0.permute.0.0
    field %RET^state.permute = self^state.permute.0.0
Transition: -> rp@.permute

Block 1183:
Func: permute, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.permute

Block 1184:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
    field %RET.squeeze = self^state.squeeze.0.0
Transition: -> rp@.squeeze

Block 1185:
Func: squeeze, Scope: 0
Exec Bound: 1, While Loop: false
RO Ops: 0, VM Ops: 0
Num Cons: -
Inputs:
Outputs:
Instructions:
Transition: -> rp@.squeeze


--
Optimization:
