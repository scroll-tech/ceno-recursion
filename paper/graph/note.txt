For CirC Graph:
The experiment is conducted across 7 benchmarks. Each benchmark is 


All polynomial commitments in the tests are ran in multicore, to allow CirC to compute more complex benchmarks. Note that such a construction benefits CirC more than CoBBl, as the CirC compiler & prover spends a larger fraction of time on commitments than CoBBl.
The graph shows that, when running on the exact same benchmark & input, CoBBl generally outperforms CirC on all of Compiler, Prover, & Verifier runtime. In particular, it achieves up to 100x faster compiler time and up to 50x prover time. One can observe further efficiency if the upper bound on number of iteration.

For Jolt Graph:

For Benchmark Graph:

For Opt Graph: